{"remainingRequest":"D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\知识库系统\\admin\\src\\views\\km\\datasetting\\DictList.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\知识库系统\\admin\\src\\views\\km\\datasetting\\DictList.vue","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n  import { filterObj } from '@/utils/util';\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\n  import DictModal from './modules/DictModal'\n  import DictItemList from './DictItemList'\n  import { getAction } from '@/api/manage'\n  import { UI_CACHE_DB_DICT_DATA } from \"@/store/mutation-types\"\n  import Vue from 'vue'\n\n  export default {\n    name: \"DictList\",\n    mixins:[JeecgListMixin],\n    components: {DictModal, DictItemList},\n    data() {\n      return {\n        description: '这是文档属性页面',\n        visible: false,\n        // 查询条件\n        queryParam: {\n          dictCode: \"\",\n          dictName: \"\",\n        },\n        // 表头\n        columns: [\n          {\n            title: '操作',\n            dataIndex: 'action',\n            align: \"center\",\n            scopedSlots: {customRender: 'action'},\n          },\n          {\n            title: '属性名称',\n            align: \"left\",\n            dataIndex: 'dictName',\n          },\n          {\n            title: '属性编号',\n            align: \"left\",\n            dataIndex: 'dictCode',\n          },\n          {\n            title: '描述',\n            align: \"left\",\n            dataIndex: 'description',\n          },\n\n        ],\n        dict: \"\",\n        labelCol: {\n          xs: {span: 8},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 16},\n          sm: {span: 19},\n        },\n        url: {\n          list: \"/sys/dict/listKM\",\n          delete: \"/sys/dict/delete\",\n          exportXlsUrl: \"sys/dict/exportXls\",\n          importExcelUrl: \"sys/dict/importExcel\",\n          refleshCache: \"sys/dict/refleshCache\",\n          queryAllDictItems: \"sys/dict/queryAllDictItems\",\n        },\n      }\n    },\n    computed: {\n      importExcelUrl: function () {\n        return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\n      }\n    },\n    methods: {\n      getQueryParams() {\n        var param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        if (this.superQueryParams) {\n          param['superQueryParams'] = encodeURI(this.superQueryParams)\n          param['superQueryMatchType'] = this.superQueryMatchType\n        }\n        return filterObj(param);\n      },\n      //取消选择\n      cancelDict() {\n        this.dict = \"\";\n        this.visible = false;\n        this.loadData();\n      },\n      //编辑属性数据\n      editDictItem(record) {\n        this.$refs.dictItemList.edit(record);\n      },\n      // 重置属性类型搜索框的内容\n      searchReset() {\n        var that = this;\n        that.queryParam.dictName = \"\";\n        that.queryParam.dictCode = \"\";\n        that.loadData(this.ipagination.current);\n      },\n      openDeleteList(){\n        this.$refs.dictDeleteList.show()\n      },\n      refleshCache(){\n        getAction(this.url.refleshCache).then((res) => {\n          if (res.success) {\n            //重新加载缓存\n            getAction(this.url.queryAllDictItems).then((res) => {\n              if (res.success) {\n                Vue.ls.remove(UI_CACHE_DB_DICT_DATA)\n                Vue.ls.set(UI_CACHE_DB_DICT_DATA, res.result, 7 * 24 * 60 * 60 * 1000)\n              }\n            })\n            this.$message.success(\"刷新缓存完成！\");\n          }\n        }).catch(e=>{\n          this.$message.warn(\"刷新缓存失败！\");\n          console.log(\"刷新失败\",e)\n        })\n      }\n    },\n    watch: {\n      openKeys(val) {\n        console.log('openKeys', val)\n      },\n    },\n  }\n",{"version":3,"sources":["DictList.vue"],"names":[],"mappings":";AAufile":"DictList.vue","sourceRoot":"src/views/km/datasetting","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <!-- 左侧面板 -->\n    <div class=\"table-page-search-wrapper\">\n\n      <div class=\"table-operator\" style=\"border-top: 5px\">\n\n        <a-button type=\"primary\" icon=\"sync\" @click=\"refleshCache()\">刷新缓存</a-button>\n\n      </div>\n\n      <a-table\n        ref=\"table\"\n        rowKey=\"id\"\n        size=\"middle\"\n        :columns=\"columns\"\n        :dataSource=\"dataSource\"\n        :pagination=\"ipagination\"\n        :loading=\"loading\"\n        @change=\"handleTableChange\">\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <a @click=\"handleEdit(record)\">\n            <a-icon type=\"edit\"/>\n            编辑\n          </a>\n          <a-divider type=\"vertical\"/>\n          <a @click=\"editDictItem(record)\"><a-icon type=\"setting\"/> 属性配置</a>\n\n        </span>\n      </a-table>\n\n    </div>\n    <dict-modal ref=\"modalForm\" @ok=\"modalFormOk\"></dict-modal>  <!-- 属性类型 -->\n    <dict-item-list ref=\"dictItemList\"></dict-item-list>\n    <!--<dict-delete-list ref=\"dictDeleteList\" @refresh=\"() =>loadData()\"></dict-delete-list>-->\n  </a-card>\n</template>\n\n<script>\n  import { filterObj } from '@/utils/util';\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\n  import DictModal from './modules/DictModal'\n  import DictItemList from './DictItemList'\n  import { getAction } from '@/api/manage'\n  import { UI_CACHE_DB_DICT_DATA } from \"@/store/mutation-types\"\n  import Vue from 'vue'\n\n  export default {\n    name: \"DictList\",\n    mixins:[JeecgListMixin],\n    components: {DictModal, DictItemList},\n    data() {\n      return {\n        description: '这是文档属性页面',\n        visible: false,\n        // 查询条件\n        queryParam: {\n          dictCode: \"\",\n          dictName: \"\",\n        },\n        // 表头\n        columns: [\n          {\n            title: '操作',\n            dataIndex: 'action',\n            align: \"center\",\n            scopedSlots: {customRender: 'action'},\n          },\n          {\n            title: '属性名称',\n            align: \"left\",\n            dataIndex: 'dictName',\n          },\n          {\n            title: '属性编号',\n            align: \"left\",\n            dataIndex: 'dictCode',\n          },\n          {\n            title: '描述',\n            align: \"left\",\n            dataIndex: 'description',\n          },\n\n        ],\n        dict: \"\",\n        labelCol: {\n          xs: {span: 8},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 16},\n          sm: {span: 19},\n        },\n        url: {\n          list: \"/sys/dict/listKM\",\n          delete: \"/sys/dict/delete\",\n          exportXlsUrl: \"sys/dict/exportXls\",\n          importExcelUrl: \"sys/dict/importExcel\",\n          refleshCache: \"sys/dict/refleshCache\",\n          queryAllDictItems: \"sys/dict/queryAllDictItems\",\n        },\n      }\n    },\n    computed: {\n      importExcelUrl: function () {\n        return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\n      }\n    },\n    methods: {\n      getQueryParams() {\n        var param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        if (this.superQueryParams) {\n          param['superQueryParams'] = encodeURI(this.superQueryParams)\n          param['superQueryMatchType'] = this.superQueryMatchType\n        }\n        return filterObj(param);\n      },\n      //取消选择\n      cancelDict() {\n        this.dict = \"\";\n        this.visible = false;\n        this.loadData();\n      },\n      //编辑属性数据\n      editDictItem(record) {\n        this.$refs.dictItemList.edit(record);\n      },\n      // 重置属性类型搜索框的内容\n      searchReset() {\n        var that = this;\n        that.queryParam.dictName = \"\";\n        that.queryParam.dictCode = \"\";\n        that.loadData(this.ipagination.current);\n      },\n      openDeleteList(){\n        this.$refs.dictDeleteList.show()\n      },\n      refleshCache(){\n        getAction(this.url.refleshCache).then((res) => {\n          if (res.success) {\n            //重新加载缓存\n            getAction(this.url.queryAllDictItems).then((res) => {\n              if (res.success) {\n                Vue.ls.remove(UI_CACHE_DB_DICT_DATA)\n                Vue.ls.set(UI_CACHE_DB_DICT_DATA, res.result, 7 * 24 * 60 * 60 * 1000)\n              }\n            })\n            this.$message.success(\"刷新缓存完成！\");\n          }\n        }).catch(e=>{\n          this.$message.warn(\"刷新缓存失败！\");\n          console.log(\"刷新失败\",e)\n        })\n      }\n    },\n    watch: {\n      openKeys(val) {\n        console.log('openKeys', val)\n      },\n    },\n  }\n</script>\n<style scoped>\n  @import '~@assets/less/common.less'\n</style>"]}]}