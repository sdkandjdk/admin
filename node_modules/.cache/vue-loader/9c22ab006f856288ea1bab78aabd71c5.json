{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSelectMultiple.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSelectMultiple.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["\n  //option {label:,value:}\n  export default {\n    name: 'JSelectMultiple',\n    props: {\n      placeholder:{\n        type: String,\n        default:'',\n        required: false\n      },\n      value:{\n        type: String,\n        required: false\n      },\n      readOnly:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      options:{\n        type: Array,\n        required: true\n      },\n      triggerChange:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      spliter:{\n        type: String,\n        required: false,\n        default: ','\n      },\n      popContainer:{\n        type:String,\n        default:'',\n        required:false\n      },\n    },\n    data(){\n      return {\n        arrayValue:!this.value?[]:this.value.split(this.spliter)\n      }\n    },\n    watch:{\n      value (val) {\n        if(!val){\n          this.arrayValue = []\n        }else{\n          this.arrayValue = this.value.split(this.spliter)\n        }\n      }\n    },\n    methods:{\n      onChange (selectedValue) {\n        if(this.triggerChange){\n          this.$emit('change', selectedValue.join(this.spliter));\n        }else{\n          this.$emit('input', selectedValue.join(this.spliter));\n        }\n      },\n      getParentContainer(node){\n        if(!this.popContainer){\n          return node.parentNode\n        }else{\n          return document.querySelector(this.popContainer)\n        }\n      }\n    },\n\n  }\n",{"version":3,"sources":["JSelectMultiple.vue"],"names":[],"mappings":";AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"JSelectMultiple.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <a-select :value=\"arrayValue\" @change=\"onChange\" mode=\"multiple\" :placeholder=\"placeholder\">\n    <a-select-option\n      v-for=\"(item,index) in options\"\n      :key=\"index\"\n      :getPopupContainer=\"getParentContainer\"\n      :value=\"item.value\">\n      {{ item.text || item.label }}\n    </a-select-option>\n  </a-select>\n</template>\n\n<script>\n  //option {label:,value:}\n  export default {\n    name: 'JSelectMultiple',\n    props: {\n      placeholder:{\n        type: String,\n        default:'',\n        required: false\n      },\n      value:{\n        type: String,\n        required: false\n      },\n      readOnly:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      options:{\n        type: Array,\n        required: true\n      },\n      triggerChange:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      spliter:{\n        type: String,\n        required: false,\n        default: ','\n      },\n      popContainer:{\n        type:String,\n        default:'',\n        required:false\n      },\n    },\n    data(){\n      return {\n        arrayValue:!this.value?[]:this.value.split(this.spliter)\n      }\n    },\n    watch:{\n      value (val) {\n        if(!val){\n          this.arrayValue = []\n        }else{\n          this.arrayValue = this.value.split(this.spliter)\n        }\n      }\n    },\n    methods:{\n      onChange (selectedValue) {\n        if(this.triggerChange){\n          this.$emit('change', selectedValue.join(this.spliter));\n        }else{\n          this.$emit('input', selectedValue.join(this.spliter));\n        }\n      },\n      getParentContainer(node){\n        if(!this.popContainer){\n          return node.parentNode\n        }else{\n          return document.querySelector(this.popContainer)\n        }\n      }\n    },\n\n  }\n</script>\n"]}]}