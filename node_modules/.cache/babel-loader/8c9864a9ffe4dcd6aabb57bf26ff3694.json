{"remainingRequest":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\知识库系统\\admin\\src\\views\\system\\modules\\SelectUserModal.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\知识库系统\\admin\\src\\views\\system\\modules\\SelectUserModal.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["import { filterObj } from '@/utils/util';\nimport { getAction } from '@/api/manage';\nexport default {\n  name: \"SelectUserModal\",\n  data: function data() {\n    return {\n      title: \"添加已有用户\",\n      names: [],\n      visible: false,\n      placement: 'right',\n      description: '',\n      // 查询条件\n      queryParam: {},\n      // 表头\n      columns1: [{\n        title: '#',\n        dataIndex: '',\n        key: 'rowIndex',\n        width: 50,\n        align: \"center\",\n        customRender: function customRender(t, r, index) {\n          return parseInt(index) + 1;\n        }\n      }, {\n        title: '用户账号',\n        align: \"center\",\n        width: 100,\n        dataIndex: 'username'\n      }, {\n        title: '用户名称',\n        align: \"center\",\n        width: 100,\n        dataIndex: 'realname'\n      }, {\n        title: '性别',\n        align: \"center\",\n        width: 100,\n        dataIndex: 'sex_dictText'\n      }, {\n        title: '电话',\n        align: \"center\",\n        width: 100,\n        dataIndex: 'phone'\n      }, {\n        title: '部门',\n        align: \"center\",\n        width: 150,\n        dataIndex: 'orgCode'\n      }],\n      columns2: [{\n        title: '用户账号',\n        align: \"center\",\n        dataIndex: 'username'\n      }, {\n        title: '用户名称',\n        align: \"center\",\n        dataIndex: 'realname'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        align: \"center\",\n        width: 100,\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      //数据集\n      dataSource1: [],\n      dataSource2: [],\n      // 分页参数\n      ipagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + \"-\" + range[1] + \" 共\" + total + \"条\";\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      loading: false,\n      selectedRowKeys: [],\n      selectedRows: [],\n      url: {\n        list: \"/sys/user/list\"\n      }\n    };\n  },\n  created: function created() {\n    this.loadData();\n  },\n  methods: {\n    searchQuery: function searchQuery() {\n      this.loadData(1);\n    },\n    searchReset: function searchReset() {\n      this.queryParam = {};\n      this.loadData(1);\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      this.dataSource2 = this.selectedRowKeys;\n      console.log(\"data:\" + this.dataSource2);\n      this.$emit(\"selectFinished\", this.dataSource2);\n      this.visible = false;\n    },\n    add: function add() {\n      this.visible = true;\n    },\n    loadData: function loadData(arg) {\n      var _this = this;\n      //加载数据 若传入参数1则加载第一页的内容\n      if (arg === 1) {\n        this.ipagination.current = 1;\n      }\n      var params = this.getQueryParams(); //查询条件\n      getAction(this.url.list, params).then(function (res) {\n        if (res.success) {\n          _this.dataSource1 = res.result.records;\n          _this.ipagination.total = res.result.total;\n        }\n      });\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n    getQueryField: function getQueryField() {\n      //TODO 字段权限控制\n    },\n    onSelectAll: function onSelectAll(selected, selectedRows, changeRows) {\n      if (selected === true) {\n        for (var a = 0; a < changeRows.length; a++) {\n          this.dataSource2.push(changeRows[a]);\n        }\n      } else {\n        for (var b = 0; b < changeRows.length; b++) {\n          this.dataSource2.splice(this.dataSource2.indexOf(changeRows[b]), 1);\n        }\n      }\n      // console.log(selected, selectedRows, changeRows);\n    },\n    onSelect: function onSelect(record, selected) {\n      if (selected === true) {\n        this.dataSource2.push(record);\n      } else {\n        var index = this.dataSource2.indexOf(record);\n        //console.log();\n        if (index >= 0) {\n          this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\n        }\n      }\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectionRows = selectedRows;\n    },\n    onClearSelected: function onClearSelected() {\n      this.selectedRowKeys = [];\n      this.selectionRows = [];\n    },\n    handleDelete: function handleDelete(record) {\n      this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      console.log(sorter);\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\";\n      }\n      this.ipagination = pagination;\n      this.loadData();\n    }\n  }\n};",{"version":3,"names":["filterObj","getAction","name","data","title","names","visible","placement","description","queryParam","columns1","dataIndex","key","width","align","customRender","t","r","index","parseInt","columns2","scopedSlots","dataSource1","dataSource2","ipagination","current","pageSize","pageSizeOptions","showTotal","total","range","showQuickJumper","showSizeChanger","isorter","column","order","loading","selectedRowKeys","selectedRows","url","list","created","loadData","methods","searchQuery","searchReset","handleCancel","handleOk","console","log","$emit","add","arg","_this","params","getQueryParams","then","res","success","result","records","param","Object","assign","field","getQueryField","pageNo","onSelectAll","selected","changeRows","a","length","push","b","splice","indexOf","onSelect","record","onSelectChange","selectionRows","onClearSelected","handleDelete","handleTableChange","pagination","filters","sorter","keys"],"sources":["src/views/system/modules/SelectUserModal.vue"],"sourcesContent":["<template>\n  <div>\n    <a-modal\n      centered\n      :title=\"title\"\n      :width=\"1000\"\n      :visible=\"visible\"\n      @ok=\"handleOk\"\n      @cancel=\"handleCancel\"\n      cancelText=\"关闭\">\n\n\n      <!-- 查询区域 -->\n      <div class=\"table-page-search-wrapper\">\n        <a-form layout=\"inline\"  @keyup.enter.native=\"searchQuery\">\n          <a-row :gutter=\"24\">\n\n            <a-col :span=\"10\">\n              <a-form-item label=\"用户账号\">\n                <a-input placeholder=\"请输入用户账号\" v-model=\"queryParam.username\"></a-input>\n              </a-form-item>\n            </a-col>\n            <a-col :span=\"8\">\n                    <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\n                      <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\n                      <a-button  @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\n                    </span>\n            </a-col>\n\n          </a-row>\n        </a-form>\n      </div>\n      <!-- table区域-begin -->\n      <div>\n        <a-table\n          size=\"small\"\n          bordered\n          rowKey=\"id\"\n          :columns=\"columns1\"\n          :dataSource=\"dataSource1\"\n          :pagination=\"ipagination\"\n          :loading=\"loading\"\n          :scroll=\"{ y: 240 }\"\n          :rowSelection=\"{selectedRowKeys: selectedRowKeys,onSelectAll:onSelectAll,onSelect:onSelect,onChange: onSelectChange}\"\n          @change=\"handleTableChange\">\n\n        </a-table>\n      </div>\n      <!-- table区域-end -->\n\n\n    </a-modal>\n  </div>\n</template>\n\n<script>\n  import {filterObj} from '@/utils/util'\n  import {getAction} from '@/api/manage'\n\n  export default {\n    name: \"SelectUserModal\",\n    data() {\n      return {\n        title: \"添加已有用户\",\n        names: [],\n        visible: false,\n        placement: 'right',\n        description: '',\n        // 查询条件\n        queryParam: {},\n        // 表头\n        columns1: [\n          {\n            title: '#',\n            dataIndex: '',\n            key: 'rowIndex',\n            width: 50,\n            align: \"center\",\n            customRender: function (t, r, index) {\n              return parseInt(index) + 1;\n            }\n          },\n          {\n            title: '用户账号',\n            align: \"center\",\n            width: 100,\n            dataIndex: 'username'\n          },\n          {\n            title: '用户名称',\n            align: \"center\",\n            width: 100,\n            dataIndex: 'realname'\n          },\n          {\n            title: '性别',\n            align: \"center\",\n            width: 100,\n            dataIndex: 'sex_dictText'\n          },\n          {\n            title: '电话',\n            align: \"center\",\n            width: 100,\n            dataIndex: 'phone'\n          },\n          {\n            title: '部门',\n            align: \"center\",\n            width: 150,\n            dataIndex: 'orgCode'\n          }\n        ],\n        columns2: [\n          {\n            title: '用户账号',\n            align: \"center\",\n            dataIndex: 'username',\n\n          },\n          {\n            title: '用户名称',\n            align: \"center\",\n            dataIndex: 'realname',\n          },\n          {\n            title: '操作',\n            dataIndex: 'action',\n            align: \"center\",\n            width: 100,\n            scopedSlots: {customRender: 'action'},\n          }\n        ],\n        //数据集\n        dataSource1: [],\n        dataSource2: [],\n        // 分页参数\n        ipagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + \"-\" + range[1] + \" 共\" + total + \"条\"\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        },\n        isorter: {\n          column: 'createTime',\n          order: 'desc',\n        },\n        loading: false,\n        selectedRowKeys: [],\n        selectedRows: [],\n        url: {\n          list: \"/sys/user/list\",\n        }\n      }\n    },\n    created() {\n      this.loadData();\n    },\n    methods: {\n      searchQuery() {\n        this.loadData(1);\n      },\n      searchReset() {\n        this.queryParam = {};\n        this.loadData(1);\n      },\n      handleCancel() {\n        this.visible = false;\n      },\n      handleOk() {\n        this.dataSource2 = this.selectedRowKeys;\n        console.log(\"data:\" + this.dataSource2);\n        this.$emit(\"selectFinished\", this.dataSource2);\n        this.visible = false;\n      },\n      add() {\n        this.visible = true;\n      },\n      loadData(arg) {\n        //加载数据 若传入参数1则加载第一页的内容\n        if (arg === 1) {\n          this.ipagination.current = 1;\n        }\n        var params = this.getQueryParams();//查询条件\n        getAction(this.url.list, params).then((res) => {\n          if (res.success) {\n            this.dataSource1 = res.result.records;\n            this.ipagination.total = res.result.total;\n          }\n        })\n      },\n      getQueryParams() {\n        var param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        return filterObj(param);\n      },\n      getQueryField() {\n        //TODO 字段权限控制\n      },\n      onSelectAll(selected, selectedRows, changeRows) {\n        if (selected === true) {\n          for (var a = 0; a < changeRows.length; a++) {\n            this.dataSource2.push(changeRows[a]);\n          }\n        } else {\n          for (var b = 0; b < changeRows.length; b++) {\n            this.dataSource2.splice(this.dataSource2.indexOf(changeRows[b]), 1);\n          }\n        }\n        // console.log(selected, selectedRows, changeRows);\n      },\n      onSelect(record, selected) {\n        if (selected === true) {\n          this.dataSource2.push(record);\n        } else {\n          var index = this.dataSource2.indexOf(record);\n          //console.log();\n          if (index >= 0) {\n            this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\n          }\n\n        }\n      },\n      onSelectChange(selectedRowKeys, selectedRows) {\n        this.selectedRowKeys = selectedRowKeys;\n        this.selectionRows = selectedRows;\n      },\n      onClearSelected() {\n        this.selectedRowKeys = [];\n        this.selectionRows = [];\n      },\n      handleDelete: function (record) {\n        this.dataSource2.splice(this.dataSource2.indexOf(record), 1);\n      },\n      handleTableChange(pagination, filters, sorter) {\n        //分页、排序、筛选变化时触发\n        console.log(sorter);\n        //TODO 筛选\n        if (Object.keys(sorter).length > 0) {\n          this.isorter.column = sorter.field;\n          this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\"\n        }\n        this.ipagination = pagination;\n        this.loadData();\n      }\n    }\n  }\n</script>\n<style lang=\"less\" scoped>\n  .ant-card-body .table-operator {\n    margin-bottom: 18px;\n  }\n\n  .ant-table-tbody .ant-table-row td {\n    padding-top: 15px;\n    padding-bottom: 15px;\n  }\n\n  .anty-row-operator button {\n    margin: 0 5px\n  }\n\n  .ant-btn-danger {\n    background-color: #ffffff\n  }\n\n  .ant-modal-cust-warp {\n    height: 100%\n  }\n\n  .ant-modal-cust-warp .ant-modal-body {\n    height: calc(100% - 110px) !important;\n    overflow-y: auto\n  }\n\n  .ant-modal-cust-warp .ant-modal-content {\n    height: 90% !important;\n    overflow-y: hidden\n  }\n</style>"],"mappings":"AAwDA,SAAAA,SAAA;AACA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,KAAA;MACAC,OAAA;MACAC,SAAA;MACAC,WAAA;MACA;MACAC,UAAA;MACA;MACAC,QAAA,GACA;QACAN,KAAA;QACAO,SAAA;QACAC,GAAA;QACAC,KAAA;QACAC,KAAA;QACAC,YAAA,WAAAA,aAAAC,CAAA,EAAAC,CAAA,EAAAC,KAAA;UACA,OAAAC,QAAA,CAAAD,KAAA;QACA;MACA,GACA;QACAd,KAAA;QACAU,KAAA;QACAD,KAAA;QACAF,SAAA;MACA,GACA;QACAP,KAAA;QACAU,KAAA;QACAD,KAAA;QACAF,SAAA;MACA,GACA;QACAP,KAAA;QACAU,KAAA;QACAD,KAAA;QACAF,SAAA;MACA,GACA;QACAP,KAAA;QACAU,KAAA;QACAD,KAAA;QACAF,SAAA;MACA,GACA;QACAP,KAAA;QACAU,KAAA;QACAD,KAAA;QACAF,SAAA;MACA,EACA;MACAS,QAAA,GACA;QACAhB,KAAA;QACAU,KAAA;QACAH,SAAA;MAEA,GACA;QACAP,KAAA;QACAU,KAAA;QACAH,SAAA;MACA,GACA;QACAP,KAAA;QACAO,SAAA;QACAG,KAAA;QACAD,KAAA;QACAQ,WAAA;UAAAN,YAAA;QAAA;MACA,EACA;MACA;MACAO,WAAA;MACAC,WAAA;MACA;MACAC,WAAA;QACAC,OAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA,WAAAA,UAAAC,KAAA,EAAAC,KAAA;UACA,OAAAA,KAAA,YAAAA,KAAA,aAAAD,KAAA;QACA;QACAE,eAAA;QACAC,eAAA;QACAH,KAAA;MACA;MACAI,OAAA;QACAC,MAAA;QACAC,KAAA;MACA;MACAC,OAAA;MACAC,eAAA;MACAC,YAAA;MACAC,GAAA;QACAC,IAAA;MACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAF,QAAA;IACA;IACAG,WAAA,WAAAA,YAAA;MACA,KAAApC,UAAA;MACA,KAAAiC,QAAA;IACA;IACAI,YAAA,WAAAA,aAAA;MACA,KAAAxC,OAAA;IACA;IACAyC,QAAA,WAAAA,SAAA;MACA,KAAAxB,WAAA,QAAAc,eAAA;MACAW,OAAA,CAAAC,GAAA,gBAAA1B,WAAA;MACA,KAAA2B,KAAA,wBAAA3B,WAAA;MACA,KAAAjB,OAAA;IACA;IACA6C,GAAA,WAAAA,IAAA;MACA,KAAA7C,OAAA;IACA;IACAoC,QAAA,WAAAA,SAAAU,GAAA;MAAA,IAAAC,KAAA;MACA;MACA,IAAAD,GAAA;QACA,KAAA5B,WAAA,CAAAC,OAAA;MACA;MACA,IAAA6B,MAAA,QAAAC,cAAA;MACAtD,SAAA,MAAAsC,GAAA,CAAAC,IAAA,EAAAc,MAAA,EAAAE,IAAA,WAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,OAAA;UACAL,KAAA,CAAA/B,WAAA,GAAAmC,GAAA,CAAAE,MAAA,CAAAC,OAAA;UACAP,KAAA,CAAA7B,WAAA,CAAAK,KAAA,GAAA4B,GAAA,CAAAE,MAAA,CAAA9B,KAAA;QACA;MACA;IACA;IACA0B,cAAA,WAAAA,eAAA;MACA,IAAAM,KAAA,GAAAC,MAAA,CAAAC,MAAA,UAAAtD,UAAA,OAAAwB,OAAA;MACA4B,KAAA,CAAAG,KAAA,QAAAC,aAAA;MACAJ,KAAA,CAAAK,MAAA,QAAA1C,WAAA,CAAAC,OAAA;MACAoC,KAAA,CAAAnC,QAAA,QAAAF,WAAA,CAAAE,QAAA;MACA,OAAA1B,SAAA,CAAA6D,KAAA;IACA;IACAI,aAAA,WAAAA,cAAA;MACA;IAAA,CACA;IACAE,WAAA,WAAAA,YAAAC,QAAA,EAAA9B,YAAA,EAAA+B,UAAA;MACA,IAAAD,QAAA;QACA,SAAAE,CAAA,MAAAA,CAAA,GAAAD,UAAA,CAAAE,MAAA,EAAAD,CAAA;UACA,KAAA/C,WAAA,CAAAiD,IAAA,CAAAH,UAAA,CAAAC,CAAA;QACA;MACA;QACA,SAAAG,CAAA,MAAAA,CAAA,GAAAJ,UAAA,CAAAE,MAAA,EAAAE,CAAA;UACA,KAAAlD,WAAA,CAAAmD,MAAA,MAAAnD,WAAA,CAAAoD,OAAA,CAAAN,UAAA,CAAAI,CAAA;QACA;MACA;MACA;IACA;IACAG,QAAA,WAAAA,SAAAC,MAAA,EAAAT,QAAA;MACA,IAAAA,QAAA;QACA,KAAA7C,WAAA,CAAAiD,IAAA,CAAAK,MAAA;MACA;QACA,IAAA3D,KAAA,QAAAK,WAAA,CAAAoD,OAAA,CAAAE,MAAA;QACA;QACA,IAAA3D,KAAA;UACA,KAAAK,WAAA,CAAAmD,MAAA,MAAAnD,WAAA,CAAAoD,OAAA,CAAAE,MAAA;QACA;MAEA;IACA;IACAC,cAAA,WAAAA,eAAAzC,eAAA,EAAAC,YAAA;MACA,KAAAD,eAAA,GAAAA,eAAA;MACA,KAAA0C,aAAA,GAAAzC,YAAA;IACA;IACA0C,eAAA,WAAAA,gBAAA;MACA,KAAA3C,eAAA;MACA,KAAA0C,aAAA;IACA;IACAE,YAAA,WAAAA,aAAAJ,MAAA;MACA,KAAAtD,WAAA,CAAAmD,MAAA,MAAAnD,WAAA,CAAAoD,OAAA,CAAAE,MAAA;IACA;IACAK,iBAAA,WAAAA,kBAAAC,UAAA,EAAAC,OAAA,EAAAC,MAAA;MACA;MACArC,OAAA,CAAAC,GAAA,CAAAoC,MAAA;MACA;MACA,IAAAvB,MAAA,CAAAwB,IAAA,CAAAD,MAAA,EAAAd,MAAA;QACA,KAAAtC,OAAA,CAAAC,MAAA,GAAAmD,MAAA,CAAArB,KAAA;QACA,KAAA/B,OAAA,CAAAE,KAAA,eAAAkD,MAAA,CAAAlD,KAAA;MACA;MACA,KAAAX,WAAA,GAAA2D,UAAA;MACA,KAAAzC,QAAA;IACA;EACA;AACA","ignoreList":[]}]}