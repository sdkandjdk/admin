{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DictModal.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DictModal.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["import pick from 'lodash.pick';\nimport { addDict, editDict, duplicateCheck } from '@/api/api';\nexport default {\n  name: 'DictModal',\n  data: function data() {\n    return {\n      value: 1,\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        dictName: [{\n          required: true,\n          message: '请输入字典名称!'\n        }],\n        dictCode: [{\n          required: true,\n          message: '请输入字典编码!'\n        }, {\n          validator: this.validateDictCode\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    validateDictCode: function validateDictCode(rule, value, callback) {\n      // 重复校验\n      var params = {\n        tableName: 'sys_dict',\n        fieldName: 'dict_code',\n        fieldVal: value,\n        dataId: this.model.id\n      };\n      duplicateCheck(params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(res.message);\n        }\n      });\n    },\n    handleChange: function handleChange(value) {\n      this.model.status = value;\n    },\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      if (record.id) {\n        this.visiblekey = true;\n      } else {\n        this.visiblekey = false;\n      }\n      this.model = Object.assign({}, record);\n      this.visible = true;\n    },\n    // 确定\n    handleOk: function handleOk() {\n      var _this = this;\n      var that = this;\n      // 触发表单验证\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          _this.model.dictName = (_this.model.dictName || '').trim();\n          _this.model.dictCode = (_this.model.dictCode || '').trim();\n          _this.model.description = (_this.model.description || '').trim();\n          var obj;\n          if (!_this.model.id) {\n            obj = addDict(_this.model);\n          } else {\n            obj = editDict(_this.model);\n          }\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 关闭\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    }\n  }\n};",{"version":3,"names":["pick","addDict","editDict","duplicateCheck","name","data","value","title","visible","model","labelCol","xs","span","sm","wrapperCol","confirmLoading","validatorRules","dictName","required","message","dictCode","validator","validateDictCode","created","methods","rule","callback","params","tableName","fieldName","fieldVal","dataId","id","then","res","success","handleChange","status","add","edit","record","visiblekey","Object","assign","handleOk","_this","that","$refs","form","validate","valid","trim","description","obj","$message","$emit","warning","finally","close","handleCancel","resetFields"],"sources":["src/views/system/modules/DictModal.vue"],"sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"600\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"dictName\"\n          required\n          label=\"字典名称\">\n          <a-input placeholder=\"请输入字典名称\" v-model=\"model.dictName\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"dictCode\"\n          required\n          label=\"字典编码\">\n          <a-input placeholder=\"请输入字典编码\" v-model=\"model.dictCode\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\">\n          <a-input v-model=\"model.description\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import { addDict, editDict, duplicateCheck } from '@/api/api'\n\n  export default {\n    name: 'DictModal',\n    data() {\n      return {\n        value: 1,\n        title: '操作',\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 }\n        },\n        confirmLoading: false,\n        validatorRules: {\n          dictName: [{ required: true, message: '请输入字典名称!' }],\n          dictCode: [\n            { required: true, message: '请输入字典编码!' },\n            { validator: this.validateDictCode }]\n          }\n      }\n    },\n    created() {\n    },\n    methods: {\n      validateDictCode(rule, value, callback) {\n        // 重复校验\n        var params = {\n          tableName: 'sys_dict',\n          fieldName: 'dict_code',\n          fieldVal: value,\n          dataId: this.model.id\n        }\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(res.message)\n          }\n        })\n      },\n      handleChange(value) {\n        this.model.status = value\n      },\n      add() {\n        this.edit({})\n      },\n      edit(record) {\n        if (record.id) {\n          this.visiblekey = true\n        } else {\n          this.visiblekey = false\n        }\n        this.model = Object.assign({}, record)\n        this.visible = true\n      },\n      // 确定\n      handleOk() {\n        const that = this\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true\n            this.model.dictName = (this.model.dictName || '').trim()\n            this.model.dictCode = (this.model.dictCode || '').trim()\n            this.model.description = (this.model.description || '').trim()\n            let obj\n            if (!this.model.id) {\n              obj = addDict(this.model)\n            } else {\n              obj = editDict(this.model)\n            }\n            obj.then((res) => {\n              if (res.success) {\n                that.$message.success(res.message)\n                that.$emit('ok')\n              } else {\n                that.$message.warning(res.message)\n              }\n            }).finally(() => {\n              that.confirmLoading = false\n              that.close()\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      // 关闭\n      handleCancel() {\n        this.close()\n      },\n      close() {\n        this.$emit('close')\n        this.visible = false\n        this.$refs.form.resetFields();\n      }\n    }\n  }\n</script>"],"mappings":"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","ignoreList":[]}]}