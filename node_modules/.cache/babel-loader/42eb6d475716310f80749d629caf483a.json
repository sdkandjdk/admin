{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\utils\\rules.js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\utils\\rules.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1709701151904}],"contextDependencies":[],"result":["var validateMobile = function validateMobile(rule, value, callback) {\n  var reg = /^1(3|4|5|7|8)\\d{9}$/;\n  if (!reg.test(value)) {\n    callback('请输入正确手机号');\n  } else {\n    callback();\n  }\n};\nvar validateEn = function validateEn(rule, value, callback) {\n  var reg = /^[_a-zA-Z0-9]+$/;\n  var reg2 = /^.{4,18}$/;\n  // 长度为6到18个字符\n  if (value !== '' && !reg.test(value)) {\n    callback('只允许字母、数字、下划线');\n  } else if (value !== '' && !reg2.test(value)) {\n    callback('长度6到18个字符');\n  } else {\n    callback();\n  }\n};\nexport var rules = {\n  mobile: [{\n    required: true,\n    message: '请输入手机号',\n    trigger: 'blur'\n  }, {\n    validator: validateMobile,\n    trigger: 'blur'\n  }],\n  userName: [{\n    required: true,\n    message: '请输入用户名',\n    trigger: 'blur'\n  }, {\n    validator: validateEn\n  }],\n  email: [{\n    required: false,\n    type: 'email',\n    message: '邮箱格式不正确',\n    trigger: 'blur'\n  }],\n  // 验证自然数\n  naturalNumber: /^(([0-9]*[1-9][0-9]*)|(0+))$/,\n  naturalNumberMsg: '请输入自然数',\n  // 英文\n  english: /^.[A-Za-z]+$/,\n  englishMsg: '请输入英文字符',\n  // 座机\n  telephone: /^\\d{3}-\\d{7,8}|\\d{4}-\\d{7,8}$/,\n  telephoneMsg: '请输入正确的座机号',\n  // 银行卡号码\n  bankCard: /^[1-9]\\d{9,19}$/,\n  bankCardMsg: '请输入正确的银行卡号码',\n  // 证件号码\n  IDNumber: /^[a-z0-9A-Z]{0,50}$/,\n  IDNumberMsg: '请输入正确的证件号码',\n  // 身份证号码,包括15位和18位的\n  IDCard: /(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{7}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)/,\n  IDCardMsg: '请输入正确的身份证号码',\n  // QQ号码\n  qq: /^[1-9]\\d{4,11}$/,\n  qqMsg: '请输入正确的QQ号码',\n  // 网址, 仅支持http和https开头的\n  url: /^(http|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-.,@?^=%&:/~+#]*[\\w\\-@?^=%&/~+#])?$/,\n  urlMsg: '请输入以http和https开头的网址',\n  // 0到20位的英文字符和数字\n  enNum0to20: /^[a-z0-9A-Z]{0,20}$/,\n  enNum0to20Msg: '请输入20位以内的英文字符和数字',\n  // 2到100位的中英文字符和空格\n  cnEnSpace2to100: /^[a-zA-Z\\u4E00-\\u9FA5\\s*]{2,100}$/,\n  cnEnSpace2to100Msg: '请输入2到100位的中英文字符和空格',\n  // 数字和换行符\n  numLinefeed: /^[0-9\\n*]+$/,\n  numLinefeedMsg: '请输入数字和换行符',\n  // 255位以内的字符\n  char0to255: /^.{0,255}$/,\n  char0to255Msg: '请输入255位以内的字符',\n  required: function required(min, max) {\n    var rule = [{\n      required: true,\n      message: '',\n      trigger: 'blur'\n    }];\n    if (min) {\n      var r = {\n        min: min,\n        message: '最小长度' + min + '位字符'\n      };\n      rule.push(r);\n    }\n    if (max) {\n      var m = {\n        max: max,\n        message: '最大长度' + max + '位字符'\n      };\n      rule.push(m);\n    }\n    return rule;\n  },\n  select: function select() {\n    var rule = [{\n      required: true,\n      message: '',\n      trigger: 'change'\n    }];\n    return rule;\n  },\n  checked: function checked(min, max) {\n    var rule = [{\n      required: true,\n      type: 'array',\n      message: '',\n      trigger: 'change'\n    }];\n    if (min) {\n      var r = {\n        type: 'array',\n        min: min,\n        message: '最少选择' + min + '项'\n      };\n      rule.push(r);\n    }\n    if (max) {\n      var m = {\n        type: 'array',\n        max: max,\n        message: '最多选择' + max + '项'\n      };\n      rule.push(m);\n    }\n    return rule;\n  }\n};\n/**\n * @description 排序值验证，排序值不可以大于255\n */\nexport var validateOrder = function validateOrder(rule, value, callback) {\n  if (parseInt(value) > 255) {\n    return callback(new Error('排序值不可以大于255'));\n  } else {\n    callback();\n  }\n};",{"version":3,"names":["validateMobile","rule","value","callback","reg","test","validateEn","reg2","rules","mobile","required","message","trigger","validator","userName","email","type","naturalNumber","naturalNumberMsg","english","englishMsg","telephone","telephoneMsg","bankCard","bankCardMsg","IDNumber","IDNumberMsg","IDCard","IDCardMsg","qq","qqMsg","url","urlMsg","enNum0to20","enNum0to20Msg","cnEnSpace2to100","cnEnSpace2to100Msg","numLinefeed","numLinefeedMsg","char0to255","char0to255Msg","min","max","r","push","m","select","checked","validateOrder","parseInt","Error"],"sources":["F:/workspace/3月/km_community-main/ant-design-vue-jeecg/src/utils/rules.js"],"sourcesContent":["const validateMobile = (rule, value, callback) => {\n  let reg = /^1(3|4|5|7|8)\\d{9}$/\n  if (!reg.test(value)) {\n    callback('请输入正确手机号')\n  } else {\n    callback()\n  }\n}\nconst validateEn = (rule, value, callback) => {\n  let reg = /^[_a-zA-Z0-9]+$/\n  let reg2 = /^.{4,18}$/\n  // 长度为6到18个字符\n  if (value !== '' && !reg.test(value)) {\n    callback('只允许字母、数字、下划线')\n  } else if (value !== '' && !reg2.test(value)) {\n    callback('长度6到18个字符')\n  } else {\n    callback()\n  }\n}\nexport const rules = {\n  mobile: [{\n    required: true,\n    message: '请输入手机号',\n    trigger: 'blur'\n  }, { validator: validateMobile, trigger: 'blur' }],\n  userName: [{\n    required: true, message: '请输入用户名', trigger: 'blur'\n  }, { validator: validateEn }],\n  email: [\n    { required: false, type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\n  ],\n  // 验证自然数\n  naturalNumber: /^(([0-9]*[1-9][0-9]*)|(0+))$/,\n  naturalNumberMsg: '请输入自然数',\n  // 英文\n  english: /^.[A-Za-z]+$/,\n  englishMsg: '请输入英文字符',\n  // 座机\n  telephone: /^\\d{3}-\\d{7,8}|\\d{4}-\\d{7,8}$/,\n  telephoneMsg: '请输入正确的座机号',\n  // 银行卡号码\n  bankCard: /^[1-9]\\d{9,19}$/,\n  bankCardMsg: '请输入正确的银行卡号码',\n  // 证件号码\n  IDNumber: /^[a-z0-9A-Z]{0,50}$/,\n  IDNumberMsg: '请输入正确的证件号码',\n  // 身份证号码,包括15位和18位的\n  IDCard: /(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{7}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)/,\n  IDCardMsg: '请输入正确的身份证号码',\n  // QQ号码\n  qq: /^[1-9]\\d{4,11}$/,\n  qqMsg: '请输入正确的QQ号码',\n  // 网址, 仅支持http和https开头的\n  url: /^(http|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-.,@?^=%&:/~+#]*[\\w\\-@?^=%&/~+#])?$/,\n  urlMsg: '请输入以http和https开头的网址',\n  // 0到20位的英文字符和数字\n  enNum0to20: /^[a-z0-9A-Z]{0,20}$/,\n  enNum0to20Msg: '请输入20位以内的英文字符和数字',\n  // 2到100位的中英文字符和空格\n  cnEnSpace2to100: /^[a-zA-Z\\u4E00-\\u9FA5\\s*]{2,100}$/,\n  cnEnSpace2to100Msg: '请输入2到100位的中英文字符和空格',\n  // 数字和换行符\n  numLinefeed: /^[0-9\\n*]+$/,\n  numLinefeedMsg: '请输入数字和换行符',\n  // 255位以内的字符\n  char0to255: /^.{0,255}$/,\n  char0to255Msg: '请输入255位以内的字符',\n  required: function(min, max) {\n    let rule = [{ required: true, message: '', trigger: 'blur' }]\n    if (min) {\n      let r = { min: min, message: '最小长度' + min + '位字符' }\n      rule.push(r)\n    }\n    if (max) {\n      let m = { max: max, message: '最大长度' + max + '位字符' }\n      rule.push(m)\n    }\n    return rule\n  },\n  select: function() {\n    let rule = [{ required: true, message: '', trigger: 'change' }]\n    return rule\n  },\n  checked: function(min, max) {\n    let rule = [{ required: true, type: 'array', message: '', trigger: 'change' }]\n    if (min) {\n      let r = { type: 'array', min: min, message: '最少选择' + min + '项' }\n      rule.push(r)\n    }\n    if (max) {\n      let m = { type: 'array', max: max, message: '最多选择' + max + '项' }\n      rule.push(m)\n    }\n    return rule\n  }\n}\n/**\n * @description 排序值验证，排序值不可以大于255\n */\nexport const validateOrder = function(rule, value, callback) {\n  if (parseInt(value) > 255) {\n    return callback(new Error('排序值不可以大于255'))\n  } else {\n    callback()\n  }\n}\n\n\n\n"],"mappings":"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","ignoreList":[]}]}