{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\views\\user\\LoginPhone.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\views\\user\\LoginPhone.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { postAction } from '@/api/manage';\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'LoginPhone',\n  data: function data() {\n    return {\n      model: {\n        mobile: '',\n        captcha: ''\n      },\n      //手机号登录用\n      state: {\n        time: 60,\n        smsSendBtn: false\n      },\n      validatorRules: {\n        mobile: [{\n          required: true,\n          message: '请输入手机号码!'\n        }, {\n          validator: this.validateMobile\n        }],\n        captcha: [{\n          required: true,\n          message: '请输入验证码!'\n        }]\n      }\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['PhoneLogin'])), {}, {\n    handleLogin: function handleLogin(rememberMe) {\n      var _this = this;\n      this.validateFields(['mobile', 'captcha'], function (err) {\n        if (!err) {\n          var loginParams = {\n            mobile: _this.model.mobile,\n            captcha: _this.model.captcha,\n            remember_me: rememberMe\n          };\n          console.log(\"登录参数\", loginParams);\n          _this.PhoneLogin(loginParams).then(function (res) {\n            _this.$emit('success', res.result);\n          }).catch(function (err) {\n            _this.$emit('fail', err);\n          });\n        } else {\n          _this.$emit('validateFail');\n        }\n      });\n    },\n    // 校验手机号\n    validateMobile: function validateMobile(rule, value, callback) {\n      if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)) {\n        callback();\n      } else {\n        callback(\"您的手机号码格式不正确!\");\n      }\n    },\n    //获取验证码\n    getCaptcha: function getCaptcha(e) {\n      e.preventDefault();\n      var that = this;\n      that.validateFields(['mobile'], function (err) {\n        if (!err) {\n          that.state.smsSendBtn = true;\n          var interval = window.setInterval(function () {\n            if (that.state.time-- <= 0) {\n              that.state.time = 60;\n              that.state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n          var hide = that.$message.loading('验证码发送中..', 0);\n          var smsParams = {};\n          smsParams.mobile = that.model.mobile;\n          smsParams.smsmode = \"0\";\n          postAction(\"/sys/sms\", smsParams).then(function (res) {\n            if (!res.success) {\n              setTimeout(hide, 0);\n              that.cmsFailed(res.message);\n            }\n            console.log(res);\n            setTimeout(hide, 500);\n          }).catch(function (err) {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            that.state.time = 60;\n            that.state.smsSendBtn = false;\n            that.requestFailed(err);\n          });\n        }\n      });\n    },\n    cmsFailed: function cmsFailed(err) {\n      this.$notification['error']({\n        message: '获取验证码失败',\n        description: err,\n        duration: 4\n      });\n    },\n    /**\n     * 验证字段\n     * @param arr\n     * @param callback\n     */\n    validateFields: function validateFields(arr, callback) {\n      var _this2 = this;\n      var promiseArray = [];\n      var _iterator = _createForOfIteratorHelper(arr),\n        _step;\n      try {\n        var _loop = function _loop() {\n          var item = _step.value;\n          var p = new Promise(function (resolve, reject) {\n            _this2.$refs['form'].validateField(item, function (err) {\n              if (!err) {\n                resolve();\n              } else {\n                reject(err);\n              }\n            });\n          });\n          promiseArray.push(p);\n        };\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      Promise.all(promiseArray).then(function () {\n        callback();\n      }).catch(function (err) {\n        callback(err);\n      });\n    }\n  })\n};",{"version":3,"names":["postAction","mapActions","name","data","model","mobile","captcha","state","time","smsSendBtn","validatorRules","required","message","validator","validateMobile","methods","_objectSpread","handleLogin","rememberMe","_this","validateFields","err","loginParams","remember_me","console","log","PhoneLogin","then","res","$emit","result","catch","rule","value","callback","RegExp","test","getCaptcha","e","preventDefault","that","interval","window","setInterval","clearInterval","hide","$message","loading","smsParams","smsmode","success","setTimeout","cmsFailed","requestFailed","$notification","description","duration","arr","_this2","promiseArray","_iterator","_createForOfIteratorHelper","_step","_loop","item","p","Promise","resolve","reject","$refs","validateField","push","s","n","done","f","all"],"sources":["src/views/user/LoginPhone.vue"],"sourcesContent":["<template>\n  <div>\n    <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n      <a-form-model-item required prop=\"mobile\">\n        <a-input v-model=\"model.mobile\" size=\"large\" type=\"text\" placeholder=\"请输入手机号\">\n          <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n        </a-input>\n      </a-form-model-item>\n      <a-row :gutter=\"16\">\n        <a-col class=\"gutter-row\" :span=\"16\">\n          <a-form-model-item required prop=\"captcha\">\n            <a-input v-model=\"model.captcha\" size=\"large\" type=\"text\" placeholder=\"请输入验证码\">\n              <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-model-item>\n        </a-col>\n        <a-col class=\"gutter-row\" :span=\"8\">\n          <a-button\n            class=\"getCaptcha\"\n            tabindex=\"-1\"\n            :disabled=\"state.smsSendBtn\"\n            @click.stop.prevent=\"getCaptcha\"\n            v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"></a-button>\n        </a-col>\n      </a-row>\n    </a-form-model>\n  </div>\n</template>\n\n<script>\n  import { postAction } from '@/api/manage'\n  import { mapActions } from 'vuex'\n\n  export default {\n    name: 'LoginPhone',\n    data(){\n      return {\n        model:{\n          mobile: '',\n          captcha: ''\n        },\n        //手机号登录用\n        state: {\n          time: 60,\n          smsSendBtn: false,\n        },\n        validatorRules:{\n          mobile: [\n            { required: true, message: '请输入手机号码!' },\n            { validator: this.validateMobile }\n          ],\n          captcha: [{\n            required: true, message: '请输入验证码!'\n          }]\n        }\n\n      }\n    },\n    methods:{\n      ...mapActions(['PhoneLogin']),\n      handleLogin(rememberMe){\n        this.validateFields([ 'mobile', 'captcha' ], (err) => {\n          if (!err) {\n            let loginParams = {\n              mobile: this.model.mobile,\n              captcha: this.model.captcha,\n              remember_me: rememberMe\n            }\n            console.log(\"登录参数\", loginParams)\n            this.PhoneLogin(loginParams).then((res) => {\n              this.$emit('success', res.result)\n            }).catch((err) => {\n              this.$emit('fail', err)\n            });\n          }else{\n            this.$emit('validateFail')\n          }\n        })\n      },\n      // 校验手机号\n      validateMobile(rule,value,callback){\n        if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)){\n          callback();\n        }else{\n          callback(\"您的手机号码格式不正确!\");\n        }\n      },\n      //获取验证码\n      getCaptcha (e) {\n        e.preventDefault();\n        let that = this;\n        that.validateFields([ 'mobile' ], (err) => {\n            if (!err) {\n              that.state.smsSendBtn = true;\n              let interval = window.setInterval(() => {\n                if (that.state.time-- <= 0) {\n                  that.state.time = 60;\n                  that.state.smsSendBtn = false;\n                  window.clearInterval(interval);\n                }\n              }, 1000);\n\n              const hide = that.$message.loading('验证码发送中..', 0);\n              let smsParams = {};\n              smsParams.mobile=that.model.mobile;\n              smsParams.smsmode=\"0\";\n              postAction(\"/sys/sms\",smsParams)\n                .then(res => {\n                  if(!res.success){\n                    setTimeout(hide, 0);\n                    that.cmsFailed(res.message);\n                  }\n                  console.log(res);\n                  setTimeout(hide, 500);\n                })\n                .catch(err => {\n                  setTimeout(hide, 1);\n                  clearInterval(interval);\n                  that.state.time = 60;\n                  that.state.smsSendBtn = false;\n                  that.requestFailed(err);\n                });\n            }\n          }\n        );\n      },\n      cmsFailed(err){\n        this.$notification[ 'error' ]({\n          message: '获取验证码失败',\n          description:err,\n          duration: 4,\n        });\n      },\n      /**\n       * 验证字段\n       * @param arr\n       * @param callback\n       */\n      validateFields(arr, callback){\n        let promiseArray = []\n        for(let item of arr){\n          let p = new Promise((resolve, reject) => {\n            this.$refs['form'].validateField(item, (err)=>{\n              if(!err){\n                resolve();\n              }else{\n                reject(err);\n              }\n            })\n          });\n          promiseArray.push(p)\n        }\n        Promise.all(promiseArray).then(()=>{\n          callback()\n        }).catch(err=>{\n          callback(err)\n        })\n      },\n\n\n    }\n\n  }\n</script>\n\n<style scoped>\n.getCaptcha{\n  display: block;\n  width: 100%;\n  height: 40px;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}