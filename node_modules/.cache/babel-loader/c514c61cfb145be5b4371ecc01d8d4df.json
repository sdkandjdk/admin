{"remainingRequest":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\知识库系统\\admin\\src\\components\\layouts\\IframePageView.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\知识库系统\\admin\\src\\components\\layouts\\IframePageView.vue","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport PageLayout from '../page/PageLayout';\nimport RouteView from './RouteView';\nexport default {\n  name: \"IframePageContent\",\n  inject: ['closeCurrent'],\n  data: function data() {\n    return {\n      url: \"\",\n      id: \"\"\n    };\n  },\n  created: function created() {\n    this.goUrl();\n  },\n  updated: function updated() {\n    this.goUrl();\n  },\n  watch: {\n    $route: function $route(to, from) {\n      this.goUrl();\n    }\n  },\n  methods: {\n    goUrl: function goUrl() {\n      var url = this.$route.meta.url;\n      var id = this.$route.path;\n      this.id = id;\n      //url = \"http://www.baidu.com\"\n      console.log(\"------url------\" + url);\n      if (url !== null && url !== undefined) {\n        //-----------------------------------------------------------------------------------------\n        //url支持通过 ${token}方式传递当前登录TOKEN\n        var tokenStr = \"${token}\";\n        if (url.indexOf(tokenStr) != -1) {\n          var token = Vue.ls.get(ACCESS_TOKEN);\n          this.url = url.replace(tokenStr, token);\n        } else {\n          this.url = url;\n        }\n        //-----------------------------------------------------------------------------------------\n\n        /*update_begin author:wuxianquan date:20190908 for:判断打开方式，新窗口打开时this.$route.meta.internalOrExternal==true */\n        if (this.$route.meta.internalOrExternal != undefined && this.$route.meta.internalOrExternal == true) {\n          this.closeCurrent();\n          window.open(this.url);\n        }\n        /*update_end author:wuxianquan date:20190908 for:判断打开方式，新窗口打开时this.$route.meta.internalOrExternal==true */\n      }\n    }\n  }\n};",{"version":3,"names":["Vue","ACCESS_TOKEN","PageLayout","RouteView","name","inject","data","url","id","created","goUrl","updated","watch","$route","to","from","methods","meta","path","console","log","undefined","tokenStr","indexOf","token","ls","get","replace","internalOrExternal","closeCurrent","window","open"],"sources":["src/components/layouts/IframePageView.vue"],"sourcesContent":["<template>\n\n    <iframe  :id=\"id\" :src=\"url\" frameborder=\"0\" width=\"100%\" height=\"800px\" scrolling=\"auto\"></iframe>\n\n</template>\n\n<script>\n  import Vue from 'vue'\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\n  import PageLayout from '../page/PageLayout'\n  import RouteView from './RouteView'\n\n  export default {\n    name: \"IframePageContent\",\n    inject:['closeCurrent'],\n    data () {\n      return {\n        url: \"\",\n        id:\"\"\n      }\n    },\n    created () {\n      this.goUrl()\n    },\n    updated () {\n      this.goUrl()\n    },\n    watch: {\n      $route(to, from) {\n        this.goUrl();\n      }\n    },\n    methods: {\n      goUrl () {\n        let url = this.$route.meta.url\n        let id = this.$route.path\n        this.id = id\n        //url = \"http://www.baidu.com\"\n        console.log(\"------url------\"+url)\n        if (url !== null && url !== undefined) {\n          //-----------------------------------------------------------------------------------------\n          //url支持通过 ${token}方式传递当前登录TOKEN\n          let tokenStr = \"${token}\";\n          if(url.indexOf(tokenStr)!=-1) {\n            let token = Vue.ls.get(ACCESS_TOKEN);\n            this.url = url.replace(tokenStr, token);\n          } else {\n            this.url = url\n          }\n          //-----------------------------------------------------------------------------------------\n\n          /*update_begin author:wuxianquan date:20190908 for:判断打开方式，新窗口打开时this.$route.meta.internalOrExternal==true */\n          if(this.$route.meta.internalOrExternal != undefined && this.$route.meta.internalOrExternal==true){\n            this.closeCurrent();\n            window.open(this.url);\n          }\n          /*update_end author:wuxianquan date:20190908 for:判断打开方式，新窗口打开时this.$route.meta.internalOrExternal==true */\n\n        }\n      }\n    }\n  }\n</script>\n\n<style>\n</style>"],"mappings":"AAOA,OAAAA,GAAA;AACA,SAAAC,YAAA;AACA,OAAAC,UAAA;AACA,OAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,GAAA;MACAC,EAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,KAAA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAD,KAAA;EACA;EACAE,KAAA;IACAC,MAAA,WAAAA,OAAAC,EAAA,EAAAC,IAAA;MACA,KAAAL,KAAA;IACA;EACA;EACAM,OAAA;IACAN,KAAA,WAAAA,MAAA;MACA,IAAAH,GAAA,QAAAM,MAAA,CAAAI,IAAA,CAAAV,GAAA;MACA,IAAAC,EAAA,QAAAK,MAAA,CAAAK,IAAA;MACA,KAAAV,EAAA,GAAAA,EAAA;MACA;MACAW,OAAA,CAAAC,GAAA,qBAAAb,GAAA;MACA,IAAAA,GAAA,aAAAA,GAAA,KAAAc,SAAA;QACA;QACA;QACA,IAAAC,QAAA;QACA,IAAAf,GAAA,CAAAgB,OAAA,CAAAD,QAAA;UACA,IAAAE,KAAA,GAAAxB,GAAA,CAAAyB,EAAA,CAAAC,GAAA,CAAAzB,YAAA;UACA,KAAAM,GAAA,GAAAA,GAAA,CAAAoB,OAAA,CAAAL,QAAA,EAAAE,KAAA;QACA;UACA,KAAAjB,GAAA,GAAAA,GAAA;QACA;QACA;;QAEA;QACA,SAAAM,MAAA,CAAAI,IAAA,CAAAW,kBAAA,IAAAP,SAAA,SAAAR,MAAA,CAAAI,IAAA,CAAAW,kBAAA;UACA,KAAAC,YAAA;UACAC,MAAA,CAAAC,IAAA,MAAAxB,GAAA;QACA;QACA;MAEA;IACA;EACA;AACA","ignoreList":[]}]}