{"remainingRequest":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\知识库系统\\admin\\src\\views\\system\\modules\\DeptRoleAuthModal.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\知识库系统\\admin\\src\\views\\system\\modules\\DeptRoleAuthModal.vue","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { queryTreeListForDeptRole, queryDeptRolePermission, saveDeptRolePermission } from '@/api/api';\nimport RoleDataruleModal from './RoleDataruleModal.vue';\nimport DeptRoleDataruleModal from './DeptRoleDataruleModal';\nexport default {\n  name: \"DeptRoleAuthModal\",\n  components: {\n    DeptRoleDataruleModal: DeptRoleDataruleModal,\n    RoleDataruleModal: RoleDataruleModal\n  },\n  data: function data() {\n    return {\n      departId: \"\",\n      roleId: \"\",\n      treeData: [],\n      defaultCheckedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      expandedKeysss: [],\n      allTreeKeys: [],\n      autoExpandParent: true,\n      checkStrictly: true,\n      title: \"部门角色权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys: []\n    };\n  },\n  methods: {\n    switchCheckStrictly: function switchCheckStrictly(v) {\n      if (v == 1) {\n        this.checkStrictly = false;\n      } else if (v == 2) {\n        this.checkStrictly = true;\n      }\n    },\n    onTreeNodeSelect: function onTreeNodeSelect(id) {\n      if (id && id.length > 0) {\n        this.selectedKeys = id;\n      }\n      this.$refs.datarule.show(this.selectedKeys[0], this.departId, this.roleId);\n    },\n    onCheck: function onCheck(o) {\n      if (this.checkStrictly) {\n        this.checkedKeys = o.checked;\n      } else {\n        this.checkedKeys = o;\n      }\n    },\n    show: function show(roleId, departId) {\n      this.departId = departId;\n      this.roleId = roleId;\n      this.visible = true;\n    },\n    close: function close() {\n      this.reset();\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    reset: function reset() {\n      this.expandedKeysss = [];\n      this.checkedKeys = [];\n      this.defaultCheckedKeys = [];\n      this.loading = false;\n    },\n    expandAll: function expandAll() {\n      this.expandedKeysss = this.allTreeKeys;\n    },\n    closeAll: function closeAll() {\n      this.expandedKeysss = [];\n    },\n    checkALL: function checkALL() {\n      this.checkedKeys = this.allTreeKeys;\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.checkedKeys = [];\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleSubmit: function handleSubmit(exit) {\n      var _this = this;\n      var that = this;\n      var params = {\n        roleId: that.roleId,\n        permissionIds: that.checkedKeys.join(\",\"),\n        lastpermissionIds: that.defaultCheckedKeys.join(\",\")\n      };\n      that.loading = true;\n      console.log(\"请求参数：\", params);\n      saveDeptRolePermission(params).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.loading = false;\n          if (exit) {\n            that.close();\n          }\n        } else {\n          that.$message.error(res.message);\n          that.loading = false;\n          if (exit) {\n            that.close();\n          }\n        }\n        _this.loadData();\n      });\n    },\n    convertTreeListToKeyLeafPairs: function convertTreeListToKeyLeafPairs(treeList) {\n      var keyLeafPair = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var _iterator = _createForOfIteratorHelper(treeList),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _step.value,\n            key = _step$value.key,\n            isLeaf = _step$value.isLeaf,\n            children = _step$value.children;\n          keyLeafPair.push({\n            key: key,\n            isLeaf: isLeaf\n          });\n          if (children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return keyLeafPair;\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n      queryTreeListForDeptRole({\n        departId: this.departId\n      }).then(function (res) {\n        _this2.treeData = res.result.treeList;\n        _this2.allTreeKeys = res.result.ids;\n        queryDeptRolePermission({\n          roleId: _this2.roleId\n        }).then(function (res) {\n          _this2.checkedKeys = _toConsumableArray(res.result);\n          _this2.defaultCheckedKeys = _toConsumableArray(res.result);\n          _this2.expandedKeysss = _this2.allTreeKeys;\n        });\n      });\n    }\n  },\n  watch: {\n    visible: function visible() {\n      if (this.visible) {\n        this.loadData();\n      }\n    }\n  }\n};",{"version":3,"names":["queryTreeListForDeptRole","queryDeptRolePermission","saveDeptRolePermission","RoleDataruleModal","DeptRoleDataruleModal","name","components","data","departId","roleId","treeData","defaultCheckedKeys","checkedKeys","halfCheckedKeys","expandedKeysss","allTreeKeys","autoExpandParent","checkStrictly","title","visible","loading","selectedKeys","methods","switchCheckStrictly","v","onTreeNodeSelect","id","length","$refs","datarule","show","onCheck","o","checked","close","reset","$emit","onExpand","expandedKeys","expandAll","closeAll","checkALL","cancelCheckALL","handleCancel","handleSubmit","exit","_this","that","params","permissionIds","join","lastpermissionIds","console","log","then","res","success","$message","message","error","loadData","convertTreeListToKeyLeafPairs","treeList","keyLeafPair","arguments","undefined","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","value","key","isLeaf","children","push","err","e","f","_this2","result","ids","_toConsumableArray","watch"],"sources":["src/views/system/modules/DeptRoleAuthModal.vue"],"sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=650\n    placement=\"right\"\n    :closable=\"true\"\n    @close=\"close\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n\n    <a-form>\n      <a-form-item label='所拥有的部门权限'>\n\n        <a-tree\n          v-if=\"treeData.length>0\"\n          checkable\n          @check=\"onCheck\"\n          :checkedKeys=\"checkedKeys\"\n          :treeData=\"treeData\"\n          @expand=\"onExpand\"\n          @select=\"onTreeNodeSelect\"\n          :selectedKeys=\"selectedKeys\"\n          :expandedKeys=\"expandedKeysss\"\n          :checkStrictly=\"checkStrictly\">\n          <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\n            {{ slotTitle }}<a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\n          </span>\n        </a-tree>\n        <div v-else><h3>无可配置部门权限!</h3></div>\n      </a-form-item>\n    </a-form>\n\n    <div class=\"drawer-bootom-button\">\n      <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"switchCheckStrictly(1)\">父子关联</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"switchCheckStrictly(2)\">取消关联</a-menu-item>\n          <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\n          <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\n          <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\n          <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\n        </a-menu>\n        <a-button>\n          树操作 <a-icon type=\"up\" />\n        </a-button>\n      </a-dropdown>\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"close\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit(false)\" type=\"primary\" :loading=\"loading\" ghost style=\"margin-right: 0.8rem\">仅保存</a-button>\n      <a-button @click=\"handleSubmit(true)\" type=\"primary\" :loading=\"loading\">保存并关闭</a-button>\n    </div>\n    <dept-role-datarule-modal ref=\"datarule\"></dept-role-datarule-modal>\n  </a-drawer>\n\n</template>\n<script>\n  import {queryTreeListForDeptRole,queryDeptRolePermission,saveDeptRolePermission} from '@/api/api'\n  import RoleDataruleModal from './RoleDataruleModal.vue'\n  import DeptRoleDataruleModal from './DeptRoleDataruleModal'\n\n  export default {\n    name: \"DeptRoleAuthModal\",\n    components:{\n      DeptRoleDataruleModal,\n      RoleDataruleModal\n    },\n    data(){\n      return {\n        departId:\"\",\n        roleId:\"\",\n        treeData: [],\n        defaultCheckedKeys:[],\n        checkedKeys:[],\n        halfCheckedKeys:[],\n        expandedKeysss:[],\n        allTreeKeys:[],\n        autoExpandParent: true,\n        checkStrictly: true,\n        title:\"部门角色权限配置\",\n        visible: false,\n        loading: false,\n        selectedKeys:[]\n      }\n    },\n    methods: {\n      switchCheckStrictly (v) {\n        if(v==1){\n          this.checkStrictly = false\n        }else if(v==2){\n          this.checkStrictly = true\n        }\n      },\n      onTreeNodeSelect(id){\n        if(id && id.length>0){\n          this.selectedKeys = id\n        }\n        this.$refs.datarule.show(this.selectedKeys[0],this.departId,this.roleId)\n      },\n      onCheck (o) {\n        if(this.checkStrictly){\n          this.checkedKeys = o.checked;\n        }else{\n          this.checkedKeys = o\n        }\n      },\n      show(roleId,departId){\n        this.departId = departId\n        this.roleId=roleId\n        this.visible = true;\n      },\n      close () {\n        this.reset()\n        this.$emit('close');\n        this.visible = false;\n      },\n      onExpand(expandedKeys){\n        this.expandedKeysss = expandedKeys;\n        this.autoExpandParent = false\n      },\n      reset () {\n        this.expandedKeysss = []\n        this.checkedKeys = []\n        this.defaultCheckedKeys = []\n        this.loading = false\n      },\n      expandAll () {\n        this.expandedKeysss = this.allTreeKeys\n      },\n      closeAll () {\n        this.expandedKeysss = []\n      },\n      checkALL () {\n        this.checkedKeys = this.allTreeKeys\n      },\n      cancelCheckALL () {\n        this.checkedKeys = []\n      },\n      handleCancel () {\n        this.close()\n      },\n      handleSubmit(exit) {\n        let that = this;\n        let params =  {\n          roleId:that.roleId,\n          permissionIds:that.checkedKeys.join(\",\"),\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n        };\n        that.loading = true;\n        console.log(\"请求参数：\",params);\n        saveDeptRolePermission(params).then((res)=>{\n          if(res.success){\n            that.$message.success(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }else {\n            that.$message.error(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }\n          this.loadData();\n        })\n      },\n      convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n        for(const {key, isLeaf, children} of treeList) {\n          keyLeafPair.push({key, isLeaf})\n          if(children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n          }\n        }\n        return keyLeafPair;\n      },\n      loadData(){\n        queryTreeListForDeptRole({departId:this.departId}).then((res) => {\n          this.treeData = res.result.treeList\n          this.allTreeKeys = res.result.ids\n          queryDeptRolePermission({roleId:this.roleId}).then((res)=>{\n            this.checkedKeys = [...res.result];\n            this.defaultCheckedKeys = [...res.result];\n            this.expandedKeysss = this.allTreeKeys;\n          })\n        })\n      }\n    },\n    watch: {\n      visible () {\n        if (this.visible ) {\n          this.loadData();\n        }\n      }\n    }\n  }\n\n</script>\n<style lang=\"less\" scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n\n</style>"],"mappings":"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","ignoreList":[]}]}