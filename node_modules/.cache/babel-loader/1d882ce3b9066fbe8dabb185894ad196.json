{"remainingRequest":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\知识库系统\\admin\\src\\views\\system\\modules\\PermissionDataRuleModal.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\知识库系统\\admin\\src\\views\\system\\modules\\PermissionDataRuleModal.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["import { httpAction } from '@/api/manage';\nexport default {\n  name: 'PermissionDataRuleModal',\n  data: function data() {\n    return {\n      queryParam: {},\n      title: '操作',\n      visible: false,\n      model: {},\n      ruleConditionList: [],\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      permissionId: '',\n      validatorRules: {\n        ruleConditions: [{\n          required: true,\n          message: '请选择条件!'\n        }],\n        ruleName: [{\n          required: true,\n          message: '请输入规则名称!'\n        }],\n        ruleValue: [{\n          required: true,\n          message: '请输入规则值!'\n        }],\n        ruleColumn: []\n      },\n      url: {\n        list: '/sys/dictItem/list',\n        add: '/sys/permission/addPermissionRule',\n        edit: '/sys/permission/editPermissionRule'\n      },\n      showRuleColumn: true\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add(permId) {\n      this.permissionId = permId;\n      //初始化默认值\n      this.edit({\n        status: '1'\n      });\n    },\n    edit: function edit(record) {\n      this.model = Object.assign({}, record);\n      if (record.permissionId) {\n        this.model.permissionId = record.permissionId;\n      } else {\n        this.model.permissionId = this.permissionId;\n      }\n      this.visible = true;\n      this.initRuleCondition();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n      var that = this;\n      // 触发表单验证\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n          if (!_this.model.id) {\n            httpurl += _this.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this.url.edit;\n            method = 'put';\n          }\n          httpAction(httpurl, _this.model, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    initRuleCondition: function initRuleCondition() {\n      if (this.model.ruleConditions && this.model.ruleConditions == 'USE_SQL_RULES') {\n        this.showRuleColumn = false;\n      } else {\n        this.showRuleColumn = true;\n      }\n    },\n    handleChangeRuleCondition: function handleChangeRuleCondition(val) {\n      if (val == 'USE_SQL_RULES') {\n        this.model.ruleColumn = '';\n        this.showRuleColumn = false;\n      } else {\n        this.showRuleColumn = true;\n      }\n    }\n  }\n};",{"version":3,"names":["httpAction","name","data","queryParam","title","visible","model","ruleConditionList","labelCol","xs","span","sm","wrapperCol","confirmLoading","permissionId","validatorRules","ruleConditions","required","message","ruleName","ruleValue","ruleColumn","url","list","add","edit","showRuleColumn","created","methods","permId","status","record","Object","assign","initRuleCondition","close","$emit","$refs","form","resetFields","handleOk","_this","that","validate","valid","httpurl","method","id","then","res","success","$message","warning","finally","handleCancel","handleChangeRuleCondition","val"],"sources":["src/views/system/modules/PermissionDataRuleModal.vue"],"sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"1000\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"ruleName\"\n          label=\"规则名称\">\n          <a-input placeholder=\"请输入规则名称\" v-model=\"model.ruleName\"/>\n        </a-form-model-item>\n        <a-form-model-item\n          v-show=\"showRuleColumn\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"ruleColumn\"\n          label=\"规则字段\">\n          <a-input placeholder=\"请输入规则字段\" v-model.trim=\"model.ruleColumn\"/>\n        </a-form-model-item>\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"ruleConditions\"\n          label=\"条件规则\">\n          <j-dict-select-tag @input=\"handleChangeRuleCondition\" v-model=\"model.ruleConditions\" placeholder=\"请输入条件规则\" dictCode=\"rule_conditions\"/>\n        </a-form-model-item>\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"ruleValue\"\n          label=\"规则值\">\n          <a-input placeholder=\"请输入规则值\" v-model.trim=\"model.ruleValue\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"状态\">\n          <a-radio-group buttonStyle=\"solid\" v-model=\"model.status\">\n            <a-radio-button value=\"1\">有效</a-radio-button>\n            <a-radio-button value=\"0\">无效</a-radio-button>\n          </a-radio-group>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n<script>\n  import { httpAction } from '@/api/manage'\n\n  export default {\n    name: 'PermissionDataRuleModal',\n    data() {\n      return {\n        queryParam: {},\n        title: '操作',\n        visible: false,\n        model: {},\n        ruleConditionList: [],\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5}\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16}\n        },\n        confirmLoading: false,\n        permissionId: '',\n        validatorRules: {\n          ruleConditions:  [{required: true, message: '请选择条件!'}],\n          ruleName:[{required: true, message: '请输入规则名称!'}],\n          ruleValue:  [{required: true, message: '请输入规则值!'}],\n          ruleColumn: []\n        },\n        url: {\n          list: '/sys/dictItem/list',\n          add: '/sys/permission/addPermissionRule',\n          edit: '/sys/permission/editPermissionRule'\n        },\n        showRuleColumn:true\n      }\n    },\n    created() {\n    },\n    methods: {\n      add(permId) {\n        this.permissionId = permId\n        //初始化默认值\n        this.edit({status:'1'})\n      },\n      edit(record) {\n        this.model = Object.assign({}, record)\n        if (record.permissionId) {\n          this.model.permissionId = record.permissionId\n        } else {\n          this.model.permissionId = this.permissionId\n        }\n        this.visible = true\n        this.initRuleCondition()\n      },\n      close() {\n        this.$emit('close')\n        this.visible = false\n        this.$refs.form.resetFields()\n      },\n      handleOk() {\n        const that = this\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true\n            let httpurl = ''\n            let method = ''\n            if (!this.model.id) {\n              httpurl += this.url.add\n              method = 'post'\n            } else {\n              httpurl += this.url.edit\n              method = 'put'\n            }\n            httpAction(httpurl, this.model, method).then((res) => {\n              if (res.success) {\n                that.$message.success(res.message)\n                that.$emit('ok')\n              } else {\n                that.$message.warning(res.message)\n              }\n            }).finally(() => {\n              that.confirmLoading = false\n              that.close()\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      handleCancel() {\n        this.close()\n      },\n      initRuleCondition(){\n        if(this.model.ruleConditions && this.model.ruleConditions=='USE_SQL_RULES'){\n          this.showRuleColumn = false\n        }else{\n          this.showRuleColumn = true\n        }\n      },\n      handleChangeRuleCondition(val){\n        if(val=='USE_SQL_RULES'){\n          this.model.ruleColumn=''\n          this.showRuleColumn = false\n        }else{\n          this.showRuleColumn = true\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AA0DA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;MACAC,KAAA;MACAC,OAAA;MACAC,KAAA;MACAC,iBAAA;MACAC,QAAA;QACAC,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAE,UAAA;QACAH,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAG,cAAA;MACAC,YAAA;MACAC,cAAA;QACAC,cAAA;UAAAC,QAAA;UAAAC,OAAA;QAAA;QACAC,QAAA;UAAAF,QAAA;UAAAC,OAAA;QAAA;QACAE,SAAA;UAAAH,QAAA;UAAAC,OAAA;QAAA;QACAG,UAAA;MACA;MACAC,GAAA;QACAC,IAAA;QACAC,GAAA;QACAC,IAAA;MACA;MACAC,cAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA,GACA;EACAC,OAAA;IACAJ,GAAA,WAAAA,IAAAK,MAAA;MACA,KAAAf,YAAA,GAAAe,MAAA;MACA;MACA,KAAAJ,IAAA;QAAAK,MAAA;MAAA;IACA;IACAL,IAAA,WAAAA,KAAAM,MAAA;MACA,KAAAzB,KAAA,GAAA0B,MAAA,CAAAC,MAAA,KAAAF,MAAA;MACA,IAAAA,MAAA,CAAAjB,YAAA;QACA,KAAAR,KAAA,CAAAQ,YAAA,GAAAiB,MAAA,CAAAjB,YAAA;MACA;QACA,KAAAR,KAAA,CAAAQ,YAAA,QAAAA,YAAA;MACA;MACA,KAAAT,OAAA;MACA,KAAA6B,iBAAA;IACA;IACAC,KAAA,WAAAA,MAAA;MACA,KAAAC,KAAA;MACA,KAAA/B,OAAA;MACA,KAAAgC,KAAA,CAAAC,IAAA,CAAAC,WAAA;IACA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,IAAA;MACA;MACA,KAAAL,KAAA,CAAAC,IAAA,CAAAK,QAAA,WAAAC,KAAA;QACA,IAAAA,KAAA;UACAF,IAAA,CAAA7B,cAAA;UACA,IAAAgC,OAAA;UACA,IAAAC,MAAA;UACA,KAAAL,KAAA,CAAAnC,KAAA,CAAAyC,EAAA;YACAF,OAAA,IAAAJ,KAAA,CAAAnB,GAAA,CAAAE,GAAA;YACAsB,MAAA;UACA;YACAD,OAAA,IAAAJ,KAAA,CAAAnB,GAAA,CAAAG,IAAA;YACAqB,MAAA;UACA;UACA9C,UAAA,CAAA6C,OAAA,EAAAJ,KAAA,CAAAnC,KAAA,EAAAwC,MAAA,EAAAE,IAAA,WAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,OAAA;cACAR,IAAA,CAAAS,QAAA,CAAAD,OAAA,CAAAD,GAAA,CAAA/B,OAAA;cACAwB,IAAA,CAAAN,KAAA;YACA;cACAM,IAAA,CAAAS,QAAA,CAAAC,OAAA,CAAAH,GAAA,CAAA/B,OAAA;YACA;UACA,GAAAmC,OAAA;YACAX,IAAA,CAAA7B,cAAA;YACA6B,IAAA,CAAAP,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAmB,YAAA,WAAAA,aAAA;MACA,KAAAnB,KAAA;IACA;IACAD,iBAAA,WAAAA,kBAAA;MACA,SAAA5B,KAAA,CAAAU,cAAA,SAAAV,KAAA,CAAAU,cAAA;QACA,KAAAU,cAAA;MACA;QACA,KAAAA,cAAA;MACA;IACA;IACA6B,yBAAA,WAAAA,0BAAAC,GAAA;MACA,IAAAA,GAAA;QACA,KAAAlD,KAAA,CAAAe,UAAA;QACA,KAAAK,cAAA;MACA;QACA,KAAAA,cAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}