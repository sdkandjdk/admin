{"remainingRequest":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\workspace\\3月\\知识库系统\\admin\\src\\utils\\request.js","dependencies":[{"path":"F:\\workspace\\3月\\知识库系统\\admin\\src\\utils\\request.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1709701151904}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport Vue from 'vue';\nimport axios from 'axios';\nimport store from '@/store';\nimport { VueAxios } from './axios';\nimport { Modal, notification } from 'ant-design-vue';\nimport { ACCESS_TOKEN, TENANT_ID } from '@/store/mutation-types';\naxios.defaults.withCredentials = true;\n/**\n * 【指定 axios的 baseURL】\n * 如果手工指定 baseURL: '/jeecg-boot'\n * 则映射后端域名，通过 vue.config.js\n * @type {*|string}\n */\n\nvar apiBaseUrl = window._CONFIG['domianURL'] || '/jeecg-boot';\n//console.log(\"apiBaseUrl= \",apiBaseUrl)\n// 创建 axios 实例\nvar service = axios.create({\n  //baseURL: '/jeecg-boot',\n  baseURL: apiBaseUrl,\n  // api base_url\n  // timeout: 9000 // 请求超时时间\n  timeout: 0\n});\nvar err = function err(error) {\n  if (error.response) {\n    var data = error.response.data;\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    console.log('------异常响应------', token);\n    console.log('------异常响应------', error.response.status);\n    switch (error.response.status) {\n      case 403:\n        notification.error({\n          message: '系统提示',\n          description: '拒绝访问',\n          duration: 4\n        });\n        break;\n      case 500:\n        console.log('------error.response------', error.response);\n        // update-begin- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n        var type = error.response.request.responseType;\n        if (type === 'blob') {\n          blobToJson(data);\n          break;\n        }\n        // update-end- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n        //notification.error({ message: '系统提示', description:'Token失效，请重新登录!',duration: 4})\n        if (token && data.message.includes('Token失效')) {\n          // update-begin- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: function onOk() {\n              store.dispatch('Logout').then(function () {\n                Vue.ls.remove(ACCESS_TOKEN);\n                try {\n                  var path = window.document.location.pathname;\n                  console.log('location pathname -> ' + path);\n                  if (path != '/' && path.indexOf('/user/login') == -1) {\n                    window.location.reload();\n                  }\n                } catch (e) {\n                  window.location.reload();\n                }\n              });\n            }\n          });\n          // update-end- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n        }\n        break;\n      case 404:\n        notification.error({\n          message: '系统提示',\n          description: '很抱歉，资源未找到!',\n          duration: 4\n        });\n        break;\n      case 504:\n        notification.error({\n          message: '系统提示',\n          description: '网络超时'\n        });\n        break;\n      case 401:\n        notification.error({\n          message: '系统提示',\n          description: '未授权，请重新登录',\n          duration: 4\n        });\n        if (token) {\n          store.dispatch('Logout').then(function () {\n            setTimeout(function () {\n              window.location.reload();\n            }, 1500);\n          });\n        }\n        break;\n      default:\n        notification.error({\n          message: '系统提示',\n          description: data.message,\n          duration: 4\n        });\n        break;\n    }\n  }\n  return Promise.reject(error);\n};\n\n// request interceptor\nservice.interceptors.request.use(function (config) {\n  var token = Vue.ls.get(ACCESS_TOKEN);\n  if (token) {\n    config.headers['X-Access-Token'] = token; // 让每个请求携带自定义 token 请根据实际情况自行修改\n  }\n  //update-begin-author:taoyan date:2020707 for:多租户\n  var tenantid = Vue.ls.get(TENANT_ID);\n  if (!tenantid) {\n    tenantid = 0;\n  }\n  config.headers['tenant-id'] = tenantid;\n  //update-end-author:taoyan date:2020707 for:多租户\n  if (config.method == 'get') {\n    if (config.url.indexOf('sys/dict/getDictItems') < 0) {\n      config.params = _objectSpread({\n        _t: Date.parse(new Date()) / 1000\n      }, config.params);\n    }\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n// response interceptor\nservice.interceptors.response.use(function (response) {\n  if (response.config.responseType === \"blob\") {\n    var subUrl = response.config.url.substring(response.config.url.length - 13);\n    // 自定义判断请求路径，可以拿到headers的值\n    if (subUrl === 'downloadKmDoc') {\n      return response;\n    }\n  }\n  return response.data;\n}, err);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    var router = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Vue.use(VueAxios, router, service);\n  }\n};\n\n/**\n * Blob解析\n * @param data\n */\nfunction blobToJson(data) {\n  var fileReader = new FileReader();\n  var token = Vue.ls.get(ACCESS_TOKEN);\n  fileReader.onload = function () {\n    try {\n      var jsonData = JSON.parse(this.result); // 说明是普通对象数据，后台转换失败\n      console.log('jsonData', jsonData);\n      if (jsonData.status === 500) {\n        console.log('token----------》', token);\n        if (token && jsonData.message.includes('Token失效')) {\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: function onOk() {\n              store.dispatch('Logout').then(function () {\n                Vue.ls.remove(ACCESS_TOKEN);\n                window.location.reload();\n              });\n            }\n          });\n        }\n      }\n    } catch (err) {\n      // 解析成对象失败，说明是正常的文件流\n      console.log('blob解析fileReader返回err', err);\n    }\n  };\n  fileReader.readAsText(data);\n}\nexport { installer as VueAxios, service as axios };",{"version":3,"names":["Vue","axios","store","VueAxios","Modal","notification","ACCESS_TOKEN","TENANT_ID","defaults","withCredentials","apiBaseUrl","window","_CONFIG","service","create","baseURL","timeout","err","error","response","data","token","ls","get","console","log","status","message","description","duration","type","request","responseType","blobToJson","includes","title","content","okText","mask","onOk","dispatch","then","remove","path","document","location","pathname","indexOf","reload","e","setTimeout","Promise","reject","interceptors","use","config","headers","tenantid","method","url","params","_objectSpread","_t","Date","parse","subUrl","substring","length","installer","vm","install","router","arguments","undefined","fileReader","FileReader","onload","jsonData","JSON","result","readAsText"],"sources":["F:/workspace/3月/知识库系统/admin/src/utils/request.js"],"sourcesContent":["import Vue from 'vue'\nimport axios from 'axios'\nimport store from '@/store'\nimport {VueAxios} from './axios'\nimport {Modal, notification} from 'ant-design-vue'\nimport {ACCESS_TOKEN, TENANT_ID} from '@/store/mutation-types'\n\naxios.defaults.withCredentials = true\n/**\n * 【指定 axios的 baseURL】\n * 如果手工指定 baseURL: '/jeecg-boot'\n * 则映射后端域名，通过 vue.config.js\n * @type {*|string}\n */\n\nlet apiBaseUrl = window._CONFIG['domianURL'] || '/jeecg-boot'\n//console.log(\"apiBaseUrl= \",apiBaseUrl)\n// 创建 axios 实例\nconst service = axios.create({\n  //baseURL: '/jeecg-boot',\n  baseURL: apiBaseUrl, // api base_url\n  // timeout: 9000 // 请求超时时间\n  timeout: 0,\n})\n\nconst err = (error) => {\n  if (error.response) {\n    let data = error.response.data\n    const token = Vue.ls.get(ACCESS_TOKEN)\n    console.log('------异常响应------', token)\n    console.log('------异常响应------', error.response.status)\n    switch (error.response.status) {\n      case 403:\n        notification.error({message: '系统提示', description: '拒绝访问', duration: 4})\n        break\n      case 500:\n        console.log('------error.response------', error.response)\n        // update-begin- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n        let type = error.response.request.responseType\n        if (type === 'blob') {\n          blobToJson(data)\n          break\n        }\n        // update-end- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n        //notification.error({ message: '系统提示', description:'Token失效，请重新登录!',duration: 4})\n        if (token && data.message.includes('Token失效')) {\n          // update-begin- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: () => {\n              store.dispatch('Logout').then(() => {\n                Vue.ls.remove(ACCESS_TOKEN)\n                try {\n                  let path = window.document.location.pathname\n                  console.log('location pathname -> ' + path)\n                  if (path != '/' && path.indexOf('/user/login') == -1) {\n                    window.location.reload()\n                  }\n                } catch (e) {\n                  window.location.reload()\n                }\n              })\n            }\n          })\n          // update-end- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n        }\n        break\n      case 404:\n        notification.error({message: '系统提示', description: '很抱歉，资源未找到!', duration: 4})\n        break\n      case 504:\n        notification.error({message: '系统提示', description: '网络超时'})\n        break\n      case 401:\n        notification.error({message: '系统提示', description: '未授权，请重新登录', duration: 4})\n        if (token) {\n          store.dispatch('Logout').then(() => {\n            setTimeout(() => {\n              window.location.reload()\n            }, 1500)\n          })\n        }\n        break\n      default:\n        notification.error({\n          message: '系统提示',\n          description: data.message,\n          duration: 4\n        })\n        break\n    }\n  }\n  return Promise.reject(error)\n}\n\n// request interceptor\nservice.interceptors.request.use(config => {\n  const token = Vue.ls.get(ACCESS_TOKEN)\n  if (token) {\n    config.headers['X-Access-Token'] = token // 让每个请求携带自定义 token 请根据实际情况自行修改\n  }\n  //update-begin-author:taoyan date:2020707 for:多租户\n  let tenantid = Vue.ls.get(TENANT_ID)\n  if (!tenantid) {\n    tenantid = 0\n  }\n  config.headers['tenant-id'] = tenantid\n  //update-end-author:taoyan date:2020707 for:多租户\n  if (config.method == 'get') {\n    if (config.url.indexOf('sys/dict/getDictItems') < 0) {\n      config.params = {\n        _t: Date.parse(new Date()) / 1000,\n        ...config.params\n\n      }\n    }\n  }\n  return config\n}, (error) => {\n  return Promise.reject(error)\n})\n\n// response interceptor\nservice.interceptors.response.use((response) => {\n\n  if (response.config.responseType === \"blob\") {\n    let subUrl = response.config.url.substring(response.config.url.length - 13)\n    // 自定义判断请求路径，可以拿到headers的值\n    if (subUrl === 'downloadKmDoc') {\n      return response\n    }\n  }\n\n  return response.data\n\n}, err)\n\nconst installer = {\n  vm: {},\n  install(Vue, router = {}) {\n    Vue.use(VueAxios, router, service)\n  }\n}\n\n/**\n * Blob解析\n * @param data\n */\nfunction blobToJson(data) {\n  let fileReader = new FileReader()\n  let token = Vue.ls.get(ACCESS_TOKEN)\n  fileReader.onload = function () {\n    try {\n      let jsonData = JSON.parse(this.result)  // 说明是普通对象数据，后台转换失败\n      console.log('jsonData', jsonData)\n      if (jsonData.status === 500) {\n        console.log('token----------》', token)\n        if (token && jsonData.message.includes('Token失效')) {\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: () => {\n              store.dispatch('Logout').then(() => {\n                Vue.ls.remove(ACCESS_TOKEN)\n                window.location.reload()\n              })\n            }\n          })\n        }\n      }\n    } catch (err) {\n      // 解析成对象失败，说明是正常的文件流\n      console.log('blob解析fileReader返回err', err)\n    }\n  }\n  fileReader.readAsText(data)\n}\n\nexport {\n  installer as VueAxios,\n  service as axios\n}"],"mappings":";;;;;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAAQC,QAAQ,QAAO,SAAS;AAChC,SAAQC,KAAK,EAAEC,YAAY,QAAO,gBAAgB;AAClD,SAAQC,YAAY,EAAEC,SAAS,QAAO,wBAAwB;AAE9DN,KAAK,CAACO,QAAQ,CAACC,eAAe,GAAG,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GAAGC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,aAAa;AAC7D;AACA;AACA,IAAMC,OAAO,GAAGZ,KAAK,CAACa,MAAM,CAAC;EAC3B;EACAC,OAAO,EAAEL,UAAU;EAAE;EACrB;EACAM,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAIC,KAAK,EAAK;EACrB,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAClB,IAAIC,IAAI,GAAGF,KAAK,CAACC,QAAQ,CAACC,IAAI;IAC9B,IAAMC,KAAK,GAAGrB,GAAG,CAACsB,EAAE,CAACC,GAAG,CAACjB,YAAY,CAAC;IACtCkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,KAAK,CAAC;IACtCG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,KAAK,CAACC,QAAQ,CAACO,MAAM,CAAC;IACtD,QAAQR,KAAK,CAACC,QAAQ,CAACO,MAAM;MAC3B,KAAK,GAAG;QACNrB,YAAY,CAACa,KAAK,CAAC;UAACS,OAAO,EAAE,MAAM;UAAEC,WAAW,EAAE,MAAM;UAAEC,QAAQ,EAAE;QAAC,CAAC,CAAC;QACvE;MACF,KAAK,GAAG;QACNL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEP,KAAK,CAACC,QAAQ,CAAC;QACzD;QACA,IAAIW,IAAI,GAAGZ,KAAK,CAACC,QAAQ,CAACY,OAAO,CAACC,YAAY;QAC9C,IAAIF,IAAI,KAAK,MAAM,EAAE;UACnBG,UAAU,CAACb,IAAI,CAAC;UAChB;QACF;QACA;QACA;QACA,IAAIC,KAAK,IAAID,IAAI,CAACO,OAAO,CAACO,QAAQ,CAAC,SAAS,CAAC,EAAE;UAC7C;UACA9B,KAAK,CAACc,KAAK,CAAC;YACViB,KAAK,EAAE,OAAO;YACdC,OAAO,EAAE,iBAAiB;YAC1BC,MAAM,EAAE,MAAM;YACdC,IAAI,EAAE,KAAK;YACXC,IAAI,EAAE,SAAAA,KAAA,EAAM;cACVrC,KAAK,CAACsC,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,YAAM;gBAClCzC,GAAG,CAACsB,EAAE,CAACoB,MAAM,CAACpC,YAAY,CAAC;gBAC3B,IAAI;kBACF,IAAIqC,IAAI,GAAGhC,MAAM,CAACiC,QAAQ,CAACC,QAAQ,CAACC,QAAQ;kBAC5CtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGkB,IAAI,CAAC;kBAC3C,IAAIA,IAAI,IAAI,GAAG,IAAIA,IAAI,CAACI,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE;oBACpDpC,MAAM,CAACkC,QAAQ,CAACG,MAAM,CAAC,CAAC;kBAC1B;gBACF,CAAC,CAAC,OAAOC,CAAC,EAAE;kBACVtC,MAAM,CAACkC,QAAQ,CAACG,MAAM,CAAC,CAAC;gBAC1B;cACF,CAAC,CAAC;YACJ;UACF,CAAC,CAAC;UACF;QACF;QACA;MACF,KAAK,GAAG;QACN3C,YAAY,CAACa,KAAK,CAAC;UAACS,OAAO,EAAE,MAAM;UAAEC,WAAW,EAAE,YAAY;UAAEC,QAAQ,EAAE;QAAC,CAAC,CAAC;QAC7E;MACF,KAAK,GAAG;QACNxB,YAAY,CAACa,KAAK,CAAC;UAACS,OAAO,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAM,CAAC,CAAC;QAC1D;MACF,KAAK,GAAG;QACNvB,YAAY,CAACa,KAAK,CAAC;UAACS,OAAO,EAAE,MAAM;UAAEC,WAAW,EAAE,WAAW;UAAEC,QAAQ,EAAE;QAAC,CAAC,CAAC;QAC5E,IAAIR,KAAK,EAAE;UACTnB,KAAK,CAACsC,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,YAAM;YAClCS,UAAU,CAAC,YAAM;cACfvC,MAAM,CAACkC,QAAQ,CAACG,MAAM,CAAC,CAAC;YAC1B,CAAC,EAAE,IAAI,CAAC;UACV,CAAC,CAAC;QACJ;QACA;MACF;QACE3C,YAAY,CAACa,KAAK,CAAC;UACjBS,OAAO,EAAE,MAAM;UACfC,WAAW,EAAER,IAAI,CAACO,OAAO;UACzBE,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF;IACJ;EACF;EACA,OAAOsB,OAAO,CAACC,MAAM,CAAClC,KAAK,CAAC;AAC9B,CAAC;;AAED;AACAL,OAAO,CAACwC,YAAY,CAACtB,OAAO,CAACuB,GAAG,CAAC,UAAAC,MAAM,EAAI;EACzC,IAAMlC,KAAK,GAAGrB,GAAG,CAACsB,EAAE,CAACC,GAAG,CAACjB,YAAY,CAAC;EACtC,IAAIe,KAAK,EAAE;IACTkC,MAAM,CAACC,OAAO,CAAC,gBAAgB,CAAC,GAAGnC,KAAK,EAAC;EAC3C;EACA;EACA,IAAIoC,QAAQ,GAAGzD,GAAG,CAACsB,EAAE,CAACC,GAAG,CAAChB,SAAS,CAAC;EACpC,IAAI,CAACkD,QAAQ,EAAE;IACbA,QAAQ,GAAG,CAAC;EACd;EACAF,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,QAAQ;EACtC;EACA,IAAIF,MAAM,CAACG,MAAM,IAAI,KAAK,EAAE;IAC1B,IAAIH,MAAM,CAACI,GAAG,CAACZ,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE;MACnDQ,MAAM,CAACK,MAAM,GAAAC,aAAA;QACXC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAAC,CAAC,CAAC,GAAG;MAAI,GAC9BR,MAAM,CAACK,MAAM,CAEjB;IACH;EACF;EACA,OAAOL,MAAM;AACf,CAAC,EAAE,UAACrC,KAAK,EAAK;EACZ,OAAOiC,OAAO,CAACC,MAAM,CAAClC,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAL,OAAO,CAACwC,YAAY,CAAClC,QAAQ,CAACmC,GAAG,CAAC,UAACnC,QAAQ,EAAK;EAE9C,IAAIA,QAAQ,CAACoC,MAAM,CAACvB,YAAY,KAAK,MAAM,EAAE;IAC3C,IAAIiC,MAAM,GAAG9C,QAAQ,CAACoC,MAAM,CAACI,GAAG,CAACO,SAAS,CAAC/C,QAAQ,CAACoC,MAAM,CAACI,GAAG,CAACQ,MAAM,GAAG,EAAE,CAAC;IAC3E;IACA,IAAIF,MAAM,KAAK,eAAe,EAAE;MAC9B,OAAO9C,QAAQ;IACjB;EACF;EAEA,OAAOA,QAAQ,CAACC,IAAI;AAEtB,CAAC,EAAEH,GAAG,CAAC;AAEP,IAAMmD,SAAS,GAAG;EAChBC,EAAE,EAAE,CAAC,CAAC;EACNC,OAAO,WAAAA,QAACtE,GAAG,EAAe;IAAA,IAAbuE,MAAM,GAAAC,SAAA,CAAAL,MAAA,QAAAK,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;IACtBxE,GAAG,CAACsD,GAAG,CAACnD,QAAQ,EAAEoE,MAAM,EAAE1D,OAAO,CAAC;EACpC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASoB,UAAUA,CAACb,IAAI,EAAE;EACxB,IAAIsD,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC;EACjC,IAAItD,KAAK,GAAGrB,GAAG,CAACsB,EAAE,CAACC,GAAG,CAACjB,YAAY,CAAC;EACpCoE,UAAU,CAACE,MAAM,GAAG,YAAY;IAC9B,IAAI;MACF,IAAIC,QAAQ,GAAGC,IAAI,CAACd,KAAK,CAAC,IAAI,CAACe,MAAM,CAAC,EAAE;MACxCvD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEoD,QAAQ,CAAC;MACjC,IAAIA,QAAQ,CAACnD,MAAM,KAAK,GAAG,EAAE;QAC3BF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,KAAK,CAAC;QACtC,IAAIA,KAAK,IAAIwD,QAAQ,CAAClD,OAAO,CAACO,QAAQ,CAAC,SAAS,CAAC,EAAE;UACjD9B,KAAK,CAACc,KAAK,CAAC;YACViB,KAAK,EAAE,OAAO;YACdC,OAAO,EAAE,iBAAiB;YAC1BC,MAAM,EAAE,MAAM;YACdC,IAAI,EAAE,KAAK;YACXC,IAAI,EAAE,SAAAA,KAAA,EAAM;cACVrC,KAAK,CAACsC,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,YAAM;gBAClCzC,GAAG,CAACsB,EAAE,CAACoB,MAAM,CAACpC,YAAY,CAAC;gBAC3BK,MAAM,CAACkC,QAAQ,CAACG,MAAM,CAAC,CAAC;cAC1B,CAAC,CAAC;YACJ;UACF,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC,OAAO/B,GAAG,EAAE;MACZ;MACAO,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAER,GAAG,CAAC;IAC3C;EACF,CAAC;EACDyD,UAAU,CAACM,UAAU,CAAC5D,IAAI,CAAC;AAC7B;AAEA,SACEgD,SAAS,IAAIjE,QAAQ,EACrBU,OAAO,IAAIZ,KAAK","ignoreList":[]}]}