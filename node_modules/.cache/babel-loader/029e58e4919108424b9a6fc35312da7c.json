{"remainingRequest":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\知识库系统\\admin\\src\\views\\system\\modules\\DictItemModal.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\知识库系统\\admin\\src\\views\\system\\modules\\DictItemModal.vue","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import pick from 'lodash.pick';\nimport { addDictItem, editDictItem } from '@/api/api';\nimport { getAction } from '@api/manage';\nexport default {\n  name: \"DictItemModal\",\n  data: function data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      visibleCheck: true,\n      model: {},\n      dictId: \"\",\n      status: 1,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        itemText: [{\n          required: true,\n          message: '请输入名称!'\n        }],\n        itemValue: [{\n          required: true,\n          message: '请输入数据值!'\n        }, {\n          validator: this.validateItemValue\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add(dictId) {\n      this.dictId = dictId;\n      //初始化默认值\n      this.edit({\n        sortOrder: 1,\n        status: 1\n      });\n    },\n    edit: function edit(record) {\n      if (record.id) {\n        this.dictId = record.dictId;\n      }\n      this.status = record.status;\n      this.visibleCheck = record.status == 1 ? true : false;\n      this.model = Object.assign({}, record);\n      this.model.dictId = this.dictId;\n      this.model.status = this.status;\n      this.visible = true;\n    },\n    onChose: function onChose(checked) {\n      if (checked) {\n        this.status = 1;\n        this.visibleCheck = true;\n      } else {\n        this.status = 0;\n        this.visibleCheck = false;\n      }\n    },\n    // 确定\n    handleOk: function handleOk() {\n      var _this = this;\n      var that = this;\n      // 触发表单验证\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          _this.model.itemText = (_this.model.itemText || '').trim();\n          _this.model.itemValue = (_this.model.itemValue || '').trim();\n          _this.model.description = (_this.model.description || '').trim();\n          _this.model.status = _this.status;\n          var obj;\n          if (!_this.model.id) {\n            obj = addDictItem(_this.model);\n          } else {\n            obj = editDictItem(_this.model);\n          }\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 关闭\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    validateItemValue: function validateItemValue(rule, value, callback) {\n      var param = {\n        itemValue: value,\n        dictId: this.dictId\n      };\n      if (this.model.id) {\n        param.id = this.model.id;\n      }\n      if (value) {\n        var reg = new RegExp(\"[`_~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\");\n        if (reg.test(value)) {\n          callback(\"数据值不能包含特殊字符！\");\n        } else {\n          //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n          getAction(\"/sys/dictItem/dictItemCheck\", param).then(function (res) {\n            if (res.success) {\n              callback();\n            } else {\n              callback(res.message);\n            }\n          });\n          //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n        }\n      } else {\n        callback();\n      }\n    }\n  }\n};",{"version":3,"names":["pick","addDictItem","editDictItem","getAction","name","data","title","visible","visibleCheck","model","dictId","status","labelCol","xs","span","sm","wrapperCol","confirmLoading","validatorRules","itemText","required","message","itemValue","validator","validateItemValue","created","methods","add","edit","sortOrder","record","id","Object","assign","onChose","checked","handleOk","_this","that","$refs","form","validate","valid","trim","description","obj","then","res","success","$message","$emit","warning","finally","close","handleCancel","resetFields","rule","value","callback","param","reg","RegExp","test"],"sources":["src/views/system/modules/DictItemModal.vue"],"sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model  ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"itemText\"\n          label=\"名称\">\n          <a-input placeholder=\"请输入名称\" v-model=\"model.itemText\"/>\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"itemValue\"\n          label=\"数据值\">\n          <a-input placeholder=\"请输入数据值\" v-model=\"model.itemValue\" />\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\">\n          <a-input v-model=\"model.description\" />\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"排序值\">\n          <a-input-number :min=\"1\" v-model=\"model.sortOrder\" />\n          值越小越靠前\n        </a-form-model-item>\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"是否启用\"\n          hasFeedback>\n          <a-switch checkedChildren=\"启用\" unCheckedChildren=\"禁用\" @change=\"onChose\" v-model=\"visibleCheck\"/>\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import {addDictItem, editDictItem} from '@/api/api'\n  import { getAction } from '@api/manage'\n\n  export default {\n    name: \"DictItemModal\",\n    data() {\n      return {\n        title: \"操作\",\n        visible: false,\n        visibleCheck: true,\n        model: {},\n        dictId: \"\",\n        status: 1,\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n        confirmLoading: false,\n        validatorRules: {\n          itemText:  [{required: true, message: '请输入名称!'}],\n          itemValue:  [{required: true, message: '请输入数据值!'},{validator: this.validateItemValue}],\n        },\n      }\n    },\n    created() {\n    },\n    methods: {\n      add(dictId) {\n        this.dictId = dictId;\n        //初始化默认值\n        this.edit({sortOrder:1,status:1});\n      },\n      edit(record) {\n        if (record.id) {\n          this.dictId = record.dictId;\n        }\n        this.status = record.status;\n        this.visibleCheck = (record.status == 1) ? true : false;\n        this.model = Object.assign({}, record);\n        this.model.dictId = this.dictId;\n        this.model.status = this.status;\n        this.visible = true;\n      },\n      onChose(checked) {\n        if (checked) {\n          this.status = 1;\n          this.visibleCheck = true;\n        } else {\n          this.status = 0;\n          this.visibleCheck = false;\n        }\n      },\n      // 确定\n      handleOk() {\n        const that = this;\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true;\n            this.model.itemText = (this.model.itemText || '').trim()\n            this.model.itemValue = (this.model.itemValue || '').trim()\n            this.model.description = (this.model.description || '').trim()\n            this.model.status = this.status;\n            let obj;\n            if (!this.model.id) {\n              obj = addDictItem(this.model);\n            } else {\n              obj = editDictItem(this.model);\n            }\n            obj.then((res) => {\n              if (res.success) {\n                that.$message.success(res.message);\n                that.$emit('ok');\n              } else {\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      // 关闭\n      handleCancel() {\n        this.close();\n      },\n      close() {\n        this.$emit('close');\n        this.visible = false;\n        this.$refs.form.resetFields();\n      },\n      validateItemValue(rule, value, callback){\n        let param = {\n          itemValue:value,\n          dictId:this.dictId,\n        }\n        if(this.model.id){\n          param.id = this.model.id\n        }\n        if(value){\n          let reg=new RegExp(\"[`_~!@#$^&*()=|{}'.<>《》/?！￥（）—【】‘；：”“。，、？]\")\n          if(reg.test(value)){\n            callback(\"数据值不能包含特殊字符！\")\n          }else{\n            //update--begin--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n            getAction(\"/sys/dictItem/dictItemCheck\",param).then((res)=>{\n              if(res.success){\n                callback()\n              }else{\n                callback(res.message);\n              }\n            });\n            //update--end--autor:lvdandan-----date:20201203------for：JT-27【数据字典】字典 - 数据值可重复\n          }\n        }else{\n          callback()\n        }\n      }\n    }\n  }\n</script>\n"],"mappings":"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","ignoreList":[]}]}