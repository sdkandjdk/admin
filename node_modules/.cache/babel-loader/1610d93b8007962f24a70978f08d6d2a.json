{"remainingRequest":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\知识库系统\\admin\\src\\components\\tools\\UserPassword.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\知识库系统\\admin\\src\\components\\tools\\UserPassword.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["import { putAction } from '@/api/manage';\nexport default {\n  name: \"UserPassword\",\n  data: function data() {\n    return {\n      title: \"修改密码\",\n      modalWidth: 800,\n      visible: false,\n      confirmLoading: false,\n      validatorRules: {\n        oldpassword: {\n          rules: [{\n            required: true,\n            message: '请输入旧密码!'\n          }]\n        },\n        password: {\n          rules: [{\n            required: true,\n            message: '请输入新密码!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        },\n        confirmpassword: {\n          rules: [{\n            required: true,\n            message: '请确认新密码!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        }\n      },\n      confirmDirty: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      url: \"sys/user/updatePassword\",\n      username: \"\"\n    };\n  },\n  methods: {\n    show: function show(uname) {\n      if (!uname) {\n        this.$message.warning(\"当前系统无登录用户!\");\n        return;\n      } else {\n        this.username = uname;\n        this.form.resetFields();\n        this.visible = true;\n      }\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n      var that = this;\n      // 触发表单验证\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var params = Object.assign({\n            username: _this.username\n          }, values);\n          console.log(\"修改密码提交数据\", params);\n          putAction(_this.url, params).then(function (res) {\n            if (res.success) {\n              console.log(res);\n              that.$message.success(res.message);\n              that.close();\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n          });\n        }\n      });\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var form = this.form;\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      var form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    }\n  }\n};",{"version":3,"names":["putAction","name","data","title","modalWidth","visible","confirmLoading","validatorRules","oldpassword","rules","required","message","password","validator","validateToNextPassword","confirmpassword","compareToFirstPassword","confirmDirty","labelCol","xs","span","sm","wrapperCol","form","$form","createForm","url","username","methods","show","uname","$message","warning","resetFields","handleCancel","close","$emit","disableSubmit","selectedRole","handleOk","_this","that","validateFields","err","values","params","Object","assign","console","log","then","res","success","finally","rule","value","callback","force","getFieldValue","handleConfirmBlur","e","target"],"sources":["src/components/tools/UserPassword.vue"],"sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"旧密码\">\n          <a-input type=\"password\" placeholder=\"请输入旧密码\" v-decorator=\"[ 'oldpassword', validatorRules.oldpassword]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"新密码\">\n          <a-input type=\"password\" placeholder=\"请输入新密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"确认新密码\">\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请确认新密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n\n  import { putAction } from '@/api/manage'\n\n  export default {\n    name: \"UserPassword\",\n    data () {\n      return {\n        title:\"修改密码\",\n        modalWidth:800,\n        visible: false,\n        confirmLoading: false,\n        validatorRules:{\n          oldpassword:{\n            rules: [{\n              required: true, message: '请输入旧密码!',\n            }],\n          },\n          password:{\n            rules: [{\n              required: true, message: '请输入新密码!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          },\n          confirmpassword:{\n            rules: [{\n              required: true, message: '请确认新密码!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          }\n        },\n        confirmDirty:false,\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n\n        form:this.$form.createForm(this),\n        url: \"sys/user/updatePassword\",\n        username:\"\",\n      }\n    },\n    methods: {\n      show(uname){\n        if(!uname){\n          this.$message.warning(\"当前系统无登录用户!\");\n          return\n        }else{\n          this.username = uname\n          this.form.resetFields();\n          this.visible = true;\n        }\n      },\n      handleCancel () {\n        this.close()\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.selectedRole = [];\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let params = Object.assign({username:this.username},values)\n            console.log(\"修改密码提交数据\",params)\n            putAction(this.url,params).then((res)=>{\n              if(res.success){\n                console.log(res)\n                that.$message.success(res.message);\n                that.close();\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n            })\n          }\n        })\n      },\n      validateToNextPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && this.confirmDirty) {\n          form.validateFields(['confirm'], { force: true })\n        }\n        callback();\n      },\n      compareToFirstPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      handleConfirmBlur  (e) {\n        const value = e.target.value\n        this.confirmDirty = this.confirmDirty || !!value\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n"],"mappings":"AAyCA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,UAAA;MACAC,OAAA;MACAC,cAAA;MACAC,cAAA;QACAC,WAAA;UACAC,KAAA;YACAC,QAAA;YAAAC,OAAA;UACA;QACA;QACAC,QAAA;UACAH,KAAA;YACAC,QAAA;YAAAC,OAAA;UACA;YACAE,SAAA,OAAAC;UACA;QACA;QACAC,eAAA;UACAN,KAAA;YACAC,QAAA;YAAAC,OAAA;UACA;YACAE,SAAA,OAAAG;UACA;QACA;MACA;MACAC,YAAA;MACAC,QAAA;QACAC,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAE,UAAA;QACAH,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MAEAG,IAAA,OAAAC,KAAA,CAAAC,UAAA;MACAC,GAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA,WAAAA,KAAAC,KAAA;MACA,KAAAA,KAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;QACA,KAAAL,QAAA,GAAAG,KAAA;QACA,KAAAP,IAAA,CAAAU,WAAA;QACA,KAAA5B,OAAA;MACA;IACA;IACA6B,YAAA,WAAAA,aAAA;MACA,KAAAC,KAAA;IACA;IACAA,KAAA,WAAAA,MAAA;MACA,KAAAC,KAAA;MACA,KAAA/B,OAAA;MACA,KAAAgC,aAAA;MACA,KAAAC,YAAA;IACA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,IAAA;MACA;MACA,KAAAlB,IAAA,CAAAmB,cAAA,WAAAC,GAAA,EAAAC,MAAA;QACA,KAAAD,GAAA;UACAF,IAAA,CAAAnC,cAAA;UACA,IAAAuC,MAAA,GAAAC,MAAA,CAAAC,MAAA;YAAApB,QAAA,EAAAa,KAAA,CAAAb;UAAA,GAAAiB,MAAA;UACAI,OAAA,CAAAC,GAAA,aAAAJ,MAAA;UACA7C,SAAA,CAAAwC,KAAA,CAAAd,GAAA,EAAAmB,MAAA,EAAAK,IAAA,WAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,OAAA;cACAJ,OAAA,CAAAC,GAAA,CAAAE,GAAA;cACAV,IAAA,CAAAV,QAAA,CAAAqB,OAAA,CAAAD,GAAA,CAAAxC,OAAA;cACA8B,IAAA,CAAAN,KAAA;YACA;cACAM,IAAA,CAAAV,QAAA,CAAAC,OAAA,CAAAmB,GAAA,CAAAxC,OAAA;YACA;UACA,GAAA0C,OAAA;YACAZ,IAAA,CAAAnC,cAAA;UACA;QACA;MACA;IACA;IACAQ,sBAAA,WAAAA,uBAAAwC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAjC,IAAA,QAAAA,IAAA;MACA,IAAAgC,KAAA,SAAAtC,YAAA;QACAM,IAAA,CAAAmB,cAAA;UAAAe,KAAA;QAAA;MACA;MACAD,QAAA;IACA;IACAxC,sBAAA,WAAAA,uBAAAsC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAjC,IAAA,QAAAA,IAAA;MACA,IAAAgC,KAAA,IAAAA,KAAA,KAAAhC,IAAA,CAAAmC,aAAA;QACAF,QAAA;MACA;QACAA,QAAA;MACA;IACA;IACAG,iBAAA,WAAAA,kBAAAC,CAAA;MACA,IAAAL,KAAA,GAAAK,CAAA,CAAAC,MAAA,CAAAN,KAAA;MACA,KAAAtC,YAAA,QAAAA,YAAA,MAAAsC,KAAA;IACA;EAEA;AACA","ignoreList":[]}]}