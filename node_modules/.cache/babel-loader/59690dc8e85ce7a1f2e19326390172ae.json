{"remainingRequest":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\work-25\\知识库系统\\admin\\src\\components\\tools\\DepartSelect.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\work-25\\知识库系统\\admin\\src\\components\\tools\\DepartSelect.vue","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { getAction, putAction } from '@/api/manage';\nimport Vue from 'vue';\nimport store from '@/store/';\nimport { USER_INFO } from \"@/store/mutation-types\";\nexport default {\n  name: 'DepartSelect',\n  props: {\n    title: {\n      type: String,\n      default: \"部门选择\",\n      required: false\n    },\n    closable: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    username: {\n      type: String,\n      default: \"\",\n      required: false\n    }\n  },\n  watch: {\n    username: function username(val) {\n      if (val) {\n        this.loadDepartList();\n      }\n    }\n  },\n  data: function data() {\n    return {\n      currTitle: this.title,\n      visible: false,\n      departList: [],\n      departSelected: \"\",\n      validate_status: \"\",\n      currDepartName: \"\"\n    };\n  },\n  created: function created() {\n    //this.loadDepartList()\n  },\n  methods: {\n    loadDepartList: function loadDepartList() {\n      var _this = this;\n      return new Promise(function (resolve) {\n        var url = \"/sys/user/getCurrentUserDeparts\";\n        _this.currDepartName = '';\n        getAction(url).then(function (res) {\n          if (res.success) {\n            var departs = res.result.list;\n            var orgCode = res.result.orgCode;\n            if (departs && departs.length > 0) {\n              var _iterator = _createForOfIteratorHelper(departs),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var i = _step.value;\n                  if (i.orgCode == orgCode) {\n                    _this.currDepartName = i.departName;\n                    break;\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            }\n            _this.departSelected = orgCode;\n            _this.departList = departs;\n            if (_this.currDepartName) {\n              _this.currTitle = \"部门切换（当前部门 : \" + _this.currDepartName + \"）\";\n            }\n          }\n          resolve();\n        });\n      });\n    },\n    close: function close() {\n      this.departClear();\n    },\n    departOk: function departOk() {\n      var _this2 = this;\n      if (!this.departSelected) {\n        this.validate_status = 'error';\n        return false;\n      }\n      var obj = {\n        orgCode: this.departSelected,\n        username: this.username\n      };\n      putAction(\"/sys/selectDepart\", obj).then(function (res) {\n        if (res.success) {\n          var userInfo = res.result.userInfo;\n          Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000);\n          store.commit('SET_INFO', userInfo);\n          //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\n          _this2.departClear();\n        }\n      });\n    },\n    show: function show() {\n      var _this3 = this;\n      //如果组件传值username此处就不用loadDepartList了\n      this.loadDepartList().then(function () {\n        _this3.visible = true;\n        if (!_this3.departList || _this3.departList.length <= 0) {\n          _this3.$message.warning(\"您尚未设置部门信息!\");\n          _this3.departClear();\n        }\n      });\n    },\n    departClear: function departClear() {\n      this.departList = [];\n      this.departSelected = \"\";\n      this.visible = false;\n      this.validate_status = '';\n      this.currDepartName = \"\";\n    }\n  }\n};",{"version":3,"names":["getAction","putAction","Vue","store","USER_INFO","name","props","title","type","String","default","required","closable","Boolean","username","watch","val","loadDepartList","data","currTitle","visible","departList","departSelected","validate_status","currDepartName","created","methods","_this","Promise","resolve","url","then","res","success","departs","result","list","orgCode","length","_iterator","_createForOfIteratorHelper","_step","s","n","done","i","value","departName","err","e","f","close","departClear","departOk","_this2","obj","userInfo","ls","set","commit","show","_this3","$message","warning"],"sources":["src/components/tools/DepartSelect.vue"],"sourcesContent":["<template>\n  <a-modal\n    :title=\"currTitle\"\n    :width=\"450\"\n    :visible=\"visible\"\n    :closable=\"false\"\n    :maskClosable=\"closable\">\n    <template slot=\"footer\">\n      <a-button v-if=\"closable\" @click=\"close\">关闭</a-button>\n      <a-button type=\"primary\" @click=\"departOk\">确认</a-button>\n    </template>\n\n    <a-form>\n      <a-form-item\n        :labelCol=\"{span:4}\"\n        :wrapperCol=\"{span:20}\"\n        style=\"margin-bottom:10px\"\n        :validate-status=\"validate_status\">\n        <a-tooltip placement=\"topLeft\" >\n          <template slot=\"title\">\n            <span>您隶属于多部门，请选择当前所在部门</span>\n          </template>\n          <a-avatar style=\"backgroundColor:#87d068\" icon=\"gold\" />\n        </a-tooltip>\n        <a-select v-model=\"departSelected\" :class=\"{'valid-error':validate_status=='error'}\" placeholder=\"请选择登录部门\" style=\"margin-left:10px;width: 80%\">\n          <a-icon slot=\"suffixIcon\" type=\"gold\" />\n          <a-select-option\n            v-for=\"d in departList\"\n            :key=\"d.id\"\n            :value=\"d.orgCode\">\n            {{ d.departName }}\n          </a-select-option>\n        </a-select>\n      </a-form-item>\n    </a-form>\n\n\n  </a-modal>\n    \n</template>\n\n<script>\n  import { getAction,putAction } from '@/api/manage'\n  import Vue from 'vue'\n  import store from '@/store/'\n  import { USER_INFO } from \"@/store/mutation-types\"\n\n  export default {\n    name: 'DepartSelect',\n    props:{\n      title:{\n        type:String,\n        default:\"部门选择\",\n        required:false\n      },\n      closable:{\n        type:Boolean,\n        default:false,\n        required:false\n      },\n      username:{\n        type:String,\n        default:\"\",\n        required:false\n      }\n    },\n    watch:{\n      username(val){\n        if(val){\n          this.loadDepartList()\n        }\n      }\n    },\n    data(){\n      return {\n        currTitle:this.title,\n        visible:false,\n        departList:[],\n        departSelected:\"\",\n        validate_status:\"\",\n        currDepartName:\"\",\n      }\n    },\n    created(){\n      //this.loadDepartList()\n    },\n    methods:{\n      loadDepartList(){\n        return new Promise(resolve => {\n          let url = \"/sys/user/getCurrentUserDeparts\"\n          this.currDepartName=''\n          getAction(url).then(res=>{\n            if(res.success){\n              let departs = res.result.list\n              let orgCode = res.result.orgCode\n              if(departs && departs.length>0){\n                for(let i of departs){\n                  if(i.orgCode == orgCode){\n                    this.currDepartName = i.departName\n                    break\n                  }\n                }\n              }\n              this.departSelected = orgCode\n              this.departList  = departs\n              if(this.currDepartName){\n                this.currTitle =\"部门切换（当前部门 : \"+this.currDepartName+\"）\"\n              }\n\n            }\n            resolve()\n          })\n        })\n      },\n      close(){\n        this.departClear()\n      },\n      departOk(){\n        if(!this.departSelected){\n          this.validate_status='error'\n          return false\n        }\n        let obj = {\n          orgCode:this.departSelected,\n          username:this.username\n        }\n        putAction(\"/sys/selectDepart\",obj).then(res=>{\n          if(res.success){\n            const userInfo = res.result.userInfo;\n            Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000);\n            store.commit('SET_INFO', userInfo);\n            //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\n            this.departClear()\n          }\n        })\n      },\n      show(){\n        //如果组件传值username此处就不用loadDepartList了\n        this.loadDepartList().then(()=>{\n          this.visible=true\n          if(!this.departList || this.departList.length<=0){\n            this.$message.warning(\"您尚未设置部门信息!\")\n            this.departClear()\n          }\n        })\n      },\n      departClear(){\n        this.departList=[]\n        this.departSelected=\"\"\n        this.visible=false\n        this.validate_status=''\n        this.currDepartName=\"\"\n      },\n    }\n\n  }\n</script>\n<style scoped>\n  .valid-error .ant-select-selection__placeholder{\n    color: #f5222d;\n  }\n</style>"],"mappings":"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","ignoreList":[]}]}