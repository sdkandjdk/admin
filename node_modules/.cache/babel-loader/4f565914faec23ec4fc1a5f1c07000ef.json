{"remainingRequest":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\知识库系统\\admin\\src\\views\\system\\modules\\QuartzJobModal.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\知识库系统\\admin\\src\\views\\system\\modules\\QuartzJobModal.vue","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { httpAction } from '@/api/manage';\n// import JCron from \"@/components/jeecg/JCron\";\nimport cronValidator from \"@/components/jeecg/JEasyCron/validator\";\nexport default {\n  name: \"QuartzJobModal\",\n  components: {\n    // JCron,\n  },\n  data: function data() {\n    return {\n      title: \"操作\",\n      buttonStyle: 'solid',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      cron: {\n        label: '',\n        value: ''\n      },\n      confirmLoading: false,\n      validatorRules: {\n        cronExpression: [{\n          required: true,\n          message: '请输入cron表达式!'\n        }, {\n          validator: cronValidator\n        }],\n        jobClassName: [{\n          required: true,\n          message: '请输入任务类名!'\n        }]\n      },\n      url: {\n        add: \"/sys/quartzJob/add\",\n        edit: \"/sys/quartzJob/edit\"\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      // 统一设置默认值\n      this.edit({\n        cronExpression: '* * * * * ? *',\n        status: 0\n      });\n    },\n    edit: function edit(record) {\n      var _this = this;\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.$refs.form.resetFields();\n        _this.model = Object.assign({}, record);\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n      var that = this;\n      // 触发表单验证\n      this.$refs.form.validate(function (ok, err) {\n        if (ok) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n          console.log('提交参数', _this2.model);\n          httpAction(httpurl, _this2.model, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n              that.close();\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",{"version":3,"names":["httpAction","cronValidator","name","components","data","title","buttonStyle","visible","model","labelCol","xs","span","sm","wrapperCol","cron","label","value","confirmLoading","validatorRules","cronExpression","required","message","validator","jobClassName","url","add","edit","created","methods","status","record","_this","$nextTick","$refs","form","resetFields","Object","assign","close","$emit","handleOk","_this2","that","validate","ok","err","httpurl","method","id","console","log","then","res","success","$message","warning","finally","handleCancel"],"sources":["src/views/system/modules/QuartzJobModal.vue"],"sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    okText=\"保存并安排任务\"\n    cancelText=\"关闭\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item :labelCol=\"labelCol\"  :wrapperCol=\"wrapperCol\" label=\"任务类名\" prop=\"jobClassName\" hasFeedback >\n          <a-input placeholder=\"请输入任务类名\" v-model=\"model.jobClassName\" />\n        </a-form-model-item>\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"Cron表达式\" prop=\"cronExpression\">\n          <!-- <j-cron v-model=\"model.cronExpression\"/>-->\n          <j-easy-cron v-model=\"model.cronExpression\" />\n        </a-form-model-item>\n        <a-form-model-item  :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"参数\" prop=\"parameter\" >\n          <a-textarea placeholder=\"请输入参数\" :rows=\"5\" v-model=\"model.parameter\" />\n        </a-form-model-item>\n        <a-form-model-item :labelCol=\"labelCol\"  :wrapperCol=\"wrapperCol\" label=\"描述\" prop=\"description\">\n          <a-textarea placeholder=\"请输入描述\" :rows=\"3\" v-model=\"model.description\" />\n        </a-form-model-item>\n        <a-form-model-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\"  label=\"状态\" prop=\"status\">\n          <j-dict-select-tag type=\"radioButton\" v-model=\"model.status\" dictCode=\"quartz_status\"/>\n        </a-form-model-item>\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import { httpAction } from '@/api/manage'\n  // import JCron from \"@/components/jeecg/JCron\";\n  import cronValidator from \"@/components/jeecg/JEasyCron/validator\";\n\n  export default {\n    name: \"QuartzJobModal\",\n    components: {\n      // JCron,\n    },\n    data () {\n      return {\n        title:\"操作\",\n        buttonStyle: 'solid',\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        cron: {\n          label: '',\n          value: ''\n        },\n        confirmLoading: false,\n        validatorRules: {\n          cronExpression: [\n            {required: true, message: '请输入cron表达式!'},\n            {validator: cronValidator,}\n          ],\n          jobClassName: [{required: true, message: '请输入任务类名!'}]\n        },\n        url: {\n          add: \"/sys/quartzJob/add\",\n          edit: \"/sys/quartzJob/edit\",\n        },\n      }\n    },\n    created () {\n    },\n    methods: {\n      add() {\n        // 统一设置默认值\n        this.edit({\n          cronExpression: '* * * * * ? *',\n          status: 0,\n        })\n      },\n      edit (record) {\n        this.visible = true;\n        this.$nextTick(() => {\n          this.$refs.form.resetFields()\n          this.model = Object.assign({}, record)\n        })\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.$refs.form.validate((ok, err) => {\n          if (ok) {\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = '';\n            if(!this.model.id){\n              httpurl+=this.url.add;\n              method = 'post';\n            }else{\n              httpurl+=this.url.edit;\n              method = 'put';\n            }\n\n            console.log('提交参数',this.model)\n            httpAction(httpurl,this.model,method).then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n                that.close();\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n            })\n\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AAoCA,SAAAA,UAAA;AACA;AACA,OAAAC,aAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACA;EAAA,CACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,WAAA;MACAC,OAAA;MACAC,KAAA;MACAC,QAAA;QACAC,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAE,UAAA;QACAH,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAG,IAAA;QACAC,KAAA;QACAC,KAAA;MACA;MACAC,cAAA;MACAC,cAAA;QACAC,cAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,SAAA,EAAArB;QAAA,EACA;QACAsB,YAAA;UAAAH,QAAA;UAAAC,OAAA;QAAA;MACA;MACAG,GAAA;QACAC,GAAA;QACAC,IAAA;MACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA,GACA;EACAC,OAAA;IACAH,GAAA,WAAAA,IAAA;MACA;MACA,KAAAC,IAAA;QACAP,cAAA;QACAU,MAAA;MACA;IACA;IACAH,IAAA,WAAAA,KAAAI,MAAA;MAAA,IAAAC,KAAA;MACA,KAAAxB,OAAA;MACA,KAAAyB,SAAA;QACAD,KAAA,CAAAE,KAAA,CAAAC,IAAA,CAAAC,WAAA;QACAJ,KAAA,CAAAvB,KAAA,GAAA4B,MAAA,CAAAC,MAAA,KAAAP,MAAA;MACA;IACA;IACAQ,KAAA,WAAAA,MAAA;MACA,KAAAC,KAAA;MACA,KAAAhC,OAAA;IACA;IACAiC,QAAA,WAAAA,SAAA;MAAA,IAAAC,MAAA;MACA,IAAAC,IAAA;MACA;MACA,KAAAT,KAAA,CAAAC,IAAA,CAAAS,QAAA,WAAAC,EAAA,EAAAC,GAAA;QACA,IAAAD,EAAA;UACAF,IAAA,CAAAzB,cAAA;UACA,IAAA6B,OAAA;UACA,IAAAC,MAAA;UACA,KAAAN,MAAA,CAAAjC,KAAA,CAAAwC,EAAA;YACAF,OAAA,IAAAL,MAAA,CAAAjB,GAAA,CAAAC,GAAA;YACAsB,MAAA;UACA;YACAD,OAAA,IAAAL,MAAA,CAAAjB,GAAA,CAAAE,IAAA;YACAqB,MAAA;UACA;UAEAE,OAAA,CAAAC,GAAA,SAAAT,MAAA,CAAAjC,KAAA;UACAR,UAAA,CAAA8C,OAAA,EAAAL,MAAA,CAAAjC,KAAA,EAAAuC,MAAA,EAAAI,IAAA,WAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,OAAA;cACAX,IAAA,CAAAY,QAAA,CAAAD,OAAA,CAAAD,GAAA,CAAA/B,OAAA;cACAqB,IAAA,CAAAH,KAAA;cACAG,IAAA,CAAAJ,KAAA;YACA;cACAI,IAAA,CAAAY,QAAA,CAAAC,OAAA,CAAAH,GAAA,CAAA/B,OAAA;YACA;UACA,GAAAmC,OAAA;YACAd,IAAA,CAAAzB,cAAA;UACA;QAEA;MACA;IACA;IACAwC,YAAA,WAAAA,aAAA;MACA,KAAAnB,KAAA;IACA;EAEA;AACA","ignoreList":[]}]}