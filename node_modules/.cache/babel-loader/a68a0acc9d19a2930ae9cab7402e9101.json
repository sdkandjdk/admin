{"remainingRequest":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\知识库系统\\admin\\src\\components\\jeecg\\minipop\\JFilePop.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\知识库系统\\admin\\src\\components\\jeecg\\minipop\\JFilePop.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["import { getFileAccessHttpUrl } from '@/api/manage';\nvar getFileName = function getFileName(path) {\n  if (path.lastIndexOf(\"\\\\\") >= 0) {\n    var reg = new RegExp(\"\\\\\\\\\", \"g\");\n    path = path.replace(reg, \"/\");\n  }\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n};\nexport default {\n  name: 'JFilePop',\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: '',\n      required: false\n    },\n    position: {\n      type: String,\n      default: 'right',\n      required: false\n    },\n    height: {\n      type: Number,\n      default: 200,\n      required: false\n    },\n    width: {\n      type: Number,\n      default: 520,\n      required: false\n    },\n    popContainer: {\n      type: String,\n      default: '',\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    number: {\n      type: Number,\n      required: false,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      filePath: '',\n      id: '',\n      fileType: 'file'\n    };\n  },\n  methods: {\n    handleChange: function handleChange(value) {\n      this.filePath = value;\n    },\n    show: function show(id, value, flag) {\n      this.id = id;\n      this.filePath = value;\n      this.visible = true;\n      if (flag === 'img') {\n        this.fileType = 'image';\n      } else {\n        this.fileType = 'file';\n      }\n    },\n    ok: function ok() {\n      if (!this.filePath) {\n        this.$message.error(\"未上传任何文件\");\n        return false;\n      }\n      var arr = this.filePath.split(\",\");\n      var obj = {\n        name: getFileName(arr[0]),\n        url: getFileAccessHttpUrl(arr[0]),\n        path: this.filePath,\n        status: 'done',\n        id: this.id\n      };\n      this.$emit('ok', obj);\n      this.visible = false;\n    },\n    close: function close() {\n      this.visible = false;\n    }\n  }\n};",{"version":3,"names":["getFileAccessHttpUrl","getFileName","path","lastIndexOf","reg","RegExp","replace","substring","name","components","props","title","type","String","default","required","position","height","Number","width","popContainer","disabled","Boolean","number","data","visible","filePath","id","fileType","methods","handleChange","value","show","flag","ok","$message","error","arr","split","obj","url","status","$emit","close"],"sources":["src/components/jeecg/minipop/JFilePop.vue"],"sourcesContent":["<template>\n  <div>\n    <a-modal\n      :title=\"fileType === 'image' ? '图片上传' : '文件上传'\"\n      :width=\"width\"\n      :visible=\"visible\"\n      @ok=\"ok\"\n      cancelText=\"取消\"\n      @cancel=\"close\">\n      <!--style=\"top: 20px;\"-->\n      <j-upload :file-type=\"fileType\" :value=\"filePath\" @change=\"handleChange\" :disabled=\"disabled\" :number=\"number\"></j-upload>\n    </a-modal>\n  </div>\n</template>\n\n<script>\n  import { getFileAccessHttpUrl } from '@/api/manage';\n\n  const getFileName=(path)=>{\n    if(path.lastIndexOf(\"\\\\\")>=0){\n      let reg=new RegExp(\"\\\\\\\\\",\"g\");\n      path = path.replace(reg,\"/\");\n    }\n    return path.substring(path.lastIndexOf(\"/\")+1);\n  }\n\n  export default {\n    name: 'JFilePop',\n    components: { },\n    props:{\n      title:{\n        type:String,\n        default:'',\n        required:false\n      },\n      position:{\n        type:String,\n        default:'right',\n        required:false\n      },\n      height:{\n        type:Number,\n        default:200,\n        required:false\n      },\n      width:{\n        type:Number,\n        default:520,\n        required:false\n      },\n\n      popContainer:{\n        type:String,\n        default:'',\n        required:false\n      },\n      disabled:{\n        type:Boolean,\n        default:false,\n        required:false\n      },\n      number:{\n        type:Number,\n        required:false,\n        default: 0\n      }\n    },\n    data(){\n      return {\n        visible:false,\n        filePath:'',\n        id:'',\n        fileType:'file'\n\n      }\n    },\n    methods:{\n      handleChange(value){\n        this.filePath = value;\n      },\n      show(id,value,flag){\n        this.id = id;\n        this.filePath = value;\n        this.visible=true\n        if(flag === 'img'){\n          this.fileType = 'image'\n        }else{\n          this.fileType = 'file'\n        }\n\n      },\n      ok(){\n        if(!this.filePath){\n          this.$message.error(\"未上传任何文件\")\n          return false;\n        }\n        let arr = this.filePath.split(\",\")\n        let obj = {\n          name:getFileName(arr[0]),\n          url:getFileAccessHttpUrl(arr[0]),\n          path:this.filePath,\n          status: 'done',\n          id:this.id\n        }\n        this.$emit('ok',obj)\n        this.visible=false\n      },\n      close(){\n        this.visible=false\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AAgBA,SAAAA,oBAAA;AAEA,IAAAC,WAAA,YAAAA,YAAAC,IAAA;EACA,IAAAA,IAAA,CAAAC,WAAA;IACA,IAAAC,GAAA,OAAAC,MAAA;IACAH,IAAA,GAAAA,IAAA,CAAAI,OAAA,CAAAF,GAAA;EACA;EACA,OAAAF,IAAA,CAAAK,SAAA,CAAAL,IAAA,CAAAC,WAAA;AACA;AAEA;EACAK,IAAA;EACAC,UAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,QAAA;IACA;IACAC,QAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,QAAA;IACA;IACAE,MAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,OAAA;MACAC,QAAA;IACA;IACAI,KAAA;MACAP,IAAA,EAAAM,MAAA;MACAJ,OAAA;MACAC,QAAA;IACA;IAEAK,YAAA;MACAR,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,QAAA;IACA;IACAM,QAAA;MACAT,IAAA,EAAAU,OAAA;MACAR,OAAA;MACAC,QAAA;IACA;IACAQ,MAAA;MACAX,IAAA,EAAAM,MAAA;MACAH,QAAA;MACAD,OAAA;IACA;EACA;EACAU,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,QAAA;MACAC,EAAA;MACAC,QAAA;IAEA;EACA;EACAC,OAAA;IACAC,YAAA,WAAAA,aAAAC,KAAA;MACA,KAAAL,QAAA,GAAAK,KAAA;IACA;IACAC,IAAA,WAAAA,KAAAL,EAAA,EAAAI,KAAA,EAAAE,IAAA;MACA,KAAAN,EAAA,GAAAA,EAAA;MACA,KAAAD,QAAA,GAAAK,KAAA;MACA,KAAAN,OAAA;MACA,IAAAQ,IAAA;QACA,KAAAL,QAAA;MACA;QACA,KAAAA,QAAA;MACA;IAEA;IACAM,EAAA,WAAAA,GAAA;MACA,UAAAR,QAAA;QACA,KAAAS,QAAA,CAAAC,KAAA;QACA;MACA;MACA,IAAAC,GAAA,QAAAX,QAAA,CAAAY,KAAA;MACA,IAAAC,GAAA;QACA/B,IAAA,EAAAP,WAAA,CAAAoC,GAAA;QACAG,GAAA,EAAAxC,oBAAA,CAAAqC,GAAA;QACAnC,IAAA,OAAAwB,QAAA;QACAe,MAAA;QACAd,EAAA,OAAAA;MACA;MACA,KAAAe,KAAA,OAAAH,GAAA;MACA,KAAAd,OAAA;IACA;IACAkB,KAAA,WAAAA,MAAA;MACA,KAAAlB,OAAA;IACA;EACA;AACA","ignoreList":[]}]}