{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1709701151904}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport XEUtils from 'xe-utils';\nimport PropTypes from 'ant-design-vue/es/_util/vue-types';\nimport { JVXETypes } from '@/components/jeecg/JVxeTable/jvxeTypes';\nimport VxeWebSocketMixins from '../mixins/vxe.web.socket.mixins';\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil';\nimport { getRefPromise } from '../utils/vxeUtils';\nimport { getEnhancedMixins, replaceProps } from '../utils/cellUtils';\nimport JVxeToolbar from './JVxeToolbar';\nimport JVxeSubPopover from './JVxeSubPopover';\nimport JVxeDetailsModal from './JVxeDetailsModal';\nimport JVxePagination from './JVxePagination';\nimport { cloneObject, getVmParentByName, pushIfNotExist, randomString, simpleDebounce } from '@/utils/util';\nimport { UtilTools } from 'vxe-table/packages/tools/src/utils';\nimport { getNoAuthCols } from '@/utils/authFilter';\nexport default {\n  name: 'JVxeTable',\n  provide: function provide() {\n    var _this = this;\n    return {\n      superTrigger: function superTrigger(name, event) {\n        return _this.trigger(name, event);\n      }\n    };\n  },\n  mixins: [VxeWebSocketMixins],\n  components: {\n    JVxeToolbar: JVxeToolbar,\n    JVxeSubPopover: JVxeSubPopover,\n    JVxeDetailsModal: JVxeDetailsModal,\n    JVxePagination: JVxePagination\n  },\n  props: {\n    rowKey: PropTypes.string.def('id'),\n    // 列信息\n    columns: {\n      type: Array,\n      required: true\n    },\n    // 数据源\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    authPre: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    // 是否显示工具栏\n    toolbar: PropTypes.bool.def(false),\n    // 工具栏配置\n    toolbarConfig: PropTypes.object.def(function () {\n      return {\n        // prefix 前缀；suffix 后缀；\n        slots: ['prefix', 'suffix'],\n        // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮；collapse 展开收起\n        btns: ['add', 'remove', 'clearSelection']\n      };\n    }),\n    // 是否显示行号\n    rowNumber: PropTypes.bool.def(false),\n    // 是否可选择行\n    rowSelection: PropTypes.bool.def(false),\n    // 选择行类型\n    rowSelectionType: PropTypes.oneOf(['checkbox', 'radio']).def('checkbox'),\n    // 是否可展开行\n    rowExpand: PropTypes.bool.def(false),\n    // 展开行配置\n    expandConfig: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 页面是否在加载中\n    loading: PropTypes.bool.def(false),\n    height: PropTypes.instanceOf([Number, String]).def('auto'),\n    // 最大高度\n    maxHeight: {\n      type: Number,\n      default: function _default() {\n        return null;\n      }\n    },\n    // 要禁用的行 TODO 未实现\n    disabledRows: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 是否禁用全部组件\n    disabled: PropTypes.bool.def(false),\n    // 是否可拖拽排序 TODO 仅实现上下排序，未实现拖拽排序（可能无法实现或较为困难）\n    dragSort: PropTypes.bool.def(false),\n    // 排序字段保存的Key\n    dragSortKey: PropTypes.string.def('orderNum'),\n    // 大小，可选值有：medium（中）、small（小）、mini（微）、tiny（非常小）\n    size: PropTypes.oneOf(['medium', 'small', 'mini', 'tiny']).def('medium'),\n    // 是否显示边框线\n    bordered: PropTypes.bool.def(false),\n    // 分页器参数，设置了即可显示分页器\n    pagination: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 点击行时是否显示子表单\n    clickRowShowSubForm: PropTypes.bool.def(false),\n    // 点击行时是否显示主表单\n    clickRowShowMainForm: PropTypes.bool.def(false),\n    // 是否点击选中行，优先级最低\n    clickSelectRow: PropTypes.bool.def(false),\n    // 是否开启 reload 数据效果\n    reloadEffect: PropTypes.bool.def(false),\n    // 校验规则\n    editRules: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 是否异步删除行，如果你要实现异步删除，那么需要把这个选项开启，\n    // 在remove事件里调用confirmRemove方法才会真正删除（除非删除的全是新增的行）\n    asyncRemove: PropTypes.bool.def(false),\n    // 是否一直显示组件，如果为false则只有点击的时候才出现组件\n    // 注：该参数不能动态修改；如果行、列字段多的情况下，会根据机器性能造成不同程度的卡顿。\n    alwaysEdit: PropTypes.bool.def(false)\n  },\n  data: function data() {\n    return {\n      isJVXETable: true,\n      // caseId，表格唯一标识\n      caseId: \"_j-vxe-\".concat(randomString(8), \"_\"),\n      // 内置columns\n      _innerColumns: [],\n      // 内置 EditRules\n      _innerEditRules: [],\n      // 记录滚动条位置\n      scroll: {\n        top: 0,\n        left: 0\n      },\n      // 当前是否正在滚动\n      scrolling: false,\n      // vxe 默认配置\n      defaultVxeProps: {\n        'row-id': this.rowKey,\n        // 高亮hover的行\n        'highlight-hover-row': true,\n        // 溢出隐藏并显示tooltip\n        'show-overflow': true,\n        // 表头溢出隐藏并显示tooltip\n        'show-header-overflow': true,\n        'show-footer-overflow': true,\n        // 可编辑配置\n        'edit-config': {\n          trigger: 'click',\n          mode: 'cell',\n          showStatus: true\n        },\n        'expand-config': {\n          iconClose: 'ant-table-row-expand-icon ant-table-row-collapsed',\n          iconOpen: 'ant-table-row-expand-icon ant-table-row-expanded'\n        },\n        // 虚拟滚动配置，y轴大于30条数据时启用虚拟滚动\n        // 'scroll-y': {\n        //   gt: 30\n        // },\n        // 'scroll-x': {\n        //   gt: 15\n        // },\n        'radio-config': {\n          highlight: true\n        },\n        'checkbox-config': {\n          highlight: true\n        }\n      },\n      // 绑定左侧选择框\n      selectedRows: [],\n      // 绑定左侧选择框已选择的id\n      selectedRowIds: [],\n      // 统计列配置\n      statistics: {\n        has: false,\n        sum: [],\n        average: []\n      },\n      // 允许执行刷新特效的行ID\n      reloadEffectRowKeysMap: {},\n      //配置了但是没有授权的按钮和列 集合\n      excludeCode: []\n    };\n  },\n  computed: {\n    // vxe 最终 columns\n    vxeColumns: function vxeColumns() {\n      var _this2 = this;\n      this._innerColumns.forEach(function (column) {\n        var renderOptions = {\n          caseId: _this2.caseId,\n          bordered: _this2.bordered,\n          disabled: _this2.disabled,\n          scrolling: _this2.scrolling,\n          reloadEffect: _this2.reloadEffect,\n          reloadEffectRowKeysMap: _this2.reloadEffectRowKeysMap,\n          listeners: _this2.cellListeners\n        };\n        if (column.$type === JVXETypes.rowDragSort) {\n          renderOptions.dragSortKey = _this2.dragSortKey;\n        }\n        // slot 组件特殊处理\n        if (column.$type === JVXETypes.slot) {\n          if (_this2.$scopedSlots.hasOwnProperty(column.slotName)) {\n            renderOptions.slot = _this2.$scopedSlots[column.slotName];\n            renderOptions.target = _this2;\n          }\n        }\n        if (column.editRender) {\n          Object.assign(column.editRender, renderOptions);\n        }\n        if (column.cellRender) {\n          Object.assign(column.cellRender, renderOptions);\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n        if (column.$type === JVXETypes.file || column.$type === JVXETypes.image) {\n          if (column.width && column.width.endsWith('px')) {\n            column.width = Number.parseInt(column.width.substr(0, column.width.length - 2)) + Number.parseInt(1) + 'px';\n          }\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n\n        // update--begin--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n        if (column.$type === JVXETypes.datetime || column.$type === JVXETypes.userSelect || column.$type === JVXETypes.departSelect) {\n          var width = column.width && column.width.endsWith('px') ? Number.parseInt(column.width.substr(0, column.width.length - 2)) : 0;\n          if (width <= 190) {\n            column.width = '190px';\n          }\n        }\n        if (column.$type === JVXETypes.date) {\n          var _width = column.width && column.width.endsWith('px') ? Number.parseInt(column.width.substr(0, column.width.length - 2)) : 0;\n          if (_width <= 135) {\n            column.width = '135px';\n          }\n        }\n        // update--end--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n      });\n      return this._innerColumns;\n    },\n    // vxe 最终 editRules\n    vxeEditRules: function vxeEditRules() {\n      return Object.assign({}, this.editRules, this._innerEditRules);\n    },\n    // vxe 最终 props\n    vxeProps: function vxeProps() {\n      var expandConfig = Object.assign({}, this.defaultVxeProps['expand-config'], this.expandConfig);\n      return Object.assign({}, this.defaultVxeProps, {\n        showFooter: this.statistics.has\n      }, this.$attrs, {\n        loading: this.loading,\n        columns: this.vxeColumns,\n        editRules: this.vxeEditRules,\n        // data: this.dataSource,\n        height: this.height === 'auto' ? null : this.height,\n        maxHeight: this.maxHeight,\n        border: this.bordered,\n        expandConfig: expandConfig,\n        footerMethod: this.handleFooterMethod\n        // footerSpanMethod: this.handleFooterSpanMethod,\n      });\n    },\n    // vxe 最终 events\n    vxeEvents: function vxeEvents() {\n      var _this3 = this;\n      // 内置事件\n      var events = {\n        'scroll': this.handleVxeScroll,\n        'cell-click': this.handleCellClick,\n        'edit-closed': this.handleEditClosed,\n        'edit-actived': this.handleEditActived,\n        'radio-change': this.handleVxeRadioChange,\n        'checkbox-all': this.handleVxeCheckboxAll,\n        'checkbox-change': this.handleVxeCheckboxChange\n      };\n      // 用户传递的事件，进行合并操作\n      Object.keys(this.$listeners).forEach(function (key) {\n        var listen = _this3.$listeners[key];\n        if (events.hasOwnProperty(key)) {\n          if (Array.isArray(listen)) {\n            listen.push(events[key]);\n          } else {\n            listen = [events[key], listen];\n          }\n        }\n        events[key] = listen;\n      });\n      return events;\n    },\n    // 组件监听事件\n    cellListeners: function cellListeners() {\n      var _this4 = this;\n      return {\n        trigger: function trigger(name, event) {\n          return _this4.trigger(name, event);\n        },\n        valueChange: function valueChange(event) {\n          return _this4.trigger('valueChange', event);\n        },\n        /** 当前行向上移一位 */\n        rowMoveUp: function rowMoveUp(rowIndex) {\n          return _this4.rowResort(rowIndex, rowIndex - 1);\n        },\n        /** 当前行向下移一位 */\n        rowMoveDown: function rowMoveDown(rowIndex) {\n          return _this4.rowResort(rowIndex, rowIndex + 1);\n        },\n        /** 在当前行下面插入一行 */\n        rowInsertDown: function rowInsertDown(rowIndex) {\n          return _this4.insertRows({}, rowIndex + 1);\n        }\n      };\n    }\n  },\n  watch: {\n    dataSource: {\n      //   deep: true,\n      immediate: true,\n      handler: function () {\n        var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this5 = this;\n          var vxe;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getRefPromise(this, 'vxe');\n              case 2:\n                vxe = _context.sent;\n                // 阻断vue监听大数据，提高性能\n\n                // 开启了排序就自动计算排序值\n                if (this.dragSort) {\n                  this.dataSource.forEach(function (data, idx) {\n                    _this5.$set(data, _this5.dragSortKey, idx + 1);\n                  });\n                }\n                vxe.loadData(this.dataSource);\n\n                // TODO 解析disabledRows\n                // let disabled = false\n                //\n                // let disabledRowIds = (this.disabledRowIds || [])\n                // // 解析disabledRows\n                // Object.keys(this.disabledRows).forEach(disabledColKey => {\n                //   // 判断是否有该属性\n                //   if (data.hasOwnProperty(disabledColKey)) {\n                //     if (disabled !== true) {\n                //       let temp = this.disabledRows[disabledColKey]\n                //       // 禁用规则可以是一个数组\n                //       if (Array.isArray(temp)) {\n                //         disabled = temp.includes(data[disabledColKey])\n                //       } else {\n                //         disabled = (temp === data[disabledColKey])\n                //       }\n                //       if (disabled) {\n                //         disabledRowIds.push(row.id)\n                //       }\n                //     }\n                //   }\n                // })\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function handler() {\n          return _handler.apply(this, arguments);\n        }\n        return handler;\n      }()\n    },\n    columns: {\n      immediate: true,\n      handler: function handler(columns) {\n        var _this6 = this;\n        //获取不需要显示列\n        this.loadExcludeCode();\n        var _innerColumns = [];\n        var _innerEditRules = {};\n        var rowNumber = this.rowNumber,\n          rowSelection = this.rowSelection,\n          rowExpand = this.rowExpand,\n          dragSort = this.dragSort;\n        var expandColumn, seqColumn, checkboxColumn, radioColumn, dragSortColumn;\n        if (Array.isArray(columns)) {\n          this.statistics.has = false;\n          this.statistics.sum = [];\n          this.statistics.average = [];\n\n          // 处理成vxe可识别的columns\n          columns.forEach(function (column) {\n            if (_this6.excludeCode.indexOf(column.key) >= 0) {\n              return false;\n            }\n            var col = _objectSpread({}, column);\n            var type = col.type;\n            var enhanced = getEnhancedMixins(type);\n            if (type === JVXETypes.rowNumber) {\n              seqColumn = col;\n            } else if (type === JVXETypes.rowCheckbox) {\n              checkboxColumn = col;\n            } else if (type === JVXETypes.rowRadio) {\n              radioColumn = col;\n            } else if (type === JVXETypes.rowExpand) {\n              expandColumn = col;\n            } else if (type === JVXETypes.rowDragSort) {\n              dragSortColumn = col;\n            } else {\n              col.field = col.key;\n              // 防止和vxeTable自带的type起冲突\n              col.$type = col.type;\n              delete col.type;\n              var renderName = 'cellRender',\n                renderOptions = {\n                  name: JVXETypes._prefix + type\n                };\n              if (type) {\n                // hidden 是特殊的组件\n                if (type === JVXETypes.hidden) {\n                  col.visible = false;\n                } else if (enhanced.switches.editRender) {\n                  renderName = 'editRender';\n                  renderOptions.type = enhanced.switches.visible || _this6.alwaysEdit ? 'visible' : 'default';\n                }\n              } else {\n                renderOptions.name = JVXETypes._prefix + JVXETypes.normal;\n              }\n              col[renderName] = renderOptions;\n              // 处理字典\n              if (col.dictCode) {\n                _this6._loadDictConcatToOptions(col);\n              }\n              // 处理校验\n              if (col.validateRules) {\n                var rules = [];\n                if (Array.isArray(col.validateRules)) {\n                  var _iterator = _createForOfIteratorHelper(col.validateRules),\n                    _step;\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      var rule = _step.value;\n                      var replace = {\n                        message: replaceProps(col, rule.message)\n                      };\n                      if (rule.unique || rule.pattern === 'only') {\n                        // 唯一校验器\n                        rule.validator = uniqueValidator.bind(_this6);\n                      } else if (rule.pattern) {\n                        // 非空\n                        if (rule.pattern === fooPatterns[0].value) {\n                          rule.required = true;\n                          delete rule.pattern;\n                        } else {\n                          // 兼容Online表单的特殊规则\n                          var _iterator2 = _createForOfIteratorHelper(fooPatterns),\n                            _step2;\n                          try {\n                            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                              var foo = _step2.value;\n                              if (foo.value === rule.pattern) {\n                                rule.pattern = foo.pattern;\n                                break;\n                              }\n                            }\n                          } catch (err) {\n                            _iterator2.e(err);\n                          } finally {\n                            _iterator2.f();\n                          }\n                        }\n                      } else if (typeof rule.handler === 'function') {\n                        // 自定义函数校验\n                        rule.validator = handlerConvertToValidator.bind(_this6);\n                      }\n                      rules.push(Object.assign({}, rule, replace));\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                }\n                _innerEditRules[col.key] = rules;\n              }\n              // 处理统计列\n              // sum = 求和、average = 平均值\n              if (Array.isArray(col.statistics)) {\n                _this6.statistics.has = true;\n                col.statistics.forEach(function (item) {\n                  var arr = _this6.statistics[item.toLowerCase()];\n                  if (Array.isArray(arr)) {\n                    pushIfNotExist(arr, col.key);\n                  }\n                });\n              }\n              _innerColumns.push(col);\n            }\n          });\n        }\n        // 判断是否开启了序号\n        if (rowNumber) {\n          var col = {\n            type: 'seq',\n            title: '#',\n            width: 60,\n            fixed: 'left',\n            align: 'center'\n          };\n          if (seqColumn) {\n            col = Object.assign(col, seqColumn, {\n              type: 'seq'\n            });\n          }\n          _innerColumns.unshift(col);\n        }\n        // 判断是否开启了可选择行\n        if (rowSelection) {\n          var width = 40;\n          if (this.statistics.has && !rowExpand && !dragSort) {\n            width = 60;\n          }\n          var _col = {\n            type: this.rowSelectionType,\n            width: width,\n            fixed: 'left',\n            align: 'center'\n          };\n          // radio\n          if (this.rowSelectionType === 'radio' && radioColumn) {\n            _col = Object.assign(_col, radioColumn, {\n              type: 'radio'\n            });\n          }\n          // checkbox\n          if (this.rowSelectionType === 'checkbox' && checkboxColumn) {\n            _col = Object.assign(_col, checkboxColumn, {\n              type: 'checkbox'\n            });\n          }\n          _innerColumns.unshift(_col);\n        }\n        // 是否可展开行\n        if (rowExpand) {\n          var _width2 = 40;\n          if (this.statistics.has && !dragSort) {\n            _width2 = 60;\n          }\n          var _col2 = {\n            type: 'expand',\n            title: '',\n            width: _width2,\n            fixed: 'left',\n            align: 'center',\n            slots: {\n              content: 'expandContent'\n            }\n          };\n          if (expandColumn) {\n            _col2 = Object.assign(_col2, expandColumn, {\n              type: 'expand'\n            });\n          }\n          _innerColumns.unshift(_col2);\n        }\n        // 是否可拖动排序\n        if (dragSort) {\n          var _width3 = 40;\n          if (this.statistics.has) {\n            _width3 = 60;\n          }\n          var _col3 = {\n            type: JVXETypes.rowDragSort,\n            title: '',\n            width: _width3,\n            fixed: 'left',\n            align: 'center',\n            cellRender: {\n              name: JVXETypes._prefix + JVXETypes.rowDragSort\n            }\n          };\n          if (dragSortColumn) {\n            _col3 = Object.assign(_col3, dragSortColumn, {\n              type: JVXETypes.rowDragSort\n            });\n          }\n          _innerColumns.unshift(_col3);\n        }\n        this._innerColumns = _innerColumns;\n        this._innerEditRules = _innerEditRules;\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.handleTabsChange();\n  },\n  methods: {\n    /**\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动重置表格\n     */\n    handleTabsChange: function handleTabsChange() {\n      var _this7 = this;\n      // 获取父级\n      var tabs = getVmParentByName(this, 'ATabs');\n      var tabPane = getVmParentByName(this, 'ATabPane');\n      if (tabs && tabPane) {\n        // 用户自定义的 key\n        var currentKey = tabPane.$vnode.key;\n        // 添加 activeKey 监听\n        var unwatch = tabs.$children[0].$watch('$data._activeKey', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key) {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(currentKey === key)) {\n                    _context2.next = 7;\n                    break;\n                  }\n                  _context2.next = 3;\n                  return _this7.$nextTick();\n                case 3:\n                  _context2.next = 5;\n                  return _this7.refreshScroll();\n                case 5:\n                  _context2.next = 7;\n                  return _this7.recalculate();\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        // 当前实例销毁时取消监听\n        this.$on('beforeDestroy', function () {\n          return unwatch();\n        });\n      }\n    },\n    handleVxeScroll: function handleVxeScroll(event) {\n      var $refs = this.$refs,\n        scroll = this.scroll;\n\n      // 记录滚动条的位置\n      scroll.top = event.scrollTop;\n      scroll.left = event.scrollLeft;\n      $refs.subPopover ? $refs.subPopover.close() : null;\n      this.scrolling = true;\n      this.closeScrolling();\n    },\n    // 当手动勾选单选时触发的事件\n    handleVxeRadioChange: function handleVxeRadioChange(event) {\n      var row = event.$table.getRadioRecord();\n      this.selectedRows = row ? [row] : [];\n      this.handleSelectChange('radio', this.selectedRows, event);\n    },\n    // 当手动勾选全选时触发的事件\n    handleVxeCheckboxAll: function handleVxeCheckboxAll(event) {\n      this.selectedRows = event.$table.getCheckboxRecords();\n      this.handleSelectChange('checkbox-all', this.selectedRows, event);\n    },\n    // 当手动勾选并且值发生改变时触发的事件\n    handleVxeCheckboxChange: function handleVxeCheckboxChange(event) {\n      this.selectedRows = event.$table.getCheckboxRecords();\n      this.handleSelectChange('checkbox', this.selectedRows, event);\n    },\n    // 行选择change事件\n    handleSelectChange: function handleSelectChange(type, selectedRows, $event) {\n      var action;\n      if (type === 'radio') {\n        action = 'selected';\n      } else if (type === 'checkbox') {\n        action = selectedRows.includes($event.row) ? 'selected' : 'unselected';\n      } else {\n        action = 'selected-all';\n      }\n      this.selectedRowIds = selectedRows.map(function (row) {\n        return row.id;\n      });\n      this.trigger('selectRowChange', {\n        type: type,\n        action: action,\n        $event: $event,\n        row: $event.row,\n        selectedRows: this.selectedRows,\n        selectedRowIds: this.selectedRowIds\n      });\n    },\n    // 点击单元格时触发的事件\n    handleCellClick: function handleCellClick(event) {\n      var row = event.row,\n        column = event.column,\n        $event = event.$event,\n        $table = event.$table;\n      var $refs = this.$refs;\n\n      // 点击了可编辑的\n      if (column.editRender) {\n        $refs.subPopover ? $refs.subPopover.close() : null;\n        return;\n      }\n\n      // 显示详细信息\n      if (column.own.showDetails) {\n        // 两个如果同时存在的话会出现死循环\n        $refs.subPopover ? $refs.subPopover.close() : null;\n        $refs.detailsModal ? $refs.detailsModal.open(event) : null;\n      } else if ($refs.subPopover) {\n        $refs.subPopover.toggle(event);\n      } else if (this.clickSelectRow) {\n        var className = $event.target.className || '';\n        className = typeof className === 'string' ? className : className.toString();\n        // 点击的是expand，不做处理\n        if (className.includes('vxe-table--expand-btn')) {\n          return;\n        }\n        // 点击的是checkbox，不做处理\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n          return;\n        }\n        // 点击的是radio，不做处理\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n          return;\n        }\n        if (this.rowSelectionType === 'radio') {\n          $table.setRadioRow(row);\n          this.handleVxeRadioChange(event);\n        } else {\n          $table.toggleCheckboxRow(row);\n          this.handleVxeCheckboxChange(event);\n        }\n      }\n    },\n    // 单元格编辑状态下被关闭时会触发该事件\n    handleEditClosed: function handleEditClosed(_ref2) {\n      var column = _ref2.column;\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editClosed.apply(this, arguments);\n    },\n    // 单元格被激活编辑时会触发该事件\n    handleEditActived: function handleEditActived(_ref3) {\n      var column = _ref3.column;\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editActived.apply(this, arguments);\n    },\n    /** 表尾数据处理方法，用于显示统计信息 */handleFooterMethod: function handleFooterMethod(_ref4) {\n      var columns = _ref4.columns,\n        data = _ref4.data;\n      var statistics = this.statistics;\n      var footers = [];\n      if (statistics.has) {\n        if (statistics.sum.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '合计',\n            checks: statistics.sum,\n            method: function method(column) {\n              return XEUtils.sum(data, column.property);\n            }\n          }));\n        }\n        if (statistics.average.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '平均',\n            checks: statistics.average,\n            method: function method(column) {\n              return XEUtils.mean(data, column.property);\n            }\n          }));\n        }\n      }\n      return footers;\n    },\n    getFooterStatisticsMap: function getFooterStatisticsMap(_ref5) {\n      var columns = _ref5.columns,\n        title = _ref5.title,\n        checks = _ref5.checks,\n        method = _ref5.method;\n      return columns.map(function (column, columnIndex) {\n        if (columnIndex === 0) {\n          return title;\n        }\n        if (checks.includes(column.property)) {\n          return method(column, columnIndex);\n        }\n        return null;\n      });\n    },\n    /** 表尾单元格合并方法 */handleFooterSpanMethod: function handleFooterSpanMethod(event) {\n      if (event.columnIndex === 0) {\n        return {\n          colspan: 2\n        };\n      }\n    },\n    /*--- 外部可调用接口方法 ---*/\n    /**\n     * 重置滚动条Top位置\n     * @param top 新top位置，留空则滚动到上次记录的位置，用于解决切换tab选项卡时导致白屏以及自动将滚动条滚动到顶部的问题\n     */\n    resetScrollTop: function resetScrollTop(top) {\n      this.scrollTo(null, top == null || top === '' ? this.scroll.top : top);\n    },\n    /**\n     * 加载新数据，和 loadData 不同的是，用该方法加载的数据都是相当于点新增按钮新增的数据。\n     * 适用于不是数据库里查出来的没有id的临时数据\n     * @param dataSource\n     */\n    loadNewData: function () {\n      var _loadNewData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dataSource) {\n        var xTable;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!Array.isArray(dataSource)) {\n                _context3.next = 5;\n                break;\n              }\n              xTable = this.$refs.vxe.$refs.xTable;\n              _context3.next = 4;\n              return xTable.loadData(dataSource);\n            case 4:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 5:\n              return _context3.abrupt(\"return\", []);\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function loadNewData(_x2) {\n        return _loadNewData.apply(this, arguments);\n      }\n      return loadNewData;\n    }(),\n    // 校验table，失败返回errMap，成功返回null\n    validateTable: function () {\n      var _validateTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var errMap;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.validate().catch(function (errMap) {\n                return errMap;\n              });\n            case 2:\n              errMap = _context4.sent;\n              return _context4.abrupt(\"return\", errMap ? errMap : null);\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function validateTable() {\n        return _validateTable.apply(this, arguments);\n      }\n      return validateTable;\n    }(),\n    // 完整校验\n    fullValidateTable: function () {\n      var _fullValidateTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var errMap;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.fullValidate().catch(function (errMap) {\n                return errMap;\n              });\n            case 2:\n              errMap = _context5.sent;\n              return _context5.abrupt(\"return\", errMap ? errMap : null);\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function fullValidateTable() {\n        return _fullValidateTable.apply(this, arguments);\n      }\n      return fullValidateTable;\n    }(),\n    /** 设置某行某列的值 */setValues: function setValues(values) {\n      var _this8 = this;\n      if (!Array.isArray(values)) {\n        console.warn(\"JVxeTable.setValues\\uFF1A\\u5FC5\\u987B\\u4F20\\u9012\\u6570\\u7EC4\");\n        return;\n      }\n      values.forEach(function (item, idx) {\n        var rowKey = item.rowKey,\n          record = item.values;\n        var _this8$getIfRowById = _this8.getIfRowById(rowKey),\n          row = _this8$getIfRowById.row;\n        if (!row) {\n          return;\n        }\n        Object.keys(record).forEach(function (colKey) {\n          var column = _this8.getColumnByKey(colKey);\n          if (column) {\n            var oldValue = row[colKey];\n            var newValue = record[colKey];\n            if (newValue !== oldValue) {\n              _this8.$set(row, colKey, newValue);\n              // 触发 valueChange 事件\n              _this8.trigger('valueChange', {\n                type: column.own.$type,\n                value: newValue,\n                oldValue: oldValue,\n                col: column.own,\n                column: column,\n                isSetValues: true\n              });\n            }\n          } else {\n            console.warn(\"JVxeTable.setValues\\uFF1A\\u6CA1\\u6709\\u627E\\u5230key\\u4E3A\\\"\".concat(colKey, \"\\\"\\u7684\\u5217\"));\n          }\n        });\n      });\n    },\n    /** 获取所有的数据，包括values、deleteIds */getAll: function getAll() {\n      return {\n        tableData: this.getTableData(),\n        deleteData: this.getDeleteData()\n      };\n    },\n    /** 获取表格表单里的值 */getValues: function getValues(callback, rowIds) {\n      var tableData = this.getTableData({\n        rowIds: rowIds\n      });\n      callback('', tableData);\n    },\n    /** 获取表格数据 */getTableData: function getTableData() {\n      var _this9 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var rowIds = options.rowIds;\n      var tableData;\n      // 仅查询指定id的行\n      if (Array.isArray(rowIds) && rowIds.length > 0) {\n        tableData = [];\n        rowIds.forEach(function (rowId) {\n          var _this9$getIfRowById = _this9.getIfRowById(rowId),\n            row = _this9$getIfRowById.row;\n          if (row) {\n            tableData.push(row);\n          }\n        });\n      } else {\n        // 查询所有行\n        tableData = this.$refs.vxe.getTableData().fullData;\n      }\n      return this.filterNewRows(tableData, false);\n    },\n    /** 仅获取新增的数据 */getNewData: function getNewData() {\n      var newData = cloneObject(this.$refs.vxe.getInsertRecords());\n      newData.forEach(function (row) {\n        return delete row.id;\n      });\n      return newData;\n    },\n    /** 仅获取新增的数据,带有id */getNewDataWithId: function getNewDataWithId() {\n      var newData = cloneObject(this.$refs.vxe.getInsertRecords());\n      return newData;\n    },\n    /** 根据ID获取行，新增的行也能查出来 */getIfRowById: function getIfRowById(id) {\n      var row = this.getRowById(id),\n        isNew = false;\n      if (!row) {\n        row = this.getNewRowById(id);\n        if (!row) {\n          console.warn(\"JVxeTable.getIfRowById\\uFF1A\\u6CA1\\u6709\\u627E\\u5230id\\u4E3A\\\"\".concat(id, \"\\\"\\u7684\\u884C\"));\n          return {\n            row: null\n          };\n        }\n        isNew = true;\n      }\n      return {\n        row: row,\n        isNew: isNew\n      };\n    },\n    /** 通过临时ID获取新增的行 */getNewRowById: function getNewRowById(id) {\n      var records = this.getInsertRecords();\n      var _iterator3 = _createForOfIteratorHelper(records),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var record = _step3.value;\n          if (record.id === id) {\n            return record;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return null;\n    },\n    /** 仅获取被删除的数据（新增又被删除的数据不会被获取到） */getDeleteData: function getDeleteData() {\n      return cloneObject(this.$refs.vxe.getRemoveRecords());\n    },\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @return\n     */\n    addRows: function () {\n      var _addRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var rows,\n          isOnlJs,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              rows = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n              isOnlJs = _args6.length > 1 ? _args6[1] : undefined;\n              return _context6.abrupt(\"return\", this._addOrInsert(rows, -1, 'added', isOnlJs));\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function addRows() {\n        return _addRows.apply(this, arguments);\n      }\n      return addRows;\n    }(),\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param index 添加下标，数字，必填\n     * @return\n     */\n    insertRows: function () {\n      var _insertRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(rows, index) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(typeof index !== 'number' || index < 0)) {\n                _context7.next = 3;\n                break;\n              }\n              console.warn(\"\\u3010JVXETable\\u3011insertRows\\uFF1Aindex\\u5FC5\\u987B\\u4F20\\u9012\\u6570\\u5B57\\uFF0C\\u4E14\\u5927\\u4E8E-1\");\n              return _context7.abrupt(\"return\");\n            case 3:\n              return _context7.abrupt(\"return\", this._addOrInsert(rows, index, 'inserted'));\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function insertRows(_x3, _x4) {\n        return _insertRows.apply(this, arguments);\n      }\n      return insertRows;\n    }(),\n    /**\n     * 添加一行或多行临时数据，不会填充默认值，传什么就添加进去什么\n     * @param rows\n     * @param options 选项\n     * @param options.setActive 是否激活最后一行的编辑模式\n     */\n    pushRows: function () {\n      var _pushRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var rows,\n          options,\n          xTable,\n          setActive,\n          index,\n          result,\n          _args8 = arguments;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              rows = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n              options = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n              xTable = this.$refs.vxe.$refs.xTable;\n              setActive = options.setActive, index = options.index;\n              setActive = setActive == null ? false : !!setActive;\n              index = index == null ? -1 : index;\n              index = index === -1 ? index : xTable.tableFullData[index];\n              // 插入行\n              _context8.next = 9;\n              return xTable.insertAt(rows, index);\n            case 9:\n              result = _context8.sent;\n              if (setActive) {\n                // 激活最后一行的编辑模式\n                xTable.setActiveRow(result.rows[result.rows.length - 1]);\n              }\n              _context8.next = 13;\n              return this._recalcSortNumber();\n            case 13:\n              return _context8.abrupt(\"return\", result);\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function pushRows() {\n        return _pushRows.apply(this, arguments);\n      }\n      return pushRows;\n    }(),\n    /** 清空选择行 */clearSelection: function clearSelection() {\n      var event = {\n        $table: this.$refs.vxe,\n        target: this\n      };\n      if (this.rowSelectionType === JVXETypes.rowRadio) {\n        this.$refs.vxe.clearRadioRow();\n        this.handleVxeRadioChange(event);\n      } else {\n        this.$refs.vxe.clearCheckboxRow();\n        this.handleVxeCheckboxChange(event);\n      }\n    },\n    /** 删除一行或多行数据 */removeRows: function () {\n      var _removeRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(rows) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this._remove(rows);\n            case 2:\n              res = _context9.sent;\n              _context9.next = 5;\n              return this._recalcSortNumber();\n            case 5:\n              return _context9.abrupt(\"return\", res);\n            case 6:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function removeRows(_x5) {\n        return _removeRows.apply(this, arguments);\n      }\n      return removeRows;\n    }(),\n    /** 根据id删除一行或多行 */removeRowsById: function removeRowsById(rowId) {\n      var _this10 = this;\n      var rowIds;\n      if (Array.isArray(rowId)) {\n        rowIds = rowId;\n      } else {\n        rowIds = [rowId];\n      }\n      var rows = rowIds.map(function (id) {\n        var _this10$getIfRowById = _this10.getIfRowById(id),\n          row = _this10$getIfRowById.row;\n        if (!row) {\n          return;\n        }\n        if (row) {\n          return row;\n        } else {\n          console.warn(\"\\u3010JVXETable\\u3011removeRowsById\\uFF1A\".concat(id, \"\\u4E0D\\u5B58\\u5728\"));\n          return null;\n        }\n      }).filter(function (row) {\n        return row != null;\n      });\n      return this.removeRows(rows);\n    },\n    getColumnByKey: function getColumnByKey() {\n      return this.$refs.vxe.getColumnByField.apply(this.$refs.vxe, arguments);\n    },\n    /* --- 辅助方法 ---*/\n    // 触发事件\n    trigger: function trigger(name) {\n      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      event.$target = this;\n      event.$table = this.$refs.vxe;\n      //online增强参数兼容\n      event.target = this;\n      this.$emit(name, event);\n    },\n    /** 加载数据字典并合并到 options */_loadDictConcatToOptions: function _loadDictConcatToOptions(column) {\n      var _this11 = this;\n      initDictOptions(column.dictCode).then(function (res) {\n        if (res.success) {\n          var newOptions = column.options || []; // .concat(res.result)\n          res.result.forEach(function (item) {\n            // 过滤重复数据\n            var _iterator4 = _createForOfIteratorHelper(newOptions),\n              _step4;\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var option = _step4.value;\n                if (option.value === item.value) return;\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n            newOptions.push(item);\n          });\n          _this11.$set(column, 'options', newOptions);\n        } else {\n          console.group(\"JVxeTable \\u67E5\\u8BE2\\u5B57\\u5178(\".concat(column.dictCode, \")\\u53D1\\u751F\\u5F02\\u5E38\"));\n          console.warn(res.message);\n          console.groupEnd();\n        }\n      });\n    },\n    //options自定义赋值 刷新\n    virtualRefresh: function virtualRefresh() {\n      this.scrolling = true;\n      this.closeScrolling();\n    },\n    // 设置 this.scrolling 防抖模式\n    closeScrolling: simpleDebounce(function () {\n      this.scrolling = false;\n    }, 100),\n    /**\n     * 过滤添加的行\n     * @param rows 要筛选的行数据\n     * @param remove true = 删除新增，false=只删除id\n     * @param handler function\n     */\n    filterNewRows: function filterNewRows(rows) {\n      var remove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var handler = arguments.length > 2 ? arguments[2] : undefined;\n      var insertRecords = this.$refs.vxe.getInsertRecords();\n      var records = [];\n      var _iterator5 = _createForOfIteratorHelper(rows),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var row = _step5.value;\n          var item = cloneObject(row);\n          if (insertRecords.includes(row)) {\n            handler ? handler({\n              item: item,\n              row: row,\n              insertRecords: insertRecords\n            }) : null;\n            if (remove) {\n              continue;\n            }\n            delete item.id;\n          }\n          records.push(item);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return records;\n    },\n    // 删除选中的数据\n    removeSelection: function () {\n      var _removeSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this._remove(this.selectedRows);\n            case 2:\n              res = _context10.sent;\n              this.clearSelection();\n              _context10.next = 6;\n              return this._recalcSortNumber();\n            case 6:\n              return _context10.abrupt(\"return\", res);\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function removeSelection() {\n        return _removeSelection.apply(this, arguments);\n      }\n      return removeSelection;\n    }(),\n    /**\n     * 【删除指定行数据】（重写vxeTable的内部方法，添加了从keepSource中删除）\n     * 如果传 row 则删除一行\n     * 如果传 rows 则删除多行\n     * 如果为空则删除所有\n     */\n    _remove: function _remove(rows) {\n      var xTable = this.$refs.vxe.$refs.xTable;\n      var afterFullData = xTable.afterFullData,\n        tableFullData = xTable.tableFullData,\n        tableSourceData = xTable.tableSourceData,\n        editStore = xTable.editStore,\n        treeConfig = xTable.treeConfig,\n        checkboxOpts = xTable.checkboxOpts,\n        selection = xTable.selection,\n        isInsertByRow = xTable.isInsertByRow,\n        scrollYLoad = xTable.scrollYLoad;\n      var actived = editStore.actived,\n        removeList = editStore.removeList,\n        insertList = editStore.insertList;\n      var property = checkboxOpts.checkField;\n      var rest = [];\n      var nowData = afterFullData;\n      if (treeConfig) {\n        throw new Error(UtilTools.getLog('vxe.error.noTree', ['remove']));\n      }\n      if (!rows) {\n        rows = tableFullData;\n      } else if (!XEUtils.isArray(rows)) {\n        rows = [rows];\n      }\n      // 如果是新增，则保存记录\n      rows.forEach(function (row) {\n        if (!isInsertByRow(row)) {\n          removeList.push(row);\n        }\n      });\n      // 如果绑定了多选属性，则更新状态\n      if (!property) {\n        XEUtils.remove(selection, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n      }\n      // 从数据源中移除\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0);\n        tableFullData.length = 0;\n        nowData.length = 0;\n      } else {\n        rest = XEUtils.remove(tableFullData, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n        XEUtils.remove(nowData, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n      }\n      // 【从keepSource中删除】\n      if (xTable.keepSource) {\n        var rowIdSet = new Set(rows.map(function (row) {\n          return row.id;\n        }));\n        XEUtils.remove(tableSourceData, function (row) {\n          return rowIdSet.has(row.id);\n        });\n      }\n\n      // 如果当前行被激活编辑，则清除激活状态\n      if (actived.row && rows.indexOf(actived.row) > -1) {\n        xTable.clearActived();\n      }\n      // 从新增中移除已删除的数据\n      XEUtils.remove(insertList, function (row) {\n        return rows.indexOf(row) > -1;\n      });\n      xTable.handleTableData();\n      xTable.updateFooter();\n      xTable.updateCache();\n      xTable.checkSelectionStatus();\n      if (scrollYLoad) {\n        xTable.updateScrollYSpace();\n      }\n      return xTable.$nextTick().then(function () {\n        xTable.recalculate();\n        return {\n          row: rest.length ? rest[rest.length - 1] : null,\n          rows: rest\n        };\n      });\n    },\n    /** 行重新排序 */rowResort: function () {\n      var _rowResort = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(oldIndex, newIndex) {\n        var xTable, sort;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              xTable = this.$refs.vxe.$refs.xTable;\n              window.xTable = xTable;\n              sort = function sort(array) {\n                // 存储旧数据，并删除旧项目\n                var row = array.splice(oldIndex, 1)[0];\n                // 向新项目里添加旧数据\n                array.splice(newIndex, 0, row);\n              };\n              sort(xTable.tableFullData);\n              if (xTable.keepSource) {\n                sort(xTable.tableSourceData);\n              }\n              _context11.next = 7;\n              return this.$nextTick();\n            case 7:\n              _context11.next = 9;\n              return this._recalcSortNumber();\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function rowResort(_x6, _x7) {\n        return _rowResort.apply(this, arguments);\n      }\n      return rowResort;\n    }(),\n    /** 重新计算排序字段的数值 */_recalcSortNumber: function () {\n      var _recalcSortNumber2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var _this12 = this;\n        var xTable;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              xTable = this.$refs.vxe.$refs.xTable;\n              if (this.dragSort) {\n                xTable.tableFullData.forEach(function (data, idx) {\n                  return data[_this12.dragSortKey] = idx + 1;\n                });\n              }\n              _context12.next = 4;\n              return xTable.updateCache(true);\n            case 4:\n              _context12.next = 6;\n              return xTable.updateData();\n            case 6:\n              return _context12.abrupt(\"return\", _context12.sent);\n            case 7:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function _recalcSortNumber() {\n        return _recalcSortNumber2.apply(this, arguments);\n      }\n      return _recalcSortNumber;\n    }(),\n    _addOrInsert: function () {\n      var _addOrInsert2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var _this13 = this;\n        var rows,\n          index,\n          triggerName,\n          isOnlJs,\n          xTable,\n          records,\n          result,\n          i,\n          row,\n          _args13 = arguments;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              rows = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : {};\n              index = _args13.length > 1 ? _args13[1] : undefined;\n              triggerName = _args13.length > 2 ? _args13[2] : undefined;\n              isOnlJs = _args13.length > 3 ? _args13[3] : undefined;\n              xTable = this.$refs.vxe.$refs.xTable;\n              if (Array.isArray(rows)) {\n                records = rows;\n              } else {\n                records = [rows];\n              }\n              // 遍历添加默认值\n              records.forEach(function (record) {\n                return _this13._createRow(record);\n              });\n              _context13.next = 9;\n              return this.pushRows(records, {\n                index: index,\n                setActive: true\n              });\n            case 9:\n              result = _context13.sent;\n              // 遍历插入的行\n              // update--begin--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n              // online js增强时以传过来值为准，不再赋默认值\n              if (isOnlJs != true) {\n                for (i = 0; i < result.rows.length; i++) {\n                  row = result.rows[i];\n                  this.trigger(triggerName, {\n                    row: row,\n                    $table: xTable,\n                    target: this\n                  });\n                }\n              }\n              // update--end--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n              return _context13.abrupt(\"return\", result);\n            case 12:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function _addOrInsert() {\n        return _addOrInsert2.apply(this, arguments);\n      }\n      return _addOrInsert;\n    }(),\n    // 创建新行，自动添加默认值\n    _createRow: function _createRow() {\n      var record = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var xTable = this.$refs.vxe.$refs.xTable;\n      // 添加默认值\n      xTable.tableFullColumn.forEach(function (column) {\n        var col = column.own;\n        if (col.key && (record[col.key] == null || record[col.key] === '')) {\n          // 设置默认值\n          var createValue = getEnhancedMixins(col.$type || col.type, 'createValue');\n          record[col.key] = createValue({\n            row: record,\n            column: column,\n            $table: xTable\n          });\n        }\n      });\n      return record;\n    },\n    /*--- 渲染函数 ---*/\n    // 渲染 vxe\n    renderVxeGrid: function renderVxeGrid(h) {\n      return h('vxe-grid', {\n        ref: 'vxe',\n        class: ['j-vxe-table'],\n        props: this.vxeProps,\n        on: this.vxeEvents,\n        // 作用域插槽的格式为\n        scopedSlots: this.$scopedSlots\n      });\n    },\n    // 渲染工具栏\n    renderToolbar: function renderToolbar(h) {\n      var _this14 = this;\n      if (this.toolbar) {\n        return h('j-vxe-toolbar', {\n          props: {\n            toolbarConfig: this.toolbarConfig,\n            excludeCode: this.excludeCode,\n            size: this.size,\n            disabled: this.disabled,\n            disabledRows: this.disabledRows,\n            selectedRowIds: this.selectedRowIds\n          },\n          on: {\n            // 新增事件\n            add: function add() {\n              return _this14.addRows();\n            },\n            // 保存事件\n            save: function save() {\n              return _this14.trigger('save', {\n                $table: _this14.$refs.vxe,\n                target: _this14\n              });\n            },\n            // 删除事件\n            remove: function remove() {\n              var $table = _this14.$refs.vxe;\n              var deleteRows = _this14.filterNewRows(_this14.selectedRows);\n              // 触发删除事件\n              if (deleteRows.length > 0) {\n                var removeEvent = {\n                  deleteRows: deleteRows,\n                  $table: $table,\n                  target: _this14\n                };\n                if (_this14.asyncRemove) {\n                  // 确认删除，只有调用这个方法才会真删除\n                  removeEvent.confirmRemove = function () {\n                    return _this14.removeSelection();\n                  };\n                } else {\n                  _this14.removeSelection();\n                }\n                _this14.trigger('remove', removeEvent);\n              } else {\n                _this14.removeSelection();\n              }\n            },\n            // 清除选择事件\n            clearSelection: this.clearSelection\n          },\n          scopedSlots: {\n            toolbarPrefix: this.$scopedSlots.toolbarPrefix,\n            toolbarSuffix: this.$scopedSlots.toolbarSuffix\n          }\n        });\n      }\n      return null;\n    },\n    // 渲染 toolbarAfter 插槽\n    renderToolbarAfterSlot: function renderToolbarAfterSlot() {\n      if (this.$scopedSlots['toolbarAfter']) {\n        return this.$scopedSlots['toolbarAfter']();\n      }\n      return null;\n    },\n    // 渲染点击时弹出的子表\n    renderSubPopover: function renderSubPopover(h) {\n      if (this.clickRowShowSubForm && this.$scopedSlots.subForm) {\n        return h('j-vxe-sub-popover', {\n          ref: 'subPopover',\n          scopedSlots: {\n            subForm: this.$scopedSlots.subForm\n          }\n        });\n      }\n      return null;\n    },\n    // 渲染点击时弹出的详细信息\n    renderDetailsModal: function renderDetailsModal(h) {\n      if (this.clickRowShowMainForm && this.$scopedSlots.mainForm) {\n        return h('j-vxe-details-modal', {\n          ref: 'detailsModal',\n          scopedSlots: {\n            subForm: this.clickRowShowSubForm ? this.$scopedSlots.subForm : null,\n            mainForm: this.$scopedSlots.mainForm\n          }\n        });\n      }\n    },\n    // 渲染分页器\n    renderPagination: function renderPagination(h) {\n      var _this15 = this;\n      if (this.pagination && Object.keys(this.pagination).length > 0) {\n        return h('j-vxe-pagination', {\n          props: {\n            size: this.size,\n            disabled: this.disabled,\n            pagination: this.pagination\n          },\n          on: {\n            change: function change(e) {\n              return _this15.trigger('pageChange', e);\n            }\n          }\n        });\n      }\n      return null;\n    },\n    loadExcludeCode: function loadExcludeCode() {\n      if (!this.authPre || this.authPre.length == 0) {\n        this.excludeCode = [];\n      } else {\n        var pre = this.authPre;\n        if (!pre.endsWith(':')) {\n          pre += ':';\n        }\n        this.excludeCode = getNoAuthCols(pre);\n      }\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      class: ['j-vxe-table-box', \"size--\".concat(this.size)]\n    }, [this.renderSubPopover(h), this.renderDetailsModal(h), this.renderToolbar(h), this.renderToolbarAfterSlot(), this.renderVxeGrid(h), this.renderPagination(h)]);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$emit('beforeDestroy');\n  }\n};\n\n// 兼容 online 的规则\nvar fooPatterns = [{\n  title: '非空',\n  value: '*',\n  pattern: /^.+$/\n}, {\n  title: '6到16位数字',\n  value: 'n6-16',\n  pattern: /^\\d{6,16}$/\n}, {\n  title: '6到16位任意字符',\n  value: '*6-16',\n  pattern: /^.{6,16}$/\n}, {\n  title: '6到18位字母',\n  value: 's6-18',\n  pattern: /^[a-z|A-Z]{6,18}$/\n}, {\n  title: '网址',\n  value: 'url',\n  pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/\n}, {\n  title: '电子邮件',\n  value: 'e',\n  pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/\n}, {\n  title: '手机号码',\n  value: 'm',\n  pattern: /^1[3456789]\\d{9}$/\n}, {\n  title: '邮政编码',\n  value: 'p',\n  pattern: /^[1-9]\\d{5}$/\n}, {\n  title: '字母',\n  value: 's',\n  pattern: /^[A-Z|a-z]+$/\n}, {\n  title: '数字',\n  value: 'n',\n  pattern: /^-?\\d+(\\.?\\d+|\\d?)$/\n}, {\n  title: '整数',\n  value: 'z',\n  pattern: /^-?\\d+$/\n}, {\n  title: '金额',\n  value: 'money',\n  pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/\n}];\n\n/** 旧版handler转为新版Validator */\nfunction handlerConvertToValidator(event) {\n  var _this16 = this;\n  var column = event.column,\n    rule = event.rule;\n  return new Promise(function (resolve, reject) {\n    rule.handler(event, function (flag, msg) {\n      var message = rule.message;\n      if (typeof msg === 'string') {\n        message = replaceProps(column.own, msg);\n      }\n      if (flag == null) {\n        resolve(message);\n      } else if (!!flag) {\n        resolve(message);\n      } else {\n        reject(new Error(message));\n      }\n    }, _this16, event);\n  });\n}\n\n/** 唯一校验器 */\nfunction uniqueValidator(event) {\n  var cellValue = event.cellValue,\n    column = event.column,\n    rule = event.rule;\n  var tableData = this.getTableData();\n  var findCount = 0;\n  var _iterator6 = _createForOfIteratorHelper(tableData),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var rowData = _step6.value;\n      if (rowData[column.own.key] === cellValue) {\n        if (++findCount >= 2) {\n          return Promise.reject(new Error(rule.message));\n        }\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return Promise.resolve();\n}",{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","XEUtils","PropTypes","JVXETypes","VxeWebSocketMixins","initDictOptions","getRefPromise","getEnhancedMixins","replaceProps","JVxeToolbar","JVxeSubPopover","JVxeDetailsModal","JVxePagination","cloneObject","getVmParentByName","pushIfNotExist","randomString","simpleDebounce","UtilTools","getNoAuthCols","provide","_this","superTrigger","event","trigger","mixins","components","props","rowKey","string","def","columns","Array","required","dataSource","authPre","String","default","toolbar","bool","toolbarConfig","object","slots","btns","rowNumber","rowSelection","rowSelectionType","oneOf","rowExpand","expandConfig","loading","height","instanceOf","Number","maxHeight","_default","disabledRows","disabled","dragSort","dragSortKey","size","bordered","pagination","clickRowShowSubForm","clickRowShowMainForm","clickSelectRow","reloadEffect","editRules","asyncRemove","alwaysEdit","data","isJVXETable","caseId","concat","_innerColumns","_innerEditRules","scroll","top","left","scrolling","defaultVxeProps","mode","showStatus","iconClose","iconOpen","highlight","selectedRows","selectedRowIds","statistics","has","sum","average","reloadEffectRowKeysMap","excludeCode","computed","vxeColumns","_this2","column","renderOptions","listeners","cellListeners","$type","rowDragSort","slot","$scopedSlots","slotName","target","editRender","assign","cellRender","file","image","width","endsWith","parseInt","substr","datetime","userSelect","departSelect","date","vxeEditRules","vxeProps","showFooter","$attrs","border","footerMethod","handleFooterMethod","vxeEvents","_this3","events","handleVxeScroll","handleCellClick","handleEditClosed","handleEditActived","handleVxeRadioChange","handleVxeCheckboxAll","handleVxeCheckboxChange","$listeners","listen","isArray","_this4","valueChange","rowMoveUp","rowIndex","rowResort","rowMoveDown","rowInsertDown","insertRows","watch","immediate","handler","_handler","_callee","_this5","vxe","_callee$","_context","idx","$set","loadData","_this6","loadExcludeCode","expandColumn","seqColumn","checkboxColumn","radioColumn","dragSortColumn","indexOf","col","_objectSpread","enhanced","rowCheckbox","rowRadio","field","renderName","_prefix","hidden","visible","switches","normal","dictCode","_loadDictConcatToOptions","validateRules","rules","_iterator","_createForOfIteratorHelper","_step","rule","replace","message","unique","pattern","validator","uniqueValidator","bind","fooPatterns","_iterator2","_step2","foo","handlerConvertToValidator","item","arr","toLowerCase","title","fixed","align","unshift","content","created","mounted","handleTabsChange","methods","_this7","tabs","tabPane","currentKey","$vnode","unwatch","$children","$watch","_ref","_callee2","_callee2$","_context2","$nextTick","refreshScroll","recalculate","_x","$on","$refs","scrollTop","scrollLeft","subPopover","close","closeScrolling","row","$table","getRadioRecord","handleSelectChange","getCheckboxRecords","$event","action","includes","map","id","own","showDetails","detailsModal","open","toggle","className","toString","setRadioRow","toggleCheckboxRow","_ref2","editClosed","_ref3","editActived","_ref4","footers","getFooterStatisticsMap","checks","property","mean","_ref5","columnIndex","handleFooterSpanMethod","colspan","resetScrollTop","scrollTo","loadNewData","_loadNewData","_callee3","xTable","_callee3$","_context3","_x2","validateTable","_validateTable","_callee4","errMap","_callee4$","_context4","validate","fullValidateTable","_fullValidateTable","_callee5","_callee5$","_context5","fullValidate","setValues","_this8","console","warn","record","_this8$getIfRowById","getIfRowById","colKey","getColumnByKey","oldValue","newValue","isSetValues","getAll","tableData","getTableData","deleteData","getDeleteData","getValues","callback","rowIds","_this9","options","rowId","_this9$getIfRowById","fullData","filterNewRows","getNewData","newData","getInsertRecords","getNewDataWithId","getRowById","isNew","getNewRowById","records","_iterator3","_step3","getRemoveRecords","addRows","_addRows","_callee6","rows","isOnlJs","_args6","_callee6$","_context6","_addOrInsert","_insertRows","_callee7","index","_callee7$","_context7","_x3","_x4","pushRows","_pushRows","_callee8","setActive","result","_args8","_callee8$","_context8","tableFullData","insertAt","setActiveRow","_recalcSortNumber","clearSelection","clearRadioRow","clearCheckboxRow","removeRows","_removeRows","_callee9","res","_callee9$","_context9","_remove","_x5","removeRowsById","_this10","_this10$getIfRowById","filter","getColumnByField","$target","$emit","_this11","success","newOptions","_iterator4","_step4","option","group","groupEnd","virtualRefresh","remove","insertRecords","_iterator5","_step5","removeSelection","_removeSelection","_callee10","_callee10$","_context10","afterFullData","tableSourceData","editStore","treeConfig","checkboxOpts","selection","isInsertByRow","scrollYLoad","actived","removeList","insertList","checkField","rest","nowData","getLog","keepSource","rowIdSet","Set","clearActived","handleTableData","updateFooter","updateCache","checkSelectionStatus","updateScrollYSpace","_rowResort","_callee11","oldIndex","newIndex","sort","_callee11$","_context11","window","array","splice","_x6","_x7","_recalcSortNumber2","_callee12","_this12","_callee12$","_context12","updateData","_addOrInsert2","_callee13","_this13","triggerName","_args13","_callee13$","_context13","_createRow","tableFullColumn","createValue","renderVxeGrid","ref","class","on","scopedSlots","renderToolbar","_this14","add","save","deleteRows","removeEvent","confirmRemove","toolbarPrefix","toolbarSuffix","renderToolbarAfterSlot","renderSubPopover","subForm","renderDetailsModal","mainForm","renderPagination","_this15","change","pre","render","beforeDestroy","_this16","flag","msg","cellValue","findCount","_iterator6","_step6","rowData"],"sources":["F:/workspace/3月/km_community-main/ant-design-vue-jeecg/src/components/jeecg/JVxeTable/components/JVxeTable.js"],"sourcesContent":["import XEUtils from 'xe-utils'\nimport PropTypes from 'ant-design-vue/es/_util/vue-types'\nimport { JVXETypes } from '@/components/jeecg/JVxeTable/jvxeTypes'\nimport VxeWebSocketMixins from '../mixins/vxe.web.socket.mixins'\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil'\n\nimport { getRefPromise } from '../utils/vxeUtils'\nimport { getEnhancedMixins, replaceProps } from '../utils/cellUtils'\n\nimport JVxeToolbar from './JVxeToolbar'\nimport JVxeSubPopover from './JVxeSubPopover'\nimport JVxeDetailsModal from './JVxeDetailsModal'\nimport JVxePagination from './JVxePagination'\nimport { cloneObject, getVmParentByName, pushIfNotExist, randomString, simpleDebounce } from '@/utils/util'\nimport { UtilTools } from 'vxe-table/packages/tools/src/utils'\nimport { getNoAuthCols } from '@/utils/authFilter'\n\nexport default {\n  name: 'JVxeTable',\n  provide() {\n    return {\n      superTrigger: (name, event) => this.trigger(name, event)\n    }\n  },\n  mixins: [VxeWebSocketMixins],\n  components: {JVxeToolbar, JVxeSubPopover, JVxeDetailsModal, JVxePagination},\n  props: {\n    rowKey: PropTypes.string.def('id'),\n    // 列信息\n    columns: {\n      type: Array,\n      required: true\n    },\n    // 数据源\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    authPre: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    // 是否显示工具栏\n    toolbar: PropTypes.bool.def(false),\n    // 工具栏配置\n    toolbarConfig: PropTypes.object.def(() => ({\n      // prefix 前缀；suffix 后缀；\n      slots: ['prefix', 'suffix'],\n      // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮；collapse 展开收起\n      btns: ['add', 'remove', 'clearSelection'],\n    })),\n    // 是否显示行号\n    rowNumber: PropTypes.bool.def(false),\n    // 是否可选择行\n    rowSelection: PropTypes.bool.def(false),\n    // 选择行类型\n    rowSelectionType: PropTypes.oneOf(['checkbox', 'radio']).def('checkbox'),\n    // 是否可展开行\n    rowExpand: PropTypes.bool.def(false),\n    // 展开行配置\n    expandConfig: PropTypes.object.def(() => ({})),\n    // 页面是否在加载中\n    loading: PropTypes.bool.def(false),\n    height: PropTypes.instanceOf([Number, String]).def('auto'),\n    // 最大高度\n    maxHeight: {\n      type: Number,\n      default: () => null,\n    },\n    // 要禁用的行 TODO 未实现\n    disabledRows: PropTypes.object.def(() => ({})),\n    // 是否禁用全部组件\n    disabled: PropTypes.bool.def(false),\n    // 是否可拖拽排序 TODO 仅实现上下排序，未实现拖拽排序（可能无法实现或较为困难）\n    dragSort: PropTypes.bool.def(false),\n    // 排序字段保存的Key\n    dragSortKey: PropTypes.string.def('orderNum'),\n    // 大小，可选值有：medium（中）、small（小）、mini（微）、tiny（非常小）\n    size: PropTypes.oneOf(['medium', 'small', 'mini', 'tiny']).def('medium'),\n    // 是否显示边框线\n    bordered: PropTypes.bool.def(false),\n    // 分页器参数，设置了即可显示分页器\n    pagination: PropTypes.object.def(() => ({})),\n    // 点击行时是否显示子表单\n    clickRowShowSubForm: PropTypes.bool.def(false),\n    // 点击行时是否显示主表单\n    clickRowShowMainForm: PropTypes.bool.def(false),\n    // 是否点击选中行，优先级最低\n    clickSelectRow: PropTypes.bool.def(false),\n    // 是否开启 reload 数据效果\n    reloadEffect: PropTypes.bool.def(false),\n    // 校验规则\n    editRules: PropTypes.object.def(() => ({})),\n    // 是否异步删除行，如果你要实现异步删除，那么需要把这个选项开启，\n    // 在remove事件里调用confirmRemove方法才会真正删除（除非删除的全是新增的行）\n    asyncRemove: PropTypes.bool.def(false),\n    // 是否一直显示组件，如果为false则只有点击的时候才出现组件\n    // 注：该参数不能动态修改；如果行、列字段多的情况下，会根据机器性能造成不同程度的卡顿。\n    alwaysEdit: PropTypes.bool.def(false),\n  },\n  data() {\n    return {\n      isJVXETable: true,\n      // caseId，表格唯一标识\n      caseId: `_j-vxe-${randomString(8)}_`,\n      // 内置columns\n      _innerColumns: [],\n      // 内置 EditRules\n      _innerEditRules: [],\n      // 记录滚动条位置\n      scroll: {top: 0, left: 0},\n      // 当前是否正在滚动\n      scrolling: false,\n      // vxe 默认配置\n      defaultVxeProps: {\n        'row-id': this.rowKey,\n        // 高亮hover的行\n        'highlight-hover-row': true,\n        // 溢出隐藏并显示tooltip\n        'show-overflow': true,\n        // 表头溢出隐藏并显示tooltip\n        'show-header-overflow': true,\n        'show-footer-overflow': true,\n        // 可编辑配置\n        'edit-config': {trigger: 'click', mode: 'cell', showStatus: true},\n        'expand-config': {\n          iconClose: 'ant-table-row-expand-icon ant-table-row-collapsed',\n          iconOpen: 'ant-table-row-expand-icon ant-table-row-expanded'\n        },\n        // 虚拟滚动配置，y轴大于30条数据时启用虚拟滚动\n        // 'scroll-y': {\n        //   gt: 30\n        // },\n        // 'scroll-x': {\n        //   gt: 15\n        // },\n        'radio-config': {highlight: true},\n        'checkbox-config': {highlight: true},\n      },\n      // 绑定左侧选择框\n      selectedRows: [],\n      // 绑定左侧选择框已选择的id\n      selectedRowIds: [],\n      // 统计列配置\n      statistics: {\n        has: false,\n        sum: [],\n        average: [],\n      },\n      // 允许执行刷新特效的行ID\n      reloadEffectRowKeysMap: {},\n      //配置了但是没有授权的按钮和列 集合\n      excludeCode:[]\n    }\n  },\n  computed: {\n\n    // vxe 最终 columns\n    vxeColumns() {\n      this._innerColumns.forEach(column => {\n        let renderOptions = {\n          caseId: this.caseId,\n          bordered: this.bordered,\n          disabled: this.disabled,\n          scrolling: this.scrolling,\n          reloadEffect: this.reloadEffect,\n          reloadEffectRowKeysMap: this.reloadEffectRowKeysMap,\n          listeners: this.cellListeners,\n        }\n        if (column.$type === JVXETypes.rowDragSort) {\n          renderOptions.dragSortKey = this.dragSortKey\n        }\n        // slot 组件特殊处理\n        if (column.$type === JVXETypes.slot) {\n          if (this.$scopedSlots.hasOwnProperty(column.slotName)) {\n            renderOptions.slot = this.$scopedSlots[column.slotName]\n            renderOptions.target = this\n          }\n        }\n        if (column.editRender) {\n          Object.assign(column.editRender, renderOptions)\n        }\n        if (column.cellRender) {\n          Object.assign(column.cellRender, renderOptions)\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n        if (column.$type === JVXETypes.file || column.$type === JVXETypes.image) {\n          if (column.width && column.width.endsWith('px')) {\n            column.width = Number.parseInt(column.width.substr(0,column.width.length-2))+Number.parseInt(1)+'px';\n          }\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n\n        // update--begin--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n        if (column.$type === JVXETypes.datetime || column.$type === JVXETypes.userSelect || column.$type === JVXETypes.departSelect) {\n          let width = column.width && column.width.endsWith('px')?Number.parseInt(column.width.substr(0,column.width.length-2)):0;\n          if(width <= 190){\n            column.width = '190px'\n          }\n        }\n        if (column.$type === JVXETypes.date) {\n          let width = column.width && column.width.endsWith('px')?Number.parseInt(column.width.substr(0,column.width.length-2)):0;\n          if(width <= 135){\n            column.width = '135px'\n          }\n        }\n        // update--end--autor:lvdandan-----date:20201211------for:JT-118 【online】 日期、时间控件长度较小\n      })\n      return this._innerColumns\n    },\n    // vxe 最终 editRules\n    vxeEditRules() {\n      return Object.assign({}, this.editRules, this._innerEditRules)\n    },\n    // vxe 最终 props\n    vxeProps() {\n      let expandConfig = Object.assign({}, this.defaultVxeProps['expand-config'], this.expandConfig)\n\n      return Object.assign({}, this.defaultVxeProps, {\n        showFooter: this.statistics.has,\n      }, this.$attrs, {\n        loading: this.loading,\n        columns: this.vxeColumns,\n        editRules: this.vxeEditRules,\n        // data: this.dataSource,\n        height: this.height === 'auto' ? null : this.height,\n        maxHeight: this.maxHeight,\n        border: this.bordered,\n        expandConfig: expandConfig,\n        footerMethod: this.handleFooterMethod,\n        // footerSpanMethod: this.handleFooterSpanMethod,\n      })\n    },\n    // vxe 最终 events\n    vxeEvents() {\n      // 内置事件\n      let events = {\n        'scroll': this.handleVxeScroll,\n        'cell-click': this.handleCellClick,\n        'edit-closed': this.handleEditClosed,\n        'edit-actived': this.handleEditActived,\n        'radio-change': this.handleVxeRadioChange,\n        'checkbox-all': this.handleVxeCheckboxAll,\n        'checkbox-change': this.handleVxeCheckboxChange,\n      }\n      // 用户传递的事件，进行合并操作\n      Object.keys(this.$listeners).forEach(key => {\n        let listen = this.$listeners[key]\n        if (events.hasOwnProperty(key)) {\n          if (Array.isArray(listen)) {\n            listen.push(events[key])\n          } else {\n            listen = [events[key], listen]\n          }\n        }\n        events[key] = listen\n      })\n      return events\n    },\n    // 组件监听事件\n    cellListeners() {\n      return {\n        trigger: (name, event) => this.trigger(name, event),\n        valueChange: event => this.trigger('valueChange', event),\n        /** 当前行向上移一位 */\n        rowMoveUp: rowIndex => this.rowResort(rowIndex, rowIndex - 1),\n        /** 当前行向下移一位 */\n        rowMoveDown: rowIndex => this.rowResort(rowIndex, rowIndex + 1),\n        /** 在当前行下面插入一行 */\n        rowInsertDown: rowIndex => this.insertRows({}, rowIndex + 1),\n      }\n    },\n  },\n  watch: {\n    dataSource: {\n      //   deep: true,\n      immediate: true,\n      async handler() {\n        let vxe = await getRefPromise(this, 'vxe')\n        // 阻断vue监听大数据，提高性能\n\n        // 开启了排序就自动计算排序值\n        if (this.dragSort) {\n          this.dataSource.forEach((data, idx) => {\n            this.$set(data, this.dragSortKey, idx + 1)\n          })\n        }\n\n        vxe.loadData(this.dataSource)\n\n        // TODO 解析disabledRows\n        // let disabled = false\n        //\n        // let disabledRowIds = (this.disabledRowIds || [])\n        // // 解析disabledRows\n        // Object.keys(this.disabledRows).forEach(disabledColKey => {\n        //   // 判断是否有该属性\n        //   if (data.hasOwnProperty(disabledColKey)) {\n        //     if (disabled !== true) {\n        //       let temp = this.disabledRows[disabledColKey]\n        //       // 禁用规则可以是一个数组\n        //       if (Array.isArray(temp)) {\n        //         disabled = temp.includes(data[disabledColKey])\n        //       } else {\n        //         disabled = (temp === data[disabledColKey])\n        //       }\n        //       if (disabled) {\n        //         disabledRowIds.push(row.id)\n        //       }\n        //     }\n        //   }\n        // })\n      },\n    },\n    columns: {\n      immediate: true,\n      handler(columns) {\n        //获取不需要显示列\n        this.loadExcludeCode()\n        let _innerColumns = []\n        let _innerEditRules = {}\n        let {rowNumber, rowSelection, rowExpand, dragSort} = this\n        let expandColumn, seqColumn, checkboxColumn, radioColumn, dragSortColumn\n        if (Array.isArray(columns)) {\n          this.statistics.has = false\n          this.statistics.sum = []\n          this.statistics.average = []\n\n          // 处理成vxe可识别的columns\n          columns.forEach(column => {\n            if(this.excludeCode.indexOf(column.key)>=0){\n              return false\n            }\n            let col = {...column}\n            let {type} = col\n            const enhanced = getEnhancedMixins(type)\n            if (type === JVXETypes.rowNumber) {\n              seqColumn = col\n            } else if (type === JVXETypes.rowCheckbox) {\n              checkboxColumn = col\n            } else if (type === JVXETypes.rowRadio) {\n              radioColumn = col\n            } else if (type === JVXETypes.rowExpand) {\n              expandColumn = col\n            } else if (type === JVXETypes.rowDragSort) {\n              dragSortColumn = col\n            } else {\n              col.field = col.key\n              // 防止和vxeTable自带的type起冲突\n              col.$type = col.type\n              delete col.type\n              let renderName = 'cellRender', renderOptions = {name: JVXETypes._prefix + type}\n              if (type) {\n                // hidden 是特殊的组件\n                if (type === JVXETypes.hidden) {\n                  col.visible = false\n                } else if (enhanced.switches.editRender) {\n                  renderName = 'editRender'\n                  renderOptions.type = (enhanced.switches.visible || this.alwaysEdit) ? 'visible' : 'default'\n                }\n              } else {\n                renderOptions.name = JVXETypes._prefix + JVXETypes.normal\n              }\n              col[renderName] = renderOptions\n              // 处理字典\n              if (col.dictCode) {\n                this._loadDictConcatToOptions(col)\n              }\n              // 处理校验\n              if (col.validateRules) {\n                let rules = []\n                if (Array.isArray(col.validateRules)) {\n                  for (let rule of col.validateRules) {\n                    let replace = {\n                      message: replaceProps(col, rule.message)\n                    }\n                    if (rule.unique || rule.pattern === 'only') {\n                      // 唯一校验器\n                      rule.validator = uniqueValidator.bind(this)\n                    } else if (rule.pattern) {\n                      // 非空\n                      if (rule.pattern === fooPatterns[0].value) {\n                        rule.required = true\n                        delete rule.pattern\n                      } else {\n                        // 兼容Online表单的特殊规则\n                        for (let foo of fooPatterns) {\n                          if (foo.value === rule.pattern) {\n                            rule.pattern = foo.pattern\n                            break\n                          }\n                        }\n                      }\n                    } else if (typeof rule.handler === 'function') {\n                      // 自定义函数校验\n                      rule.validator = handlerConvertToValidator.bind(this)\n                    }\n                    rules.push(Object.assign({}, rule, replace))\n                  }\n                }\n                _innerEditRules[col.key] = rules\n              }\n              // 处理统计列\n              // sum = 求和、average = 平均值\n              if (Array.isArray(col.statistics)) {\n                this.statistics.has = true\n                col.statistics.forEach(item => {\n                  let arr = this.statistics[item.toLowerCase()]\n                  if (Array.isArray(arr)) {\n                    pushIfNotExist(arr, col.key)\n                  }\n                })\n              }\n              _innerColumns.push(col)\n            }\n          })\n        }\n        // 判断是否开启了序号\n        if (rowNumber) {\n          let col = {type: 'seq', title: '#', width: 60, fixed: 'left', align: 'center'}\n          if (seqColumn) {\n            col = Object.assign(col, seqColumn, {type: 'seq'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 判断是否开启了可选择行\n        if (rowSelection) {\n          let width = 40\n          if (this.statistics.has && !rowExpand && !dragSort) {\n            width = 60\n          }\n          let col = {type: this.rowSelectionType, width, fixed: 'left', align: 'center'}\n          // radio\n          if (this.rowSelectionType === 'radio' && radioColumn) {\n            col = Object.assign(col, radioColumn, {type: 'radio'})\n          }\n          // checkbox\n          if (this.rowSelectionType === 'checkbox' && checkboxColumn) {\n            col = Object.assign(col, checkboxColumn, {type: 'checkbox'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 是否可展开行\n        if (rowExpand) {\n          let width = 40\n          if (this.statistics.has && !dragSort) {\n            width = 60\n          }\n          let col = {type: 'expand', title: '', width, fixed: 'left', align: 'center', slots: {content: 'expandContent'}}\n          if (expandColumn) {\n            col = Object.assign(col, expandColumn, {type: 'expand'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 是否可拖动排序\n        if (dragSort) {\n          let width = 40\n          if (this.statistics.has) {\n            width = 60\n          }\n          let col = {type: JVXETypes.rowDragSort, title: '', width, fixed: 'left', align: 'center', cellRender: {name: JVXETypes._prefix + JVXETypes.rowDragSort}}\n          if (dragSortColumn) {\n            col = Object.assign(col, dragSortColumn, {type: JVXETypes.rowDragSort})\n          }\n          _innerColumns.unshift(col)\n        }\n\n        this._innerColumns = _innerColumns\n        this._innerEditRules = _innerEditRules\n      }\n    }\n  },\n  created() {\n  },\n  mounted() {\n    this.handleTabsChange()\n  },\n  methods: {\n\n    /**\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动重置表格\n     */\n    handleTabsChange() {\n      // 获取父级\n      const tabs = getVmParentByName(this, 'ATabs')\n      const tabPane = getVmParentByName(this, 'ATabPane')\n      if (tabs && tabPane) {\n        // 用户自定义的 key\n        const currentKey = tabPane.$vnode.key\n        // 添加 activeKey 监听\n        const unwatch = tabs.$children[0].$watch('$data._activeKey', async (key) => {\n          // 切换到自己时重新计算\n          if (currentKey === key) {\n            await this.$nextTick()\n            await this.refreshScroll()\n            await this.recalculate()\n          }\n        })\n        // 当前实例销毁时取消监听\n        this.$on('beforeDestroy', () => unwatch())\n      }\n    },\n\n    handleVxeScroll(event) {\n      let {$refs, scroll} = this\n\n      // 记录滚动条的位置\n      scroll.top = event.scrollTop\n      scroll.left = event.scrollLeft\n\n      $refs.subPopover ? $refs.subPopover.close() : null\n      this.scrolling = true\n      this.closeScrolling()\n    },\n    // 当手动勾选单选时触发的事件\n    handleVxeRadioChange(event) {\n      let row = event.$table.getRadioRecord()\n      this.selectedRows = row ? [row] : []\n      this.handleSelectChange('radio', this.selectedRows, event)\n    },\n    // 当手动勾选全选时触发的事件\n    handleVxeCheckboxAll(event) {\n      this.selectedRows = event.$table.getCheckboxRecords()\n      this.handleSelectChange('checkbox-all', this.selectedRows, event)\n    },\n    // 当手动勾选并且值发生改变时触发的事件\n    handleVxeCheckboxChange(event) {\n      this.selectedRows = event.$table.getCheckboxRecords()\n      this.handleSelectChange('checkbox', this.selectedRows, event)\n    },\n    // 行选择change事件\n    handleSelectChange(type, selectedRows, $event) {\n      let action\n      if (type === 'radio') {\n        action = 'selected'\n      } else if (type === 'checkbox') {\n        action = selectedRows.includes($event.row) ? 'selected' : 'unselected'\n      } else {\n        action = 'selected-all'\n      }\n\n      this.selectedRowIds = selectedRows.map(row => row.id)\n      this.trigger('selectRowChange', {\n        type: type,\n        action: action,\n        $event: $event,\n        row: $event.row,\n        selectedRows: this.selectedRows,\n        selectedRowIds: this.selectedRowIds\n      })\n    },\n\n    // 点击单元格时触发的事件\n    handleCellClick(event) {\n      let {row, column, $event, $table} = event\n      let {$refs} = this\n\n      // 点击了可编辑的\n      if (column.editRender) {\n        $refs.subPopover ? $refs.subPopover.close() : null\n        return\n      }\n\n      // 显示详细信息\n      if (column.own.showDetails) {\n        // 两个如果同时存在的话会出现死循环\n        $refs.subPopover ? $refs.subPopover.close() : null\n        $refs.detailsModal ? $refs.detailsModal.open(event) : null\n      } else if ($refs.subPopover) {\n        $refs.subPopover.toggle(event)\n      } else if (this.clickSelectRow) {\n        let className = $event.target.className || ''\n        className = typeof className === 'string' ? className : className.toString()\n        // 点击的是expand，不做处理\n        if (className.includes('vxe-table--expand-btn')) {\n          return\n        }\n        // 点击的是checkbox，不做处理\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n          return\n        }\n        // 点击的是radio，不做处理\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n          return\n        }\n        if (this.rowSelectionType === 'radio') {\n          $table.setRadioRow(row)\n          this.handleVxeRadioChange(event)\n        } else {\n          $table.toggleCheckboxRow(row)\n          this.handleVxeCheckboxChange(event)\n        }\n      }\n    },\n\n    // 单元格编辑状态下被关闭时会触发该事件\n    handleEditClosed({column}) {\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editClosed.apply(this, arguments)\n    },\n\n    // 单元格被激活编辑时会触发该事件\n    handleEditActived({column}) {\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editActived.apply(this, arguments)\n    },\n\n    /** 表尾数据处理方法，用于显示统计信息 */\n    handleFooterMethod({columns, data}) {\n      const {statistics} = this\n      let footers = []\n      if (statistics.has) {\n        if (statistics.sum.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '合计',\n            checks: statistics.sum,\n            method: (column) => XEUtils.sum(data, column.property)\n          }))\n        }\n        if (statistics.average.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '平均',\n            checks: statistics.average,\n            method: (column) => XEUtils.mean(data, column.property)\n          }))\n        }\n      }\n      return footers\n    },\n\n    getFooterStatisticsMap({columns, title, checks, method}) {\n      return columns.map((column, columnIndex) => {\n        if (columnIndex === 0) {\n          return title\n        }\n        if (checks.includes(column.property)) {\n          return method(column, columnIndex)\n        }\n        return null\n      })\n    },\n\n    /** 表尾单元格合并方法 */\n    handleFooterSpanMethod(event) {\n      if (event.columnIndex === 0) {\n        return {colspan: 2}\n      }\n    },\n\n    /*--- 外部可调用接口方法 ---*/\n\n    /**\n     * 重置滚动条Top位置\n     * @param top 新top位置，留空则滚动到上次记录的位置，用于解决切换tab选项卡时导致白屏以及自动将滚动条滚动到顶部的问题\n     */\n    resetScrollTop(top) {\n      this.scrollTo(null, (top == null || top === '') ? this.scroll.top : top)\n    },\n\n    /**\n     * 加载新数据，和 loadData 不同的是，用该方法加载的数据都是相当于点新增按钮新增的数据。\n     * 适用于不是数据库里查出来的没有id的临时数据\n     * @param dataSource\n     */\n    async loadNewData(dataSource) {\n      if (Array.isArray(dataSource)) {\n        let {xTable} = this.$refs.vxe.$refs\n        return await xTable.loadData(dataSource)\n      }\n      return []\n    },\n\n    // 校验table，失败返回errMap，成功返回null\n    async validateTable() {\n      const errMap = await this.validate().catch(errMap => errMap)\n      return errMap ? errMap : null\n    },\n    // 完整校验\n    async fullValidateTable() {\n      const errMap = await this.fullValidate().catch(errMap => errMap)\n      return errMap ? errMap : null\n    },\n\n    /** 设置某行某列的值 */\n    setValues(values) {\n      if (!Array.isArray(values)) {\n        console.warn(`JVxeTable.setValues：必须传递数组`)\n        return\n      }\n      values.forEach((item, idx) => {\n        let {rowKey, values: record} = item\n        let {row} = this.getIfRowById(rowKey)\n        if (!row) {\n          return\n        }\n        Object.keys(record).forEach(colKey => {\n          let column = this.getColumnByKey(colKey)\n          if (column) {\n            let oldValue = row[colKey]\n            let newValue = record[colKey]\n            if (newValue !== oldValue) {\n              this.$set(row, colKey, newValue)\n              // 触发 valueChange 事件\n              this.trigger('valueChange', {\n                type: column.own.$type,\n                value: newValue,\n                oldValue: oldValue,\n                col: column.own,\n                column: column,\n                isSetValues: true,\n              })\n            }\n          } else {\n            console.warn(`JVxeTable.setValues：没有找到key为\"${colKey}\"的列`)\n          }\n        })\n      })\n    },\n\n    /** 获取所有的数据，包括values、deleteIds */\n    getAll() {\n      return {\n        tableData: this.getTableData(),\n        deleteData: this.getDeleteData()\n      }\n    },\n    /** 获取表格表单里的值 */\n    getValues(callback, rowIds) {\n      let tableData = this.getTableData({rowIds: rowIds})\n      callback('', tableData)\n    },\n    /** 获取表格数据 */\n    getTableData(options = {}) {\n      let {rowIds} = options\n      let tableData\n      // 仅查询指定id的行\n      if (Array.isArray(rowIds) && rowIds.length > 0) {\n        tableData = []\n        rowIds.forEach(rowId => {\n          let {row} = this.getIfRowById(rowId)\n          if (row) {\n            tableData.push(row)\n          }\n        })\n      } else {\n        // 查询所有行\n        tableData = this.$refs.vxe.getTableData().fullData\n      }\n      return this.filterNewRows(tableData, false)\n    },\n    /** 仅获取新增的数据 */\n    getNewData() {\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\n      newData.forEach(row => delete row.id)\n      return newData\n    },\n    /** 仅获取新增的数据,带有id */\n    getNewDataWithId() {\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\n      return newData\n    },\n    /** 根据ID获取行，新增的行也能查出来 */\n    getIfRowById(id) {\n      let row = this.getRowById(id), isNew = false\n      if (!row) {\n        row = this.getNewRowById(id)\n        if (!row) {\n          console.warn(`JVxeTable.getIfRowById：没有找到id为\"${id}\"的行`)\n          return {row: null}\n        }\n        isNew = true\n      }\n      return {row, isNew}\n    },\n    /** 通过临时ID获取新增的行 */\n    getNewRowById(id) {\n      let records = this.getInsertRecords()\n      for (let record of records) {\n        if (record.id === id) {\n          return record\n        }\n      }\n      return null\n    },\n    /** 仅获取被删除的数据（新增又被删除的数据不会被获取到） */\n    getDeleteData() {\n      return cloneObject(this.$refs.vxe.getRemoveRecords())\n    },\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @return\n     */\n    async addRows(rows = {}, isOnlJs) {\n      return this._addOrInsert(rows, -1, 'added', isOnlJs)\n    },\n\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param index 添加下标，数字，必填\n     * @return\n     */\n    async insertRows(rows, index) {\n      if (typeof index !== 'number' || index < 0) {\n        console.warn(`【JVXETable】insertRows：index必须传递数字，且大于-1`)\n        return\n      }\n      return this._addOrInsert(rows, index, 'inserted')\n    },\n    /**\n     * 添加一行或多行临时数据，不会填充默认值，传什么就添加进去什么\n     * @param rows\n     * @param options 选项\n     * @param options.setActive 是否激活最后一行的编辑模式\n     */\n    async pushRows(rows = {}, options = {}) {\n      let {xTable} = this.$refs.vxe.$refs\n      let {setActive, index} = options\n      setActive = setActive == null ? false : !!setActive\n      index = index == null ? -1 : index\n      index = index === -1 ? index : xTable.tableFullData[index]\n      // 插入行\n      let result = await xTable.insertAt(rows, index)\n      if (setActive) {\n        // 激活最后一行的编辑模式\n        xTable.setActiveRow(result.rows[result.rows.length - 1])\n      }\n      await this._recalcSortNumber()\n      return result\n    },\n\n    /** 清空选择行 */\n    clearSelection() {\n      let event = {$table: this.$refs.vxe, target: this}\n      if (this.rowSelectionType === JVXETypes.rowRadio) {\n        this.$refs.vxe.clearRadioRow()\n        this.handleVxeRadioChange(event)\n      } else {\n        this.$refs.vxe.clearCheckboxRow()\n        this.handleVxeCheckboxChange(event)\n      }\n    },\n\n    /** 删除一行或多行数据 */\n    async removeRows(rows) {\n      const res = await this._remove(rows)\n      await this._recalcSortNumber()\n      return res\n    },\n\n    /** 根据id删除一行或多行 */\n    removeRowsById(rowId) {\n      let rowIds\n      if (Array.isArray(rowId)) {\n        rowIds = rowId\n      } else {\n        rowIds = [rowId]\n      }\n      let rows = rowIds.map((id) => {\n        let {row} = this.getIfRowById(id)\n        if (!row) {\n          return\n        }\n        if (row) {\n          return row\n        } else {\n          console.warn(`【JVXETable】removeRowsById：${id}不存在`)\n          return null\n        }\n      }).filter((row) => row != null)\n      return this.removeRows(rows)\n    },\n\n    getColumnByKey() {\n      return this.$refs.vxe.getColumnByField.apply(this.$refs.vxe, arguments)\n    },\n\n    /* --- 辅助方法 ---*/\n\n    // 触发事件\n    trigger(name, event = {}) {\n      event.$target = this\n      event.$table = this.$refs.vxe\n      //online增强参数兼容\n      event.target = this\n      this.$emit(name, event)\n    },\n\n    /** 加载数据字典并合并到 options */\n    _loadDictConcatToOptions(column) {\n      initDictOptions(column.dictCode).then((res) => {\n        if (res.success) {\n          let newOptions = (column.options || [])// .concat(res.result)\n          res.result.forEach(item => {\n            // 过滤重复数据\n            for (let option of newOptions) if (option.value === item.value) return\n            newOptions.push(item)\n          })\n          this.$set(column, 'options', newOptions)\n        } else {\n          console.group(`JVxeTable 查询字典(${column.dictCode})发生异常`)\n          console.warn(res.message)\n          console.groupEnd()\n        }\n      })\n    },\n    //options自定义赋值 刷新\n    virtualRefresh(){\n      this.scrolling = true\n      this.closeScrolling()\n    },\n    // 设置 this.scrolling 防抖模式\n    closeScrolling: simpleDebounce(function () {\n      this.scrolling = false\n    }, 100),\n\n    /**\n     * 过滤添加的行\n     * @param rows 要筛选的行数据\n     * @param remove true = 删除新增，false=只删除id\n     * @param handler function\n     */\n    filterNewRows(rows, remove = true, handler) {\n      let insertRecords = this.$refs.vxe.getInsertRecords()\n      let records = []\n      for (let row of rows) {\n        let item = cloneObject(row)\n        if (insertRecords.includes(row)) {\n          handler ? handler({item, row, insertRecords}) : null\n\n          if (remove) {\n            continue\n          }\n          delete item.id\n        }\n        records.push(item)\n      }\n      return records\n    },\n\n    // 删除选中的数据\n    async removeSelection() {\n      let res = await this._remove(this.selectedRows)\n      this.clearSelection()\n      await this._recalcSortNumber()\n      return res\n    },\n\n    /**\n     * 【删除指定行数据】（重写vxeTable的内部方法，添加了从keepSource中删除）\n     * 如果传 row 则删除一行\n     * 如果传 rows 则删除多行\n     * 如果为空则删除所有\n     */\n    _remove(rows) {\n      const xTable = this.$refs.vxe.$refs.xTable\n\n      const {afterFullData, tableFullData, tableSourceData, editStore, treeConfig, checkboxOpts, selection, isInsertByRow, scrollYLoad} = xTable\n      const {actived, removeList, insertList} = editStore\n      const {checkField: property} = checkboxOpts\n      let rest = []\n      const nowData = afterFullData\n      if (treeConfig) {\n        throw new Error(UtilTools.getLog('vxe.error.noTree', ['remove']))\n      }\n      if (!rows) {\n        rows = tableFullData\n      } else if (!XEUtils.isArray(rows)) {\n        rows = [rows]\n      }\n      // 如果是新增，则保存记录\n      rows.forEach(row => {\n        if (!isInsertByRow(row)) {\n          removeList.push(row)\n        }\n      })\n      // 如果绑定了多选属性，则更新状态\n      if (!property) {\n        XEUtils.remove(selection, row => rows.indexOf(row) > -1)\n      }\n      // 从数据源中移除\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0)\n        tableFullData.length = 0\n        nowData.length = 0\n      } else {\n        rest = XEUtils.remove(tableFullData, row => rows.indexOf(row) > -1)\n        XEUtils.remove(nowData, row => rows.indexOf(row) > -1)\n      }\n      // 【从keepSource中删除】\n      if (xTable.keepSource) {\n        let rowIdSet = new Set(rows.map(row => row.id))\n        XEUtils.remove(tableSourceData, row => rowIdSet.has(row.id))\n      }\n\n      // 如果当前行被激活编辑，则清除激活状态\n      if (actived.row && rows.indexOf(actived.row) > -1) {\n        xTable.clearActived()\n      }\n      // 从新增中移除已删除的数据\n      XEUtils.remove(insertList, row => rows.indexOf(row) > -1)\n      xTable.handleTableData()\n      xTable.updateFooter()\n      xTable.updateCache()\n      xTable.checkSelectionStatus()\n      if (scrollYLoad) {\n        xTable.updateScrollYSpace()\n      }\n      return xTable.$nextTick().then(() => {\n        xTable.recalculate()\n        return {row: rest.length ? rest[rest.length - 1] : null, rows: rest}\n      })\n    },\n\n    /** 行重新排序 */\n    async rowResort(oldIndex, newIndex) {\n      const xTable = this.$refs.vxe.$refs.xTable\n      window.xTable = xTable\n      const sort = (array) => {\n        // 存储旧数据，并删除旧项目\n        let row = array.splice(oldIndex, 1)[0]\n        // 向新项目里添加旧数据\n        array.splice(newIndex, 0, row)\n      }\n      sort(xTable.tableFullData)\n      if (xTable.keepSource) {\n        sort(xTable.tableSourceData)\n      }\n      await this.$nextTick()\n      await this._recalcSortNumber()\n    },\n\n    /** 重新计算排序字段的数值 */\n    async _recalcSortNumber() {\n      const xTable = this.$refs.vxe.$refs.xTable\n      if (this.dragSort) {\n        xTable.tableFullData.forEach((data, idx) => data[this.dragSortKey] = (idx + 1))\n      }\n      await xTable.updateCache(true)\n      return await xTable.updateData()\n    },\n\n    async _addOrInsert(rows = {}, index, triggerName, isOnlJs) {\n      let {xTable} = this.$refs.vxe.$refs\n      let records\n      if (Array.isArray(rows)) {\n        records = rows\n      } else {\n        records = [rows]\n      }\n      // 遍历添加默认值\n      records.forEach(record => this._createRow(record))\n      let result = await this.pushRows(records, {index: index, setActive: true})\n      // 遍历插入的行\n      // update--begin--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n      // online js增强时以传过来值为准，不再赋默认值\n      if (isOnlJs != true) {\n        for (let i = 0; i < result.rows.length; i++) {\n          let row = result.rows[i]\n          this.trigger(triggerName, {\n            row: row,\n            $table: xTable,\n            target: this,\n          })\n        }\n      }\n      // update--end--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n      return result\n    },\n    // 创建新行，自动添加默认值\n    _createRow(record = {}) {\n      let {xTable} = this.$refs.vxe.$refs\n      // 添加默认值\n      xTable.tableFullColumn.forEach(column => {\n        let col = column.own\n        if (col.key && (record[col.key] == null || record[col.key] === '')) {\n          // 设置默认值\n          let createValue = getEnhancedMixins(col.$type || col.type, 'createValue')\n          record[col.key] = createValue({row: record, column, $table: xTable})\n        }\n      })\n      return record\n    },\n\n    /*--- 渲染函数 ---*/\n\n    // 渲染 vxe\n    renderVxeGrid(h) {\n      return h('vxe-grid', {\n        ref: 'vxe',\n        class: ['j-vxe-table'],\n        props: this.vxeProps,\n        on: this.vxeEvents,\n        // 作用域插槽的格式为\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    // 渲染工具栏\n    renderToolbar(h) {\n      if (this.toolbar) {\n        return h('j-vxe-toolbar', {\n          props: {\n            toolbarConfig: this.toolbarConfig,\n            excludeCode: this.excludeCode,\n            size: this.size,\n            disabled: this.disabled,\n            disabledRows: this.disabledRows,\n            selectedRowIds: this.selectedRowIds,\n          },\n          on: {\n            // 新增事件\n            add: () => this.addRows(),\n            // 保存事件\n            save: () => this.trigger('save', {\n              $table: this.$refs.vxe,\n              target: this,\n            }),\n            // 删除事件\n            remove: () => {\n              let $table = this.$refs.vxe\n              let deleteRows = this.filterNewRows(this.selectedRows)\n              // 触发删除事件\n              if (deleteRows.length > 0) {\n                let removeEvent = {deleteRows, $table, target: this}\n                if (this.asyncRemove) {\n                  // 确认删除，只有调用这个方法才会真删除\n                  removeEvent.confirmRemove = () => this.removeSelection()\n                } else {\n                  this.removeSelection()\n                }\n                this.trigger('remove', removeEvent)\n              } else {\n                this.removeSelection()\n              }\n            },\n            // 清除选择事件\n            clearSelection: this.clearSelection\n          },\n          scopedSlots: {\n            toolbarPrefix: this.$scopedSlots.toolbarPrefix,\n            toolbarSuffix: this.$scopedSlots.toolbarSuffix,\n          },\n        })\n      }\n      return null\n    },\n    // 渲染 toolbarAfter 插槽\n    renderToolbarAfterSlot() {\n      if (this.$scopedSlots['toolbarAfter']) {\n        return this.$scopedSlots['toolbarAfter']()\n      }\n      return null\n    },\n    // 渲染点击时弹出的子表\n    renderSubPopover(h) {\n      if (this.clickRowShowSubForm && this.$scopedSlots.subForm) {\n        return h('j-vxe-sub-popover', {\n          ref: 'subPopover',\n          scopedSlots: {\n            subForm: this.$scopedSlots.subForm,\n          }\n        })\n      }\n      return null\n    },\n    // 渲染点击时弹出的详细信息\n    renderDetailsModal(h) {\n      if (this.clickRowShowMainForm && this.$scopedSlots.mainForm) {\n        return h('j-vxe-details-modal', {\n          ref: 'detailsModal',\n          scopedSlots: {\n            subForm: this.clickRowShowSubForm ? this.$scopedSlots.subForm : null,\n            mainForm: this.$scopedSlots.mainForm\n          }\n        })\n      }\n    },\n    // 渲染分页器\n    renderPagination(h) {\n      if (this.pagination && Object.keys(this.pagination).length > 0) {\n        return h('j-vxe-pagination', {\n          props: {\n            size: this.size,\n            disabled: this.disabled,\n            pagination: this.pagination\n          },\n          on: {\n            change: (e) => this.trigger('pageChange', e)\n          },\n        })\n      }\n      return null\n    },\n    loadExcludeCode(){\n      if(!this.authPre || this.authPre.length==0){\n        this.excludeCode = []\n      }else{\n        let pre = this.authPre\n        if(!pre.endsWith(':')){\n          pre += ':'\n        }\n        this.excludeCode = getNoAuthCols(pre)\n      }\n    }\n\n  },\n  render(h) {\n    return h('div', {\n      class: ['j-vxe-table-box', `size--${this.size}`]\n    }, [\n      this.renderSubPopover(h),\n      this.renderDetailsModal(h),\n      this.renderToolbar(h),\n      this.renderToolbarAfterSlot(),\n      this.renderVxeGrid(h),\n      this.renderPagination(h),\n    ])\n  },\n  beforeDestroy() {\n    this.$emit('beforeDestroy')\n  }\n}\n\n// 兼容 online 的规则\nconst fooPatterns = [\n  {title: '非空', value: '*', pattern: /^.+$/},\n  {title: '6到16位数字', value: 'n6-16', pattern: /^\\d{6,16}$/},\n  {title: '6到16位任意字符', value: '*6-16', pattern: /^.{6,16}$/},\n  {title: '6到18位字母', value: 's6-18', pattern: /^[a-z|A-Z]{6,18}$/},\n  {title: '网址', value: 'url', pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/},\n  {title: '电子邮件', value: 'e', pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/},\n  {title: '手机号码', value: 'm', pattern: /^1[3456789]\\d{9}$/},\n  {title: '邮政编码', value: 'p', pattern: /^[1-9]\\d{5}$/},\n  {title: '字母', value: 's', pattern: /^[A-Z|a-z]+$/},\n  {title: '数字', value: 'n', pattern: /^-?\\d+(\\.?\\d+|\\d?)$/},\n  {title: '整数', value: 'z', pattern: /^-?\\d+$/},\n  {title: '金额', value: 'money', pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/},\n]\n\n/** 旧版handler转为新版Validator */\nfunction handlerConvertToValidator(event) {\n  const {column, rule} = event\n  return new Promise((resolve, reject) => {\n    rule.handler(event, (flag, msg) => {\n      let message = rule.message\n      if (typeof msg === 'string') {\n        message = replaceProps(column.own, msg)\n      }\n      if (flag == null) {\n        resolve(message)\n      } else if (!!flag) {\n        resolve(message)\n      } else {\n        reject(new Error(message))\n      }\n    }, this, event)\n  })\n}\n\n/** 唯一校验器 */\nfunction uniqueValidator(event) {\n  const {cellValue, column, rule} = event\n  let tableData = this.getTableData()\n  let findCount = 0\n  for (let rowData of tableData) {\n    if (rowData[column.own.key] === cellValue) {\n      if (++findCount >= 2) {\n        return Promise.reject(new Error(rule.message))\n      }\n    }\n  }\n  return Promise.resolve()\n}"],"mappings":"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","ignoreList":[]}]}