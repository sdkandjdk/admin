{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JInput.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JInput.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["var JINPUT_QUERY_LIKE = 'like';\nvar JINPUT_QUERY_NE = 'ne';\nvar JINPUT_QUERY_GE = 'ge'; //大于等于\nvar JINPUT_QUERY_LE = 'le'; //小于等于\n\nexport default {\n  name: 'JInput',\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n    type: {\n      type: String,\n      required: false,\n      default: JINPUT_QUERY_LIKE\n    },\n    placeholder: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    trim: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler() {\n        this.initVal();\n      }\n    },\n    // update-begin author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n    type: function type() {\n      this.backValue({\n        target: {\n          value: this.inputVal\n        }\n      });\n    } // update-end author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  data: function data() {\n    return {\n      inputVal: ''\n    };\n  },\n  methods: {\n    initVal: function initVal() {\n      if (!this.value) {\n        this.inputVal = '';\n      } else {\n        var text = this.value;\n        switch (this.type) {\n          case JINPUT_QUERY_LIKE:\n            //修复路由传参的值传送到jinput框被前后各截取了一位 #1336\n            if (text.indexOf(\"*\") != -1) {\n              text = text.substring(1, text.length - 1);\n            }\n            break;\n          case JINPUT_QUERY_NE:\n            text = text.substring(1);\n            break;\n          case JINPUT_QUERY_GE:\n            text = text.substring(2);\n            break;\n          case JINPUT_QUERY_LE:\n            text = text.substring(2);\n            break;\n          default:\n        }\n        this.inputVal = text;\n      }\n    },\n    backValue: function backValue(e) {\n      var text = e.target.value;\n      if (text && this.trim === true) {\n        text = text.trim();\n      }\n      switch (this.type) {\n        case JINPUT_QUERY_LIKE:\n          text = \"*\" + text + \"*\";\n          break;\n        case JINPUT_QUERY_NE:\n          text = \"!\" + text;\n          break;\n        case JINPUT_QUERY_GE:\n          text = \">=\" + text;\n          break;\n        case JINPUT_QUERY_LE:\n          text = \"<=\" + text;\n          break;\n        default:\n      }\n      this.$emit(\"change\", text);\n    }\n  }\n};",{"version":3,"names":["JINPUT_QUERY_LIKE","JINPUT_QUERY_NE","JINPUT_QUERY_GE","JINPUT_QUERY_LE","name","props","value","type","String","required","default","placeholder","trim","Boolean","watch","immediate","handler","initVal","backValue","target","inputVal","model","prop","event","data","methods","text","indexOf","substring","length","e","$emit"],"sources":["src/components/jeecg/JInput.vue"],"sourcesContent":["<template>\n  <a-input :placeholder=\"placeholder\" :value=\"inputVal\" @input=\"backValue\"></a-input>\n</template>\n\n<script>\n  const JINPUT_QUERY_LIKE = 'like';\n  const JINPUT_QUERY_NE = 'ne';\n  const JINPUT_QUERY_GE = 'ge'; //大于等于\n  const JINPUT_QUERY_LE = 'le'; //小于等于\n  \n  export default {\n    name: 'JInput',\n    props:{\n      value:{\n        type:String,\n        required:false\n      },\n      type:{\n        type:String,\n        required:false,\n        default:JINPUT_QUERY_LIKE\n      },\n      placeholder:{\n        type:String,\n        required:false,\n        default:''\n      },\n      trim:{\n        type: Boolean,\n        required: false,\n        default:false\n      }\n    },\n    watch:{\n      value:{\n        immediate:true,\n        handler:function(){\n          this.initVal();\n        }\n      },\n      // update-begin author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n      type() {\n        this.backValue({ target: { value: this.inputVal } })\n      },\n      // update-end author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    },\n    data(){\n      return {\n        inputVal:''\n      }\n    },\n    methods:{\n      initVal(){\n        if(!this.value){\n          this.inputVal = ''\n        }else{\n          let text = this.value\n          switch (this.type) {\n            case JINPUT_QUERY_LIKE:\n              //修复路由传参的值传送到jinput框被前后各截取了一位 #1336\n              if(text.indexOf(\"*\") != -1){\n                text = text.substring(1,text.length-1);\n              }\n              break;\n            case JINPUT_QUERY_NE:\n              text = text.substring(1);\n              break;\n            case JINPUT_QUERY_GE:\n              text = text.substring(2);\n              break;\n            case JINPUT_QUERY_LE:\n              text = text.substring(2);\n              break;\n            default:\n          }\n          this.inputVal = text\n        }\n      },\n      backValue(e){\n        let text = e.target.value\n        if(text && this.trim===true){\n          text = text.trim()\n        }\n        switch (this.type) {\n          case JINPUT_QUERY_LIKE:\n            text = \"*\"+text+\"*\";\n            break;\n          case JINPUT_QUERY_NE:\n            text = \"!\"+text;\n            break;\n          case JINPUT_QUERY_GE:\n            text = \">=\"+text;\n            break;\n          case JINPUT_QUERY_LE:\n            text = \"<=\"+text;\n            break;\n          default:\n        }\n        this.$emit(\"change\",text)\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AAKA,IAAAA,iBAAA;AACA,IAAAC,eAAA;AACA,IAAAC,eAAA;AACA,IAAAC,eAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAF,IAAA;MACAA,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,OAAA,EAAAV;IACA;IACAW,WAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,OAAA;IACA;IACAE,IAAA;MACAL,IAAA,EAAAM,OAAA;MACAJ,QAAA;MACAC,OAAA;IACA;EACA;EACAI,KAAA;IACAR,KAAA;MACAS,SAAA;MACAC,OAAA,WAAAA,QAAA;QACA,KAAAC,OAAA;MACA;IACA;IACA;IACAV,IAAA,WAAAA,KAAA;MACA,KAAAW,SAAA;QAAAC,MAAA;UAAAb,KAAA,OAAAc;QAAA;MAAA;IACA,EACA;EACA;EACAC,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAJ,QAAA;IACA;EACA;EACAK,OAAA;IACAR,OAAA,WAAAA,QAAA;MACA,UAAAX,KAAA;QACA,KAAAc,QAAA;MACA;QACA,IAAAM,IAAA,QAAApB,KAAA;QACA,aAAAC,IAAA;UACA,KAAAP,iBAAA;YACA;YACA,IAAA0B,IAAA,CAAAC,OAAA;cACAD,IAAA,GAAAA,IAAA,CAAAE,SAAA,IAAAF,IAAA,CAAAG,MAAA;YACA;YACA;UACA,KAAA5B,eAAA;YACAyB,IAAA,GAAAA,IAAA,CAAAE,SAAA;YACA;UACA,KAAA1B,eAAA;YACAwB,IAAA,GAAAA,IAAA,CAAAE,SAAA;YACA;UACA,KAAAzB,eAAA;YACAuB,IAAA,GAAAA,IAAA,CAAAE,SAAA;YACA;UACA;QACA;QACA,KAAAR,QAAA,GAAAM,IAAA;MACA;IACA;IACAR,SAAA,WAAAA,UAAAY,CAAA;MACA,IAAAJ,IAAA,GAAAI,CAAA,CAAAX,MAAA,CAAAb,KAAA;MACA,IAAAoB,IAAA,SAAAd,IAAA;QACAc,IAAA,GAAAA,IAAA,CAAAd,IAAA;MACA;MACA,aAAAL,IAAA;QACA,KAAAP,iBAAA;UACA0B,IAAA,SAAAA,IAAA;UACA;QACA,KAAAzB,eAAA;UACAyB,IAAA,SAAAA,IAAA;UACA;QACA,KAAAxB,eAAA;UACAwB,IAAA,UAAAA,IAAA;UACA;QACA,KAAAvB,eAAA;UACAuB,IAAA,UAAAA,IAAA;UACA;QACA;MACA;MACA,KAAAK,KAAA,WAAAL,IAAA;IACA;EACA;AACA","ignoreList":[]}]}