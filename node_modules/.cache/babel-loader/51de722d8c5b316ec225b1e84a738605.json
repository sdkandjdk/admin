{"remainingRequest":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\work-25\\知识库系统\\admin\\src\\views\\system\\modules\\DeptRoleUserModal.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\work-25\\知识库系统\\admin\\src\\views\\system\\modules\\DeptRoleUserModal.vue","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { httpAction, getAction } from '@/api/manage';\nimport JEllipsis from '@/components/jeecg/JEllipsis';\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil';\nexport default {\n  name: 'DeptRoleUserModal',\n  components: {\n    JEllipsis: JEllipsis\n  },\n  data: function data() {\n    return {\n      currentDeptId: \"\",\n      title: \"部门角色分配\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {},\n      url: {\n        add: \"/sys/sysDepartRole/deptRoleUserAdd\",\n        getDeptRoleList: \"/sys/sysDepartRole/getDeptRoleList\",\n        getDeptRoleByUserId: \"/sys/sysDepartRole/getDeptRoleByUserId\"\n      },\n      designNameOption: [],\n      userId: \"\",\n      newRoleId: \"\",\n      oldRoleId: \"\",\n      designNameValue: [],\n      desformList: []\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add(record, departId) {\n      this.userId = record.id;\n      this.currentDeptId = departId;\n      this.loadDesformList();\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      getAction(this.url.getDeptRoleByUserId, {\n        userId: this.userId,\n        departId: this.currentDeptId\n      }).then(function (res) {\n        if (res.success) {\n          var designName = [];\n          var _iterator = _createForOfIteratorHelper(res.result),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n              designName.push(value.droleId);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          _this.oldRoleId = designName.join(\",\");\n          _this.designNameValue = designName;\n          _this.newRoleId = designName.join(\",\");\n        }\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this;\n      // 触发表单验证\n      that.confirmLoading = true;\n      var httpurl = this.url.add;\n      var method = 'post';\n      var formData = Object.assign(this.model, {});\n      //时间格式化\n      formData.userId = this.userId;\n      formData.newRoleId = this.newRoleId;\n      formData.oldRoleId = this.oldRoleId;\n      httpAction(httpurl, formData, method).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.$emit('reload');\n          that.$emit('ok');\n        } else {\n          that.$message.warning(res.message);\n        }\n      }).finally(function () {\n        that.confirmLoading = false;\n        that.close();\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.designNameOption = [];\n      this.designNameValue = [];\n      this.close();\n    },\n    designNameChange: function designNameChange(selectedValue) {\n      this.newRoleId = selectedValue.join(\",\");\n    },\n    checkALL: function checkALL() {\n      var designName = [];\n      var _iterator2 = _createForOfIteratorHelper(this.desformList),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var value = _step2.value;\n          designName.push(value.id);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this.designNameValue = designName;\n      this.newRoleId = designName.join(\",\");\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.designNameValue = [];\n      this.newRoleId = \"\";\n    },\n    /** 加载desform */loadDesformList: function loadDesformList() {\n      var _this2 = this;\n      getAction(this.url.getDeptRoleList, {\n        departId: this.currentDeptId,\n        userId: this.userId\n      }).then(function (res) {\n        if (res.success) {\n          _this2.desformList = res.result;\n          var designName = [];\n          var _iterator3 = _createForOfIteratorHelper(_this2.desformList),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var value = _step3.value;\n              designName.push({\n                value: value.id,\n                text: value.roleName\n              });\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n          _this2.designNameOption = designName;\n        }\n      });\n    }\n  }\n};",{"version":3,"names":["httpAction","getAction","JEllipsis","initDictOptions","name","components","data","currentDeptId","title","visible","model","labelCol","xs","span","sm","wrapperCol","confirmLoading","form","$form","createForm","validatorRules","url","add","getDeptRoleList","getDeptRoleByUserId","designNameOption","userId","newRoleId","oldRoleId","designNameValue","desformList","created","methods","record","departId","id","loadDesformList","edit","_this","resetFields","Object","assign","then","res","success","designName","_iterator","_createForOfIteratorHelper","result","_step","s","n","done","value","push","droleId","err","e","f","join","close","$emit","handleSubmit","that","httpurl","method","formData","$message","message","warning","finally","handleCancel","designNameChange","selectedValue","checkALL","_iterator2","_step2","cancelCheckALL","_this2","_iterator3","_step3","text","roleName"],"sources":["src/views/system/modules/DeptRoleUserModal.vue"],"sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=600\n    placement=\"right\"\n    :closable=\"true\"\n    @close=\"close\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n\n    <a-spin :spinning=\"confirmLoading\">\n\n      <a-form :form=\"form\" v-if=\"designNameOption.length>0\">\n        <a-form-item label=''>\n          <a-col :xl=\"24\" :lg=\"24\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n            <a-card :style=\"{ marginTop: '12px',height:'auto' }\">\n              <a-checkbox-group @change=\"designNameChange\" v-model=\"designNameValue\" style=\"width: 100%\">\n                <a-row>\n                  <template v-for=\"(des) in designNameOption\">\n                    <a-col :span=\"6\">\n                      <a-checkbox :value=\"des.value\">{{ des.text }}</a-checkbox>\n                    </a-col>\n                  </template>\n                </a-row>\n              </a-checkbox-group>\n            </a-card>\n          </a-col>\n        </a-form-item>\n      </a-form>\n      <div v-else><h3>无可配置角色!</h3></div>\n    </a-spin>\n    <div class=\"drawer-bootom-button\">\n      <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"checkALL\">全部勾选</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\n        </a-menu>\n        <a-button>\n          操作 <a-icon type=\"up\" />\n        </a-button>\n      </a-dropdown>\n      <a-popconfirm  title=\"确定放弃编辑？\" @confirm=\"close\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit(true)\" type=\"primary\">保存</a-button>\n    </div>\n  </a-drawer>\n</template>\n\n<script>\n  import {httpAction, getAction} from '@/api/manage'\n  import  JEllipsis  from '@/components/jeecg/JEllipsis'\n  import {initDictOptions} from '@/components/dict/JDictSelectUtil'\n\n  export default {\n    name: 'DeptRoleUserModal',\n    components: {\n      JEllipsis\n    },\n    data() {\n      return {\n        currentDeptId:\"\",\n        title: \"部门角色分配\",\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n        validatorRules: {},\n        url: {\n          add: \"/sys/sysDepartRole/deptRoleUserAdd\",\n          getDeptRoleList:\"/sys/sysDepartRole/getDeptRoleList\",\n          getDeptRoleByUserId:\"/sys/sysDepartRole/getDeptRoleByUserId\"\n        },\n        designNameOption: [],\n        userId: \"\",\n        newRoleId:\"\",\n        oldRoleId:\"\",\n        designNameValue:[],\n        desformList: [],\n      }\n    },\n    created() {\n\n    },\n    methods: {\n      add(record,departId) {\n        this.userId = record.id;\n        this.currentDeptId = departId;\n        this.loadDesformList();\n        this.edit({});\n      },\n      edit(record) {\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        this.visible = true;\n        getAction(this.url.getDeptRoleByUserId,{userId:this.userId,departId:this.currentDeptId}).then((res) => {\n          if (res.success) {\n            var designName = [];\n            for (let value of res.result) {\n              designName.push(value.droleId)\n            }\n            this.oldRoleId=designName.join(\",\");\n            this.designNameValue = designName;\n            this.newRoleId = designName.join(\",\");\n          }\n        });\n      },\n      close() {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleSubmit() {\n        const that = this;\n        // 触发表单验证\n        that.confirmLoading = true;\n        let  httpurl = this.url.add;\n        let  method = 'post';\n        let formData = Object.assign(this.model, {});\n        //时间格式化\n        formData.userId = this.userId;\n        formData.newRoleId=this.newRoleId;\n        formData.oldRoleId=this.oldRoleId;\n        httpAction(httpurl, formData, method).then((res) => {\n          if (res.success) {\n            that.$message.success(res.message);\n            that.$emit('reload');\n            that.$emit('ok');\n          } else {\n            that.$message.warning(res.message);\n          }\n        }).finally(() => {\n          that.confirmLoading = false;\n          that.close();\n        })\n      },\n      handleCancel() {\n        this.designNameOption=[];\n        this.designNameValue=[];\n        this.close()\n      },\n      designNameChange(selectedValue) {\n        this.newRoleId=selectedValue.join(\",\");\n      },\n      checkALL(){\n        var designName = [];\n        for (let value of this.desformList) {\n          designName.push(\n            value.id\n          )\n        }\n        this.designNameValue = designName;\n        this.newRoleId=designName.join(\",\");\n      },\n      cancelCheckALL(){\n        this.designNameValue=[];\n        this.newRoleId=\"\";\n      },\n      /** 加载desform */\n      loadDesformList() {\n        getAction(this.url.getDeptRoleList, { departId: this.currentDeptId, userId:this.userId }).then((res) => {\n          if (res.success) {\n            this.desformList = res.result\n            var designName = [];\n            for (let value of this.desformList) {\n              designName.push({\n                value: value.id,\n                text: value.roleName,\n              })\n            }\n            this.designNameOption = designName;\n          }\n        });\n      },\n    }\n\n  }\n</script>\n\n<style scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n</style>"],"mappings":"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","ignoreList":[]}]}