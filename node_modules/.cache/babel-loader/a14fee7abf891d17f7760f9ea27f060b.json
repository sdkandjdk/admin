{"remainingRequest":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\知识库系统\\admin\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\知识库系统\\admin\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\nimport { JVXETypes } from '@comp/jeecg/JVxeTable/index';\nexport default {\n  name: 'JVxeSelectCell',\n  mixins: [JVxeCellMixins],\n  computed: {\n    selectProps: function selectProps() {\n      var props = _objectSpread({}, this.cellProps);\n      // 判断select是否允许输入\n      var _this$originColumn = this.originColumn,\n        allowSearch = _this$originColumn.allowSearch,\n        allowInput = _this$originColumn.allowInput;\n      if (allowInput === true || allowSearch === true) {\n        props['showSearch'] = true;\n      }\n      return props;\n    }\n  },\n  created: function created() {\n    var multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi];\n    var search = [JVXETypes.selectSearch, JVXETypes.sel_search];\n    if (multiple.includes(this.$type)) {\n      // 处理多选\n      var props = this.originColumn.props || {};\n      props['mode'] = 'multiple';\n      props['maxTagCount'] = 1;\n      this.$set(this.originColumn, 'props', props);\n    } else if (search.includes(this.$type)) {\n      // 处理搜索\n      this.$set(this.originColumn, 'allowSearch', true);\n    }\n  },\n  methods: {\n    /** 处理blur失去焦点事件 */handleBlur: function handleBlur(value) {\n      var _this$originColumn2 = this.originColumn,\n        allowInput = _this$originColumn2.allowInput,\n        options = _this$originColumn2.options;\n      if (allowInput === true) {\n        // 删除无用的因搜索（用户输入）而创建的项\n        if (typeof value === 'string') {\n          var indexes = [];\n          options.forEach(function (option, index) {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              delete option.searchAdd;\n            } else if (option.searchAdd === true) {\n              indexes.push(index);\n            }\n          });\n          // 翻转删除数组中的项\n          var _iterator = _createForOfIteratorHelper(indexes.reverse()),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var index = _step.value;\n              options.splice(index, 1);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n      this.handleBlurCommon(value);\n    },\n    /** 用于搜索下拉框中的内容 */handleSelectFilterOption: function handleSelectFilterOption(input, option) {\n      var _this$originColumn3 = this.originColumn,\n        allowSearch = _this$originColumn3.allowSearch,\n        allowInput = _this$originColumn3.allowInput;\n      if (allowSearch === true || allowInput === true) {\n        //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n      }\n      return true;\n    },\n    /** select 搜索时的事件，用于动态添加options */handleSearchSelect: function handleSearchSelect(value) {\n      var _this$originColumn4 = this.originColumn,\n        allowSearch = _this$originColumn4.allowSearch,\n        allowInput = _this$originColumn4.allowInput,\n        options = _this$originColumn4.options;\n      if (allowSearch !== true && allowInput === true) {\n        // 是否找到了对应的项，找不到则添加这一项\n        var flag = false;\n        var _iterator2 = _createForOfIteratorHelper(options),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var option = _step2.value;\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              flag = true;\n              break;\n            }\n          }\n          // !!value ：不添加空值\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        if (!flag && !!value) {\n          // searchAdd 是否是通过搜索添加的\n          options.push({\n            title: value,\n            value: value,\n            searchAdd: true\n          });\n        }\n      }\n    }\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    aopEvents: {\n      editActived: function editActived(event) {\n        dispatchEvent.call(this, event, 'ant-select');\n      }\n    },\n    translate: {\n      enabled: true\n    },\n    getValue: function getValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(',');\n      } else {\n        return value;\n      }\n    },\n    setValue: function setValue(value) {\n      var col = this.column.own,\n        $table = this.params.$table;\n      // 判断是否是多选\n      if ((col.props || {})['mode'] === 'multiple') {\n        $table.$set(col.props, 'maxTagCount', 1);\n      }\n      if (value != null && value !== '') {\n        if (typeof value === 'string') {\n          return value === '' ? [] : value.split(',');\n        }\n        return value;\n      } else {\n        return undefined;\n      }\n    }\n  }\n};",{"version":3,"names":["JVxeCellMixins","dispatchEvent","JVXETypes","name","mixins","computed","selectProps","props","_objectSpread","cellProps","_this$originColumn","originColumn","allowSearch","allowInput","created","multiple","selectMultiple","list_multi","search","selectSearch","sel_search","includes","$type","$set","methods","handleBlur","value","_this$originColumn2","options","indexes","forEach","option","index","toLocaleString","searchAdd","push","_iterator","_createForOfIteratorHelper","reverse","_step","s","n","done","splice","err","e","f","handleBlurCommon","handleSelectFilterOption","input","_this$originColumn3","componentOptions","children","text","toLowerCase","indexOf","handleSearchSelect","_this$originColumn4","flag","_iterator2","_step2","title","enhanced","aopEvents","editActived","event","call","translate","enabled","getValue","Array","isArray","join","setValue","col","column","own","$table","params","split","undefined"],"sources":["src/components/jeecg/JVxeTable/components/cells/JVxeSelectCell.vue"],"sourcesContent":["<template>\n  <a-select\n    ref=\"select\"\n    :value=\"innerValue\"\n    allowClear\n    :filterOption=\"handleSelectFilterOption\"\n    v-bind=\"selectProps\"\n    style=\"width: 100%;\"\n    @blur=\"handleBlur\"\n    @change=\"handleChangeCommon\"\n    @search=\"handleSearchSelect\"\n  >\n\n    <template v-for=\"option of originColumn.options\">\n      <a-select-option :key=\"option.value\" :value=\"option.value\" :disabled=\"option.disabled\">\n        <span>{{option.text || option.label || option.title|| option.value}}</span>\n      </a-select-option>\n    </template>\n\n  </a-select>\n</template>\n\n<script>\n  import JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n  import { JVXETypes } from '@comp/jeecg/JVxeTable/index'\n\n  export default {\n    name: 'JVxeSelectCell',\n    mixins: [JVxeCellMixins],\n    computed: {\n      selectProps() {\n        let props = {...this.cellProps}\n        // 判断select是否允许输入\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowInput === true || allowSearch === true) {\n          props['showSearch'] = true\n        }\n        return props\n      },\n    },\n    created() {\n      let multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi]\n      let search = [JVXETypes.selectSearch, JVXETypes.sel_search]\n      if (multiple.includes(this.$type)) {\n        // 处理多选\n        let props = this.originColumn.props || {}\n        props['mode'] = 'multiple'\n        props['maxTagCount'] = 1\n        this.$set(this.originColumn, 'props', props)\n      } else if (search.includes(this.$type)) {\n        // 处理搜索\n        this.$set(this.originColumn, 'allowSearch', true)\n      }\n    },\n    methods: {\n\n      /** 处理blur失去焦点事件 */\n      handleBlur(value) {\n        let {allowInput, options} = this.originColumn\n\n        if (allowInput === true) {\n          // 删除无用的因搜索（用户输入）而创建的项\n          if (typeof value === 'string') {\n            let indexes = []\n            options.forEach((option, index) => {\n              if (option.value.toLocaleString() === value.toLocaleString()) {\n                delete option.searchAdd\n              } else if (option.searchAdd === true) {\n                indexes.push(index)\n              }\n            })\n            // 翻转删除数组中的项\n            for (let index of indexes.reverse()) {\n              options.splice(index, 1)\n            }\n          }\n        }\n\n        this.handleBlurCommon(value)\n      },\n\n      /** 用于搜索下拉框中的内容 */\n      handleSelectFilterOption(input, option) {\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowSearch === true || allowInput === true) {\n          //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n          return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        }\n        return true\n      },\n\n      /** select 搜索时的事件，用于动态添加options */\n      handleSearchSelect(value) {\n        let {allowSearch, allowInput, options} = this.originColumn\n\n        if (allowSearch !== true && allowInput === true) {\n          // 是否找到了对应的项，找不到则添加这一项\n          let flag = false\n          for (let option of options) {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              flag = true\n              break\n            }\n          }\n          // !!value ：不添加空值\n          if (!flag && !!value) {\n            // searchAdd 是否是通过搜索添加的\n            options.push({title: value, value: value, searchAdd: true})\n          }\n\n        }\n      },\n\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      aopEvents: {\n        editActived(event) {\n          dispatchEvent.call(this, event, 'ant-select')\n        },\n      },\n      translate: {enabled: true},\n      getValue(value) {\n        if (Array.isArray(value)) {\n          return value.join(',')\n        } else {\n          return value\n        }\n      },\n      setValue(value) {\n        let {column: {own: col}, params: {$table}} = this\n        // 判断是否是多选\n        if ((col.props || {})['mode'] === 'multiple') {\n          $table.$set(col.props, 'maxTagCount', 1)\n        }\n        if (value != null && value !== '') {\n          if (typeof value === 'string') {\n            return value === '' ? [] : value.split(',')\n          }\n          return value\n        } else {\n          return undefined\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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","ignoreList":[]}]}