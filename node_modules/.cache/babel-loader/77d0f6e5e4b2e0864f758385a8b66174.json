{"remainingRequest":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!E:\\work-25\\知识库系统\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\work-25\\知识库系统\\admin\\src\\components\\jeecg\\JVxeTable\\install.js","dependencies":[{"path":"E:\\work-25\\知识库系统\\admin\\src\\components\\jeecg\\JVxeTable\\install.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport Vue from 'vue';\nimport { getEventPath } from '@/utils/util';\nimport JVxeTable, { AllCells, JVXETypes } from './index';\nimport './less/j-vxe-table.less';\n// 引入 vxe-table\nimport 'xe-utils';\nimport VXETable, { Grid } from 'vxe-table';\nimport VXETablePluginAntd from 'vxe-table-plugin-antd';\nimport 'vxe-table/lib/index.css';\nimport 'vxe-table-plugin-antd/dist/style.css';\nimport { getEnhancedMixins, installAllCell, installOneCell } from '@/components/jeecg/JVxeTable/utils/cellUtils';\n\n// VxeGrid所有的方法映射\nvar VxeGridMethodsMap = {};\nObject.keys(Grid.methods).forEach(function (key) {\n  // 使用eval可以避免闭包（但是要注意不要写es6的代码）\n  VxeGridMethodsMap[key] = eval(\"(function(){return this.$refs.vxe.\".concat(key, \".apply(this.$refs.vxe,arguments)})\"));\n});\n// 将Grid所有的方法都映射（继承）到JVxeTable上\nJVxeTable.methods = Object.assign({}, VxeGridMethodsMap, JVxeTable.methods);\n\n// VXETable 全局配置\nvar VXETableSettings = {\n  // z-index 起始值\n  zIndex: 1000,\n  table: {\n    validConfig: {\n      // 校验提示方式：强制使用tooltip\n      message: 'tooltip'\n    }\n  }\n};\n\n// 执行注册方法\nVue.use(VXETable, VXETableSettings);\nVXETable.use(VXETablePluginAntd);\nVue.component(JVxeTable.name, JVxeTable);\n\n// 注册自定义组件\ninstallAllCell(VXETable);\n\n// 添加事件拦截器 event.clearActived\n// 比如点击了某个组件的弹出层面板之后，此时被激活单元格不应该被自动关闭，通过返回 false 可以阻止默认的行为。\nVXETable.interceptor.add('event.clearActived', function (params, event, target) {\n  // 获取组件增强\n  var col = params.column.own;\n  var interceptor = getEnhancedMixins(col.$type, 'interceptor');\n  // 执行增强\n  var flag = interceptor['event.clearActived'].apply(this, arguments);\n  if (flag === false) {\n    return false;\n  }\n  var path = getEventPath(event);\n  var _iterator = _createForOfIteratorHelper(path),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var p = _step.value;\n      var className = p.className || '';\n      className = typeof className === 'string' ? className : className.toString();\n\n      /* --- 特殊处理以下组件，点击以下标签时不清空编辑状态 --- */\n\n      // 点击的标签是JInputPop\n      if (className.includes('j-input-pop')) {\n        return false;\n      }\n      // 点击的标签是JPopup的弹出层、部门选择、用户选择\n      if (className.includes('j-popup-modal') || className.includes('j-depart-select-modal') || className.includes('j-user-select-modal')) {\n        return false;\n      }\n      // 执行增强\n      var _flag = interceptor['event.clearActived.className'].apply(this, [className].concat(Array.prototype.slice.call(arguments)));\n      if (_flag === false) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n});\n\n/**\n * 注册map\n * @param type 类型\n * @param cell 输入组件\n * @param span 显示组件，可空，默认为 JVxeNormalCell 组件\n */\nexport function mapCell(type, cell, span) {\n  var cells = _defineProperty({}, type, cell);\n  if (span) {\n    cells[type + ':span'] = span;\n  }\n  return cells;\n}\n\n/**\n * 注册自定义组件\n *\n * @param type 类型\n * @param cell 输入组件\n * @param span 显示组件，可空，默认为 JVxeNormalCell 组件\n */\nexport function installCell(type, cell, span) {\n  var exclude = [JVXETypes.rowNumber, JVXETypes.rowCheckbox, JVXETypes.rowRadio, JVXETypes.rowExpand, JVXETypes.rowDragSort];\n  if (exclude.includes(type)) {\n    throw new Error(\"\\u3010installCell\\u3011\\u4E0D\\u80FD\\u4F7F\\u7528\\\"\".concat(type, \"\\\"\\u4F5C\\u4E3A\\u7EC4\\u4EF6\\u7684type\\uFF0C\\u56E0\\u4E3A\\u8FD9\\u662F\\u5173\\u952E\\u5B57\\u3002\"));\n  }\n  Object.assign(AllCells, mapCell(type, cell, span));\n  installOneCell(VXETable, type);\n}",{"version":3,"names":["Vue","getEventPath","JVxeTable","AllCells","JVXETypes","VXETable","Grid","VXETablePluginAntd","getEnhancedMixins","installAllCell","installOneCell","VxeGridMethodsMap","Object","keys","methods","forEach","key","eval","concat","assign","VXETableSettings","zIndex","table","validConfig","message","use","component","name","interceptor","add","params","event","target","col","column","own","$type","flag","apply","arguments","path","_iterator","_createForOfIteratorHelper","_step","s","n","done","p","value","className","toString","includes","Array","prototype","slice","call","err","e","f","mapCell","type","cell","span","cells","_defineProperty","installCell","exclude","rowNumber","rowCheckbox","rowRadio","rowExpand","rowDragSort","Error"],"sources":["E:/work-25/知识库系统/admin/src/components/jeecg/JVxeTable/install.js"],"sourcesContent":["import Vue from 'vue'\nimport { getEventPath } from '@/utils/util'\nimport JVxeTable, { AllCells, JVXETypes } from './index'\nimport './less/j-vxe-table.less'\n// 引入 vxe-table\nimport 'xe-utils'\nimport VXETable, { Grid } from 'vxe-table'\nimport VXETablePluginAntd from 'vxe-table-plugin-antd'\nimport 'vxe-table/lib/index.css'\nimport 'vxe-table-plugin-antd/dist/style.css'\nimport { getEnhancedMixins, installAllCell, installOneCell } from '@/components/jeecg/JVxeTable/utils/cellUtils'\n\n// VxeGrid所有的方法映射\nconst VxeGridMethodsMap = {}\nObject.keys(Grid.methods).forEach(key => {\n  // 使用eval可以避免闭包（但是要注意不要写es6的代码）\n  VxeGridMethodsMap[key] = eval(`(function(){return this.$refs.vxe.${key}.apply(this.$refs.vxe,arguments)})`)\n})\n// 将Grid所有的方法都映射（继承）到JVxeTable上\nJVxeTable.methods = Object.assign({}, VxeGridMethodsMap, JVxeTable.methods)\n\n// VXETable 全局配置\nconst VXETableSettings = {\n  // z-index 起始值\n  zIndex: 1000,\n  table: {\n    validConfig: {\n      // 校验提示方式：强制使用tooltip\n      message: 'tooltip'\n    }\n  }\n}\n\n// 执行注册方法\nVue.use(VXETable, VXETableSettings)\nVXETable.use(VXETablePluginAntd)\nVue.component(JVxeTable.name, JVxeTable)\n\n// 注册自定义组件\ninstallAllCell(VXETable)\n\n// 添加事件拦截器 event.clearActived\n// 比如点击了某个组件的弹出层面板之后，此时被激活单元格不应该被自动关闭，通过返回 false 可以阻止默认的行为。\nVXETable.interceptor.add('event.clearActived', function (params, event, target) {\n  // 获取组件增强\n  let col = params.column.own\n  const interceptor = getEnhancedMixins(col.$type, 'interceptor')\n  // 执行增强\n  let flag = interceptor['event.clearActived'].apply(this, arguments)\n  if (flag === false) {\n    return false\n  }\n\n  let path = getEventPath(event)\n  for (let p of path) {\n    let className = p.className || ''\n    className = typeof className === 'string' ? className : className.toString()\n\n    /* --- 特殊处理以下组件，点击以下标签时不清空编辑状态 --- */\n\n    // 点击的标签是JInputPop\n    if (className.includes('j-input-pop')) {\n      return false\n    }\n    // 点击的标签是JPopup的弹出层、部门选择、用户选择\n    if (className.includes('j-popup-modal') || className.includes('j-depart-select-modal') || className.includes('j-user-select-modal')) {\n      return false\n    }\n    // 执行增强\n    let flag = interceptor['event.clearActived.className'].apply(this, [className, ...arguments])\n    if (flag === false) {\n      return false\n    }\n  }\n})\n\n/**\n * 注册map\n * @param type 类型\n * @param cell 输入组件\n * @param span 显示组件，可空，默认为 JVxeNormalCell 组件\n */\nexport function mapCell(type, cell, span) {\n  let cells = {[type]: cell}\n  if (span) {\n    cells[type + ':span'] = span\n  }\n  return cells\n}\n\n/**\n * 注册自定义组件\n *\n * @param type 类型\n * @param cell 输入组件\n * @param span 显示组件，可空，默认为 JVxeNormalCell 组件\n */\nexport function installCell(type, cell, span) {\n  let exclude = [JVXETypes.rowNumber, JVXETypes.rowCheckbox, JVXETypes.rowRadio, JVXETypes.rowExpand, JVXETypes.rowDragSort]\n  if (exclude.includes(type)) {\n    throw new Error(`【installCell】不能使用\"${type}\"作为组件的type，因为这是关键字。`)\n  }\n  Object.assign(AllCells, mapCell(type, cell, span))\n  installOneCell(VXETable, type)\n}\n"],"mappings":"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","ignoreList":[]}]}