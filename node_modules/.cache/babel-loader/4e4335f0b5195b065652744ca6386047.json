{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\views\\km\\search\\DocSearch.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\views\\km\\search\\DocSearch.vue","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1709701116791}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { ajaxGetDictItems, getDictItemsFromCache } from '@/api/api';\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { httpPostAction, getAction, downloadFileName, getActionPDF } from \"../../../api/manage\";\nimport { AJeecgListMixin } from '@/mixins/AJeecgListMixin';\nimport Vue from \"vue\";\nimport IframePageContent from \"../../../components/layouts/IframeFReportView\";\nimport SearchHeader from '../Common/SearchHeader';\nexport default {\n  name: \"docSearch\",\n  mixins: [AJeecgListMixin],\n  components: {\n    IframePageContent: IframePageContent,\n    SearchHeader: SearchHeader\n  },\n  data: function data() {\n    return {\n      pageTitle: \"检索结果\",\n      boolCheckChange: true,\n      knowledgeTitle: \"知识专题\",\n      checkedArray: [],\n      topicCodesTree: {\n        checked: [],\n        halfChecked: []\n      },\n      topicCodes: \"\",\n      // businessTypes:\"1\",\n      boolSelect: false,\n      treeData: [],\n      confirmLoading: false,\n      PDFurl: '',\n      visible: false,\n      pdfLoading: false,\n      pdfShow: true,\n      isorter: {\n        column: '_score',\n        order: 'desc'\n      },\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      checkboxVuale: [],\n      title: \"预览\",\n      width: 900,\n      // hotTopicReportList: [],\n      defaultBusinessTypeList: [],\n      docDataSource: [],\n      loadedRatio: 0,\n      isSearchResult: false,\n      filterOptions: [],\n      //要filter的字段\n      filterDictCode: 'km_dict_source',\n      //表头\n      columns: [],\n      //列设置\n      settingColumns: [],\n      //列定义\n      defColumns: [{\n        title: '#',\n        dataIndex: '',\n        key: 'rowIndex',\n        width: 60,\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'indexNum'\n        }\n      }, {\n        title: '标题',\n        align: \"left\",\n        dataIndex: 'title',\n        scopedSlots: {\n          customRender: 'docTitle'\n        }\n      }, {\n        title: '分类',\n        align: \"left\",\n        dataIndex: 'category_dictText',\n        width: 100,\n        filters: [],\n        customCell: function customCell() {\n          return {\n            style: {\n              'max-width': '6em',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n              textOverflow: 'ellipsis'\n            }\n          };\n        }\n      }, {\n        title: '标签',\n        align: \"left\",\n        dataIndex: 'businessType_dictText',\n        customCell: function customCell() {\n          return {\n            style: {\n              'max-width': '6em',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n              textOverflow: 'ellipsis'\n            }\n          };\n        }\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        align: \"center\",\n        fixed: \"right\",\n        width: 80,\n        scopedSlots: {\n          filterDropdown: 'filterDropdown',\n          filterIcon: 'filterIcon',\n          customRender: 'action'\n        }\n      }],\n      options: [],\n      content: '',\n      checkedValues: '',\n      itemList: [],\n      // 要加载多选的字典\n      dictCode: 'km_dict_category',\n      url: {\n        rootList: \"/sys/category/loadTreeRoot\",\n        list: '/KM/kmDoc/searchDoc',\n        hotTopicReport: '/KM/kmSearchRecord/hotTopicReport',\n        defaultBusinessTypeList: '/KM/HomePage/listBusinessType',\n        previewKmDoc: '/KM/kmDoc/previewKmDoc',\n        downloadKmDoc: \"/KM/kmDoc/downloadKmDoc\",\n        addFavouriteKmDoc: '/KM/kmDocFavourite/add',\n        delFavouriteKmDoc: '/KM/kmDocFavourite/delete'\n      }\n    };\n  },\n  created: function created() {\n    this.loadTree();\n    // 调用初始化自定义table列表函数\n    this.initColumns();\n    this.initFilterDict();\n\n    //设置全局token\n    Vue.prototype.token = Vue.ls.get(ACCESS_TOKEN);\n    window._CONFIG['token'] = Vue.prototype.token;\n    // this.hotTopicReportFun();\n    this.initDict();\n    var params = this.$route.params;\n    console.log(\"params：\", params);\n    this.topicCodes = params.topicCodes;\n    this.businessTypes = params.businessTypes;\n\n    // if(this.businessTypes)\n    //   this.loadDefaultBusinessTypeFunc()\n\n    if (this.topicCodes == null) {\n      if (Object.keys(params).length > 0) {\n        this.boolCheckChange = params.boolCheckChange;\n        this.content = params.content;\n        var replaceTitle = this.content;\n        if (replaceTitle) replaceTitle = replaceTitle.replace(/，/g, ',');\n        // replaceTitle = replaceTitle.replace(/\\[/g, '%5B');\n        // replaceTitle = replaceTitle.replace(/\\]/g, '%5D');\n        if (this.boolCheckChange) {\n          params[\"content\"] = replaceTitle;\n        } else {\n          delete params[\"content\"];\n          delete params[\"boolCheckChange\"];\n        }\n        params[\"title\"] = replaceTitle;\n        params[\"keywords\"] = replaceTitle;\n        params[\"advSearchFlag\"] = 0;\n        if (params.category !== \"\" && params.category != null) {\n          this.checkboxVuale = params.category.split(\",\");\n          this.checkedValues = params.category;\n        }\n        this.searchFun(params);\n      }\n    } else {\n      this.topicCodesTree = params.topicCodesTree;\n      this.knowledgeTitle = params.knowledgeTitle;\n      var param = {};\n      param[\"topicCodes\"] = this.topicCodes;\n      this.searchFun(param);\n    }\n  },\n  watch: {\n    loadedRatio: {\n      handler: function handler(newVal, oldVal) {\n        console.log(newVal);\n        if (newVal === 1) {\n          this.pdfLoading = false;\n        }\n      }\n    }\n  },\n  methods: {\n    // 加载filter字段选项\n    initFilterDict: function initFilterDict() {\n      var _this = this;\n      //优先从缓存中读取字典配置\n      // if (getDictItemsFromCache(this.dictCode)) {\n      var options = getDictItemsFromCache(this.filterDictCode);\n      if (options) {\n        options.forEach(function (item, index) {\n          var filterOption = {};\n          filterOption.text = item.title;\n          filterOption.value = item.value;\n          _this.filterOptions.push(filterOption);\n        });\n        console.log(this.filterOptions);\n        this.defColumns[2].filters = this.filterOptions;\n        return;\n      }\n\n      //根据字典Code, 初始化字典数组\n      ajaxGetDictItems(this.filterDictCode, null).then(function (res) {\n        if (res.success) {\n          var _options = res.result;\n          console.log(_options);\n          _options.forEach(function (item, index) {\n            var filterOption = {};\n            filterOption.text = item.title;\n            filterOption.value = item.value;\n            _this.filterOptions.push(filterOption);\n          });\n          _this.defColumns[2].filters = _this.filterOptions;\n        }\n      });\n    },\n    // 是否全文检索\n    onCheckChange: function onCheckChange(e) {\n      this.boolCheckChange = e.target.checked;\n      console.log(\"checked = \".concat(e.target.checked));\n    },\n    // 加载树节点，获取树数据\n    loadTree: function loadTree() {\n      var _this2 = this;\n      var params = {\n        async: false,\n        pcode: \"\"\n      };\n      getAction(this.url.rootList, params).then(function (res) {\n        if (res.success) {\n          if (res.result && res.result.length > 0) {\n            _this2.treeData = res.result;\n          } else {\n            _this2.treeData = [];\n          }\n        } else {\n          _this2.$message.warning(res.message);\n        }\n      }).finally(function () {});\n    },\n    // 查找一个节点的所有父节点\n    familyTree: function familyTree(treeData, id) {\n      var arrTree = [];\n      var forFn = function forFn(arr, key) {\n        for (var i = 0; i < arr.length; i++) {\n          var item = arr[i];\n          if (item.key === key) {\n            if (item.parentId === \"0\") {\n              break;\n            } else {\n              console.log(\"父节点\", item.parentId);\n              arrTree.push(item.parentId);\n              forFn(treeData, item.parentId);\n            }\n            break;\n          } else {\n            if (item.children != null) {\n              forFn(item.children, key);\n            }\n          }\n        }\n      };\n      forFn(treeData, id);\n      return arrTree;\n    },\n    // 树节点选择触发\n    onCheck: function onCheck(checkedKeys, checkedNodes) {\n      if (checkedKeys.checked.length > 1) {\n        var checkKeys = checkedKeys.checked[1];\n        checkedKeys.checked = [];\n        checkedKeys.checked.push(checkKeys);\n        var checkNodesTitle = checkedNodes.checkedNodes[1];\n        checkedNodes.checkedNodes = [];\n        checkedNodes.checkedNodes.push(checkNodesTitle);\n      }\n      console.log(\"checkedKeys\", checkedKeys);\n      console.log(\"checkedNodes\", checkedNodes);\n      var temp = new Array();\n      var tempArray = new Array();\n      this.checkedArray = checkedKeys.checked;\n      for (var i = 0; i < this.checkedArray.length; i++) {\n        var arrTemp = this.familyTree(this.treeData, this.checkedArray[i]);\n        temp = temp.concat(arrTemp);\n      }\n      // 数组去重\n      tempArray = _toConsumableArray(new Set(temp));\n      console.log(\"tempArray\", tempArray);\n      checkedKeys.halfChecked = tempArray;\n      var checkedTitle = checkedNodes.checkedNodes;\n      this.knowledgeTitle = \"\";\n      for (var _i = 0; _i < checkedTitle.length; _i++) {\n        if (this.knowledgeTitle === \"\") {\n          this.knowledgeTitle = checkedTitle[_i].data.props.title;\n        } else {\n          if (checkedTitle[_i].data.props.data != null) {\n            this.knowledgeTitle = this.knowledgeTitle + \",\" + checkedTitle[_i].data.props.title;\n          }\n        }\n      }\n      if (this.knowledgeTitle === \"\") {\n        this.knowledgeTitle = \"知识专题\";\n        this.topicCodes = null;\n      }\n      var param = this.getQueryParams(); //查询条件互相影响\n      // let param={};\n      this.topicCodes = checkedTitle[0].data.props.code;\n      param[\"topicCodes\"] = this.topicCodes;\n      this.searchFun(param);\n      // this.businessTypes=null;\n    },\n    // 自定义列表  列设置更改事件\n    onColSettingsChange: function onColSettingsChange(checkedValues) {\n      var _this3 = this;\n      var key = this.$route.name + \":colsettings\";\n      console.log(\"colsettings\", key);\n      Vue.ls.set(key, checkedValues, 30 * 7 * 24 * 60 * 60 * 1000);\n      this.settingColumns = checkedValues;\n      var cols = this.defColumns.filter(function (item) {\n        if (item.key == 'rowIndex' || item.dataIndex == 'action') {\n          return true;\n        }\n        if (_this3.settingColumns.includes(item.dataIndex)) {\n          return true;\n        }\n        return false;\n      });\n      this.columns = cols;\n    },\n    // 自定义列表  初始化\n    initColumns: function initColumns() {\n      //权限过滤（列权限控制时打开，修改第二个参数为授权码前缀）\n      //this.defColumns = colAuthFilter(this.defColumns,'testdemo:');\n\n      var key = this.$route.name + \":colsettings\";\n      console.log(\"colsettings\", key);\n      var colSettings = Vue.ls.get(key);\n      if (colSettings == null || colSettings == undefined) {\n        var allSettingColumns = [];\n        this.defColumns.forEach(function (item, i, array) {\n          allSettingColumns.push(item.dataIndex);\n        });\n        this.settingColumns = allSettingColumns;\n        this.columns = this.defColumns;\n      } else {\n        this.settingColumns = colSettings;\n        var cols = this.defColumns.filter(function (item) {\n          if (item.key == 'rowIndex' || item.dataIndex == 'action') {\n            return true;\n          }\n          if (colSettings.includes(item.dataIndex)) {\n            return true;\n          }\n          return false;\n        });\n        this.columns = cols;\n      }\n    },\n    searchFun: function searchFun(params) {\n      var _this4 = this;\n      getAction(this.url.list, params).then(function (res) {\n        if (res.success) {\n          _this4.dataSource = res.result.kmSearchResultVOPage.records;\n          _this4.itemList = res.result.paramPath;\n          if (res.result.kmSearchResultVOPage.total) {\n            _this4.ipagination.total = res.result.kmSearchResultVOPage.total;\n          } else {\n            _this4.ipagination.total = 0;\n          }\n        } else {\n          _this4.$message.error(\"检索失败\");\n        }\n      });\n    },\n    loadData: function loadData() {\n      this.searchDocFun('2');\n    },\n    // 加载 分类数据\n    initDict: function initDict() {\n      var _this5 = this;\n      this.options = [];\n\n      //优先从缓存中读取字典配置\n      if (getDictItemsFromCache(this.dictCode)) {\n        var options = getDictItemsFromCache(this.dictCode);\n        options.forEach(function (item, index) {\n          var person = {};\n          person.label = item.title;\n          person.value = item.value;\n          _this5.options.push(person);\n        });\n        return;\n      }\n\n      //根据字典Code, 初始化字典数组\n      ajaxGetDictItems(this.dictCode, null).then(function (res) {\n        if (res.success) {\n          var _options2 = res.result;\n          _options2.forEach(function (item, index) {\n            var person = {};\n            person.label = item.title;\n            person.value = item.value;\n            _this5.options.push(person);\n          });\n        }\n      });\n    },\n    // 多选框选择触发\n    onChange: function onChange(checkedValues) {\n      this.checkedValues = checkedValues.toString();\n      console.log('checked = ', checkedValues);\n    },\n    // 按回车键触发方法\n    pressEnterFun: function pressEnterFun(e) {\n      var _this6 = this;\n      this.$nextTick(function () {\n        _this6.searchDocFun('0');\n      });\n    },\n    // 检索\n    searchDocFun: function searchDocFun(type) {\n      var _this7 = this;\n      // this.businessTypes=null;\n\n      var params = {};\n      params = this.getQueryParams(); //查询条件\n      if (type === '0') {\n        this.isSearchResult = false;\n        this.ipagination.current = 1;\n        //启用用过滤\n        this.defColumns[2].filters = this.filterOptions;\n      } else if (type === '1') {\n        this.isSearchResult = true;\n        this.ipagination.current = 1;\n        //禁用过滤\n        this.defColumns[2].filters = [];\n      }\n      this.loading = true;\n      if (this.content !== \"\" && this.content != null) {\n        var replaceTitle = this.content;\n        if (replaceTitle) replaceTitle = replaceTitle.replace(/，/g, ',');\n        // replaceTitle = replaceTitle.replace(/\\[/g, '%5B');\n        // replaceTitle = replaceTitle.replace(/\\]/g, '%5D');\n        if (this.boolCheckChange) {\n          params[\"content\"] = replaceTitle;\n        } else {\n          delete params[\"content\"];\n        }\n        params[\"title\"] = replaceTitle;\n        params[\"keywords\"] = replaceTitle;\n      }\n      params[\"advSearchFlag\"] = 0;\n      if (this.checkedValues !== \"\" && this.checkedValues != null) {\n        params['category'] = this.checkedValues;\n      }\n      if (this.topicCodes != null) {\n        params['topicCodes'] = this.topicCodes;\n      }\n      if (this.businessTypes != null) {\n        params['businessTypes'] = this.businessTypes;\n      }\n\n      // 判断参数是否为空\n      if (this.empty(params)) {\n        if (this.isSearchResult) {\n          params.withinSearchFlag = '1';\n        }\n        params.field = this.getQueryField();\n        params.pageNo = this.ipagination.current;\n        params.pageSize = this.ipagination.pageSize;\n        this.loading = true;\n        getAction(this.url.list, params).then(function (res) {\n          if (res.success) {\n            _this7.dataSource = res.result.kmSearchResultVOPage.records;\n            _this7.itemList = res.result.paramPath;\n            if (res.result.kmSearchResultVOPage.total) {\n              _this7.ipagination.total = res.result.kmSearchResultVOPage.total;\n            } else {\n              _this7.ipagination.total = 0;\n            }\n          } else {\n            _this7.$message.error(\"检索失败\");\n          }\n          _this7.loading = false;\n        });\n      } else {\n        this.loading = false;\n        this.$message.info(\"请输入搜索条件\");\n      }\n    },\n    loadDefaultBusinessTypeFunc: function loadDefaultBusinessTypeFunc() {\n      var _this8 = this;\n      getAction(this.url.defaultBusinessTypeList).then(function (res) {\n        if (res.success) {\n          _this8.defaultBusinessTypeList = res.result;\n        } else {\n          _this8.$message.error(\"业务加载失败\");\n        }\n      });\n    },\n    //  判断对象是否为空\n    empty: function empty(obj) {\n      for (var key in obj) {\n        return true;\n      }\n      return false;\n    },\n    //批量下载\n    downloadKmDocBatch: function downloadKmDocBatch() {\n      console.log(\"批量下载\");\n      if (!this.url.downloadKmDoc) {\n        this.$message.error(\"请设置url.downloadKmDoc属性!\");\n        return;\n      }\n      if (this.selectionRows.length <= 0) {\n        this.$message.warning('请选择一条记录！');\n        return;\n      } else {\n        var that = this;\n        this.$confirm({\n          title: \"确认下载\",\n          content: \"是否下载选中数据?\",\n          onOk: function onOk() {\n            for (var i = 0; i < that.selectionRows.length; i++) {\n              var fileName = i;\n              downloadFileName(that.url.downloadKmDoc, {\n                docId: that.selectionRows[i].id\n              });\n            }\n            that.onClearSelected();\n          }\n        });\n      }\n    },\n    //加收藏夹\n    addFavouriteKmDoc: function addFavouriteKmDoc(record) {\n      var _this9 = this;\n      var httpurl = '';\n      var method = '';\n      httpurl += this.url.addFavouriteKmDoc;\n      method = 'post';\n      httpPostAction(httpurl, {\n        docId: record.id\n      }, method).then(function (res) {\n        if (res.success) {\n          _this9.$message.success(\"收藏成功!\");\n          //this.loadData();\n          record.favourite = 1;\n        } else {\n          _this9.$message.warning(\"收藏失败!\");\n        }\n      }).finally(function () {});\n    },\n    //取消收藏夹\n    delFavouriteKmDoc: function delFavouriteKmDoc(record) {\n      var _this10 = this;\n      var httpurl = '';\n      var method = '';\n      httpurl += this.url.delFavouriteKmDoc;\n      method = 'delete';\n      httpPostAction(httpurl, {\n        docId: record.id\n      }, method).then(function (res) {\n        if (res.success) {\n          _this10.$message.success(\"取消收藏成功!\");\n          // this.loadData();\n          record.favourite = 0;\n        } else {\n          _this10.$message.warning(\"取消收藏失败!\");\n        }\n      }).finally(function () {});\n    },\n    // 显示预览窗口，初始化\n    previewKmDoc: function previewKmDoc(record) {\n      // this.PDFurl = window._CONFIG['domianURL'] + this.url.previewKmDoc + \"?docId=\" + record.id;\n      this.PDFurl = this.url.previewKmDoc + \"?docId=\" + record.id;\n      this.visible = true;\n      this.pdfLoading = true;\n      this.pdfShow = true;\n    },\n    //关闭预览窗口\n    handleCancel: function handleCancel() {\n      this.visible = false;\n    },\n    //下载文件\n    downloadKmDoc: function downloadKmDoc(record) {\n      this.$notification.success({\n        message: '文件开始下载...',\n        duration: 1\n      });\n      downloadFileName(this.url.downloadKmDoc, {\n        docId: record.id\n      });\n    },\n    // 返回\n    backHomepage: function backHomepage() {\n      this.$router.push('/defaultDocSearch');\n    },\n    // 跳转到收藏夹\n    jumpKmDocFavouritePage: function jumpKmDocFavouritePage() {\n      this.$router.push('/km/filemanagement/KmDocFavouriteList');\n    },\n    // 跳转到个人草稿文件夹\n    jumpDraftsPage: function jumpDraftsPage() {\n      this.$router.push('/km/filemanagement/DraftsList');\n    },\n    historyBack: function historyBack() {\n      history.back();\n    },\n    // 点击个人登录，跳转页面\n    login: function login() {\n      this.$router.push('/dashboard/analysis');\n    }\n  }\n};",{"version":3,"names":["ajaxGetDictItems","getDictItemsFromCache","ACCESS_TOKEN","httpPostAction","getAction","downloadFileName","getActionPDF","AJeecgListMixin","Vue","IframePageContent","SearchHeader","name","mixins","components","data","pageTitle","boolCheckChange","knowledgeTitle","checkedArray","topicCodesTree","checked","halfChecked","topicCodes","boolSelect","treeData","confirmLoading","PDFurl","visible","pdfLoading","pdfShow","isorter","column","order","labelCol","xs","span","sm","wrapperCol","checkboxVuale","title","width","defaultBusinessTypeList","docDataSource","loadedRatio","isSearchResult","filterOptions","filterDictCode","columns","settingColumns","defColumns","dataIndex","key","align","scopedSlots","customRender","filters","customCell","style","overflow","whiteSpace","textOverflow","fixed","filterDropdown","filterIcon","options","content","checkedValues","itemList","dictCode","url","rootList","list","hotTopicReport","previewKmDoc","downloadKmDoc","addFavouriteKmDoc","delFavouriteKmDoc","created","loadTree","initColumns","initFilterDict","prototype","token","ls","get","window","_CONFIG","initDict","params","$route","console","log","businessTypes","Object","keys","length","replaceTitle","replace","category","split","searchFun","param","watch","handler","newVal","oldVal","methods","_this","forEach","item","index","filterOption","text","value","push","then","res","success","result","onCheckChange","e","target","concat","_this2","async","pcode","$message","warning","message","finally","familyTree","id","arrTree","forFn","arr","i","parentId","children","onCheck","checkedKeys","checkedNodes","checkKeys","checkNodesTitle","temp","Array","tempArray","arrTemp","_toConsumableArray","Set","checkedTitle","props","getQueryParams","code","onColSettingsChange","_this3","set","cols","filter","includes","colSettings","undefined","allSettingColumns","array","_this4","dataSource","kmSearchResultVOPage","records","paramPath","total","ipagination","error","loadData","searchDocFun","_this5","person","label","onChange","toString","pressEnterFun","_this6","$nextTick","type","_this7","current","loading","empty","withinSearchFlag","field","getQueryField","pageNo","pageSize","info","loadDefaultBusinessTypeFunc","_this8","obj","downloadKmDocBatch","selectionRows","that","$confirm","onOk","fileName","docId","onClearSelected","record","_this9","httpurl","method","favourite","_this10","handleCancel","$notification","duration","backHomepage","$router","jumpKmDocFavouritePage","jumpDraftsPage","historyBack","history","back","login"],"sources":["src/views/km/search/DocSearch.vue"],"sourcesContent":["<template>\n  <a-layout class=\"layout\">\n\n    <a-layout-header  class=\"searchHeader\" style=\" background-color: #1a53ba;width: 100%; height: 60px\" >\n\n      <SearchHeader :title='pageTitle'/>\n\n    </a-layout-header>\n    <a-layout-content :style=\"{ background: '#fff',  minHeight: '680px' }\">\n\n      <div :bordered=\"false\" :style=\"{backgroundColor: '#f2f2f2',height: '100%'}\">\n        <!--<SearchHeader/>-->\n        <div  :style=\"{backgroundColor: '#1a53ba',padding: '10px',minWidth: '900px',height: '150px'}\">\n      <!-- 查询区域 -->\n      <div class=\"table-page-search-wrapper\">\n        <a-form layout=\"inline\">\n          <a-row>\n            <a-col :span=\"24\" style=\"text-align: center;\">\n              <div style=\"display:inline-block\">\n                <div style=\"float: left\">\n                  <a-input style=\"width: 800px;\" size=\"large\" placeholder=\"标题、关键字、全文\" v-model=\"content\"\n                           @pressEnter=\"pressEnterFun\">\n\n                    <a-icon slot=\"suffix\" @click=\"searchDocFun('0')\" type=\"search\" style=\"color:#1890FF;fontSize:22px\"/>\n                  </a-input>\n                  <div class=\"checkbox\" style=\"width: 750px;text-align: center;margin-top: 10px;margin-left: 20px\">\n                    <a-checkbox-group :options=\"options\" v-model=\"checkboxVuale\" @change=\"onChange\"/>\n                  </div>\n                </div>\n                <div style=\"float: left;width: 100px;text-align: left;margin-top: -2px\">\n                  <span style=\"color: white;margin-left: 20px\">\n                   <span>全文检索</span>\n                   <a-checkbox class=\"checkbox\" v-model=\"boolCheckChange\" style=\"margin-left: 8px\"\n                               @change=\"onCheckChange\"/>\n                  </span>\n                </div>\n              </div>\n            </a-col>\n          </a-row>\n        </a-form>\n      </div>\n      <!-- 查询区域-END -->\n    </div>\n    <!-- 表格区域 -->\n    <div style=\"background-color:white;margin: 15px;padding: 15px\">\n      <!-- 操作按钮区域 -->\n      <div class=\"table-operator\">\n        <!--      <a-button type=\"primary\" icon=\"download\" @click=\"handleExportXls('草稿文件夹')\">导出</a-button>-->\n        <a-dropdown v-has=\"'searchList:batchDownload'\" v-if=\"selectedRowKeys.length > 0\">\n          <a-menu slot=\"overlay\">\n            <a-menu-item key=\"1\" @click=\"downloadKmDocBatch\">\n              <a-icon type=\"vertical-align-bottom\"/>\n              批量下载\n            </a-menu-item>\n          </a-menu>\n          <a-button style=\"margin-left: 8px\"> 批量操作\n            <a-icon type=\"down\"/>\n          </a-button>\n        </a-dropdown>\n      </div>\n\n      <!-- table区域-begin -->\n      <div>\n        <div  class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 15px;color: #303133;\">\n          <span v-for=\"(item,index) in itemList\" :key=\"index\">\n            <span><b v-if=\"index==0\">检索范围: </b><span v-if=\"index==itemList.length-1\">{{item}}</span> <span v-else>{{item}}<span\n              style=\"font-weight: bold;color: red\">-></span>  </span></span>\n          </span>\n        </div>\n\n        <!--<div v-else class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 15px;color: #303133;\">-->\n          <!--<span v-for=\"(item,index) in defaultBusinessTypeList\" :xl=\"4\" :lg=\"4\" :md=\"4\" :sm=\"4\" :key=\"index\">-->\n            <!--<span style=\"text-align: left;margin-left: 10px\">-->\n              <!--<span @click=\"searchBusinessType(item.value)\">-->\n                <!--<a v-if=\"item.value === businessTypes\" style=\"color: #303133;font-weight: bold\">{{item.text}}</a>-->\n                <!--<a v-else style=\"color: #303133\">{{item.text}}</a></span>-->\n            <!--</span>-->\n          <!--</span>-->\n        <!--</div>-->\n\n        <a-table\n          ref=\"table\"\n          size=\"middle\"\n          rowKey=\"id\"\n          :columns=\"columns\"\n          :dataSource=\"dataSource\"\n          :pagination=\"ipagination\"\n          :loading=\"loading\"\n          :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n          @change=\"handleTableChange\">\n\n\n          // 添加自定义列表插槽\n          <div slot=\"filterDropdown\">\n            <a-card style=\"width: 350px\">\n              <a-checkbox-group @change=\"onColSettingsChange\" v-model=\"settingColumns\" :defaultValue=\"settingColumns\">\n                <a-row>\n                  <template v-for=\"(item,index) in defColumns\">\n                    <template v-if=\"item.key!='rowIndex'&& item.dataIndex!='action'\">\n                      <a-col :span=\"12\">\n                        <a-checkbox :value=\"item.dataIndex\">{{ item.title }}</a-checkbox>\n                      </a-col>\n                    </template>\n                  </template>\n                </a-row>\n              </a-checkbox-group>\n            </a-card>\n          </div>\n          <a-icon slot=\"filterIcon\" type='setting' title=\"自定义列\"\n                  :style=\"{ fontSize:'18px',color:  '#108ee9',minWidth:'35px'}\"/>\n\n          <span slot=\"indexNum\" slot-scope=\"text, record,index\">\n                  <p>{{index+1+(ipagination.current-1)*ipagination.pageSize}}</p>\n               </span>\n          <span slot=\"action\" slot-scope=\"text, record\">\n\n           <!--<a-icon type=\"read\" title=\"预览\" @click=\"previewKmDoc(record)\"-->\n            <!--:style=\"{ fontSize: '18px', color: '#1890FF', }\"/>-->\n\n\n          <a-icon v-if=\"record.downloadFlag==1\" type=\"download\" title=\"下载\" @click=\"downloadKmDoc(record)\"\n                  :style=\"{ fontSize: '18px', color: '#1890FF'}\"/>\n          <a-icon v-else type=\"download\" title=\"禁止下载\" :style=\"{ fontSize: '18px', color: '#909399'}\"/>\n\n          <a-divider type=\"vertical\"/>\n\n          <a-icon v-if=\"record.favourite==0\" type=\"star\" title=\"收藏\" @click=\"addFavouriteKmDoc(record)\"\n                  :style=\"{ fontSize: '18px', color: '#1890FF', }\"/>\n          <a-icon v-else type=\"star\" theme=\"filled\" title=\"取消收藏\" @click=\"delFavouriteKmDoc(record)\"\n                  :style=\"{ fontSize: '18px', color: '#1890FF', }\"/>\n\n        </span>\n\n          <span slot=\"docTitle\" slot-scope=\"text,record\">\n           <span @click=\"previewKmDoc(record,true)\"><a style=\"color: #303133\">\n             <span v-html=\" record.title \"></span></a></span>\n        </span>\n          <!--<span slot=\"test\" slot-scope=\"text, record\">-->\n          <!--<span v-html=\"record.title\"></span>-->\n          <!--</span>-->\n\n        </a-table>\n      </div>\n\n      <b-j-modal :title=\"title\"\n                 :width=\"width\"\n                 :visible=\"visible\"\n                 @cancel=\"handleCancel\"\n                 cancelText=\"关闭\"\n                 :okButtonProps=\"{ class:{'jee-hidden': true} }\">\n        <p-d-f-modal :p-d-furl=\"PDFurl\" :iframeWidth=\"width\"/>\n      </b-j-modal>\n\n    </div>\n  </div>\n    </a-layout-content>\n  </a-layout>\n</template>\n\n<script>\n  import {ajaxGetDictItems, getDictItemsFromCache} from '@/api/api'\n  import {ACCESS_TOKEN} from \"@/store/mutation-types\"\n  import {httpPostAction, getAction, downloadFileName, getActionPDF} from \"../../../api/manage\";\n  import {AJeecgListMixin} from '@/mixins/AJeecgListMixin'\n  import Vue from \"vue\";\n  import IframePageContent from \"../../../components/layouts/IframeFReportView\";\n  import SearchHeader from '../Common/SearchHeader'\n\n  export default {\n    name: \"docSearch\",\n    mixins: [AJeecgListMixin],\n    components: {IframePageContent,SearchHeader},\n    data() {\n      return {\n        pageTitle:\"检索结果\",\n        boolCheckChange: true,\n        knowledgeTitle: \"知识专题\",\n        checkedArray: [],\n        topicCodesTree: {\n          checked: [],\n          halfChecked: [],\n        },\n        topicCodes:\"\",\n        // businessTypes:\"1\",\n        boolSelect: false,\n        treeData: [],\n        confirmLoading: false,\n        PDFurl: '',\n        visible: false,\n        pdfLoading: false,\n        pdfShow: true,\n        isorter: {\n          column: '_score',\n          order: 'desc',\n        },\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n        checkboxVuale: [],\n        title: \"预览\",\n        width: 900,\n        // hotTopicReportList: [],\n        defaultBusinessTypeList: [],\n        docDataSource: [],\n        loadedRatio: 0,\n        isSearchResult: false,\n        filterOptions:[],\n        //要filter的字段\n        filterDictCode: 'km_dict_source',\n        //表头\n        columns: [],\n        //列设置\n        settingColumns: [],\n        //列定义\n        defColumns: [\n          {\n            title: '#',\n            dataIndex: '',\n            key: 'rowIndex',\n            width: 60,\n            align: \"center\",\n            scopedSlots: {customRender: 'indexNum'}\n          },\n          {\n            title: '标题',\n            align: \"left\",\n            dataIndex: 'title',\n            scopedSlots: {customRender: 'docTitle'}\n          },\n          {\n            title: '分类',\n            align: \"left\",\n            dataIndex: 'category_dictText',\n            width: 100,\n            filters: [],\n            customCell: () => {\n              return {\n                style: {\n                  'max-width': '6em',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis'\n                },\n              };\n            },\n          },\n          {\n            title: '标签',\n            align: \"left\",\n            dataIndex: 'businessType_dictText',\n            customCell: () => {\n              return {\n                style: {\n                  'max-width': '6em',\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                  textOverflow:'ellipsis'\n                },\n              };\n            },\n          },\n          {\n            title: '操作',\n            dataIndex: 'action',\n            align: \"center\",\n            fixed: \"right\",\n            width: 80,\n            scopedSlots: {\n              filterDropdown: 'filterDropdown',\n              filterIcon: 'filterIcon',\n              customRender: 'action'\n            }\n          },\n        ],\n        options: [],\n        content: '',\n        checkedValues: '',\n        itemList: [],\n        // 要加载多选的字典\n        dictCode: 'km_dict_category',\n\n        url: {\n          rootList: \"/sys/category/loadTreeRoot\",\n          list: '/KM/kmDoc/searchDoc',\n          hotTopicReport: '/KM/kmSearchRecord/hotTopicReport',\n          defaultBusinessTypeList: '/KM/HomePage/listBusinessType',\n          previewKmDoc: '/KM/kmDoc/previewKmDoc',\n          downloadKmDoc: \"/KM/kmDoc/downloadKmDoc\",\n          addFavouriteKmDoc: '/KM/kmDocFavourite/add',\n          delFavouriteKmDoc: '/KM/kmDocFavourite/delete',\n        }\n      }\n    },\n    created() {\n      this.loadTree();\n      // 调用初始化自定义table列表函数\n      this.initColumns();\n      this.initFilterDict();\n\n      //设置全局token\n      Vue.prototype.token = Vue.ls.get(ACCESS_TOKEN);\n      window._CONFIG['token'] = Vue.prototype.token;\n      // this.hotTopicReportFun();\n      this.initDict();\n      let params = this.$route.params;\n      console.log(\"params：\", params);\n      this.topicCodes=params.topicCodes;\n      this.businessTypes=params.businessTypes;\n\n      // if(this.businessTypes)\n      //   this.loadDefaultBusinessTypeFunc()\n\n      if(this.topicCodes==null){\n        if (Object.keys(params).length > 0) {\n          this.boolCheckChange = params.boolCheckChange;\n          this.content = params.content;\n          let replaceTitle=this.content;\n          if(replaceTitle)\n            replaceTitle = replaceTitle.replace(/，/g, ',');\n          // replaceTitle = replaceTitle.replace(/\\[/g, '%5B');\n          // replaceTitle = replaceTitle.replace(/\\]/g, '%5D');\n          if(this.boolCheckChange){\n            params[\"content\"] = replaceTitle;\n          }else{\n            delete params[\"content\"];\n            delete params[\"boolCheckChange\"];\n          }\n          params[\"title\"] = replaceTitle;\n          params[\"keywords\"] = replaceTitle;\n          params[\"advSearchFlag\"] = 0;\n\n          if (params.category !== \"\" && params.category != null) {\n            this.checkboxVuale = params.category.split(\",\");\n            this.checkedValues = params.category\n          }\n          this.searchFun(params);\n        }\n      }else{\n        this.topicCodesTree=params.topicCodesTree;\n        this.knowledgeTitle=params.knowledgeTitle;\n        let param={};\n        param[\"topicCodes\"]=this.topicCodes;\n        this.searchFun(param);\n      }\n    },\n\n    watch: {\n      loadedRatio: {\n        handler(newVal, oldVal) {\n          console.log(newVal)\n          if (newVal === 1) {\n            this.pdfLoading = false;\n          }\n        }\n      }\n    },\n    methods: {\n      // 加载filter字段选项\n      initFilterDict() {\n        //优先从缓存中读取字典配置\n        // if (getDictItemsFromCache(this.dictCode)) {\n        let options = getDictItemsFromCache(this.filterDictCode)\n        if(options){\n          options.forEach((item, index) => {\n            let filterOption = {};\n            filterOption.text = item.title;\n            filterOption.value = item.value;\n            this.filterOptions.push(filterOption);\n          });\n          console.log(this.filterOptions);\n          this.defColumns[2].filters =this.filterOptions;\n          return\n        }\n\n        //根据字典Code, 初始化字典数组\n        ajaxGetDictItems(this.filterDictCode, null).then((res) => {\n          if (res.success) {\n            let options = res.result\n            console.log(options);\n            options.forEach((item, index) => {\n              let filterOption = {};\n              filterOption.text = item.title;\n              filterOption.value = item.value;\n              this.filterOptions.push(filterOption);\n            });\n            this.defColumns[2].filters =this.filterOptions;\n          }\n        })\n\n      },\n\n      // 是否全文检索\n      onCheckChange(e) {\n        this.boolCheckChange = e.target.checked\n        console.log(`checked = ${e.target.checked}`);\n      },\n\n      // 加载树节点，获取树数据\n      loadTree() {\n        let params = {\n          async: false,\n          pcode: \"\"\n        };\n        getAction(this.url.rootList, params).then(res => {\n          if (res.success) {\n            if (res.result && res.result.length > 0) {\n              this.treeData = res.result\n            } else {\n              this.treeData = []\n            }\n          } else {\n            this.$message.warning(res.message)\n          }\n        }).finally(() => {\n        })\n      },\n\n      // 查找一个节点的所有父节点\n      familyTree(treeData, id) {\n        var arrTree = [];\n        var forFn = function (arr, key) {\n          for (var i = 0; i < arr.length; i++) {\n            var item = arr[i]\n            if (item.key === key) {\n              if (item.parentId === \"0\") {\n                break;\n              } else {\n                console.log(\"父节点\", item.parentId);\n                arrTree.push(item.parentId);\n                forFn(treeData, item.parentId);\n              }\n              break\n            } else {\n              if (item.children != null) {\n                forFn(item.children, key);\n              }\n            }\n          }\n        }\n        forFn(treeData, id);\n        return arrTree\n      },\n\n      // 树节点选择触发\n      onCheck(checkedKeys, checkedNodes) {\n        if (checkedKeys.checked.length > 1) {\n          let checkKeys = checkedKeys.checked[1];\n          checkedKeys.checked = [];\n          checkedKeys.checked.push(checkKeys);\n          let checkNodesTitle = checkedNodes.checkedNodes[1];\n          checkedNodes.checkedNodes = [];\n          checkedNodes.checkedNodes.push(checkNodesTitle);\n        }\n        console.log(\"checkedKeys\", checkedKeys);\n        console.log(\"checkedNodes\", checkedNodes);\n        let temp = new Array();\n        let tempArray = new Array();\n        this.checkedArray = checkedKeys.checked;\n\n        for (let i = 0; i < this.checkedArray.length; i++) {\n          let arrTemp = this.familyTree(this.treeData, this.checkedArray[i]);\n          temp = temp.concat(arrTemp);\n        }\n        // 数组去重\n        tempArray = [...new Set(temp)];\n        console.log(\"tempArray\", tempArray);\n        checkedKeys.halfChecked = tempArray;\n        let checkedTitle = checkedNodes.checkedNodes;\n        this.knowledgeTitle = \"\";\n        for (let i = 0; i < checkedTitle.length; i++) {\n          if (this.knowledgeTitle === \"\") {\n            this.knowledgeTitle = checkedTitle[i].data.props.title;\n          } else {\n            if (checkedTitle[i].data.props.data != null) {\n              this.knowledgeTitle = this.knowledgeTitle + \",\" + checkedTitle[i].data.props.title;\n            }\n          }\n        }\n        if (this.knowledgeTitle === \"\") {\n          this.knowledgeTitle = \"知识专题\"\n          this.topicCodes = null;\n        }\n        let param = this.getQueryParams();//查询条件互相影响\n        // let param={};\n        this.topicCodes=checkedTitle[0].data.props.code;\n        param[\"topicCodes\"]=this.topicCodes;\n        this.searchFun(param);\n        // this.businessTypes=null;\n\n      },\n      // 自定义列表  列设置更改事件\n      onColSettingsChange(checkedValues) {\n        var key = this.$route.name + \":colsettings\";\n        console.log(\"colsettings\", key);\n        Vue.ls.set(key, checkedValues, 30 * 7 * 24 * 60 * 60 * 1000)\n        this.settingColumns = checkedValues;\n        const cols = this.defColumns.filter(item => {\n          if (item.key == 'rowIndex' || item.dataIndex == 'action') {\n            return true\n          }\n          if (this.settingColumns.includes(item.dataIndex)) {\n            return true\n          }\n          return false\n        })\n        this.columns = cols;\n      },\n      // 自定义列表  初始化\n      initColumns() {\n        //权限过滤（列权限控制时打开，修改第二个参数为授权码前缀）\n        //this.defColumns = colAuthFilter(this.defColumns,'testdemo:');\n\n        var key = this.$route.name + \":colsettings\";\n        console.log(\"colsettings\", key);\n        let colSettings = Vue.ls.get(key);\n        if (colSettings == null || colSettings == undefined) {\n          let allSettingColumns = [];\n          this.defColumns.forEach(function (item, i, array) {\n            allSettingColumns.push(item.dataIndex);\n          })\n          this.settingColumns = allSettingColumns;\n          this.columns = this.defColumns;\n        } else {\n          this.settingColumns = colSettings;\n          const cols = this.defColumns.filter(item => {\n            if (item.key == 'rowIndex' || item.dataIndex == 'action') {\n              return true;\n            }\n            if (colSettings.includes(item.dataIndex)) {\n              return true;\n            }\n            return false;\n          })\n          this.columns = cols;\n        }\n      },\n\n      searchFun(params) {\n        getAction(this.url.list, params).then((res) => {\n          if (res.success) {\n            this.dataSource = res.result.kmSearchResultVOPage.records;\n            this.itemList = res.result.paramPath;\n            if (res.result.kmSearchResultVOPage.total) {\n              this.ipagination.total = res.result.kmSearchResultVOPage.total;\n            } else {\n              this.ipagination.total = 0;\n            }\n          } else {\n            this.$message.error(\"检索失败\");\n          }\n        })\n      },\n\n      loadData() {\n        this.searchDocFun('2');\n      },\n\n      // 加载 分类数据\n      initDict() {\n        this.options = [];\n\n        //优先从缓存中读取字典配置\n        if (getDictItemsFromCache(this.dictCode)) {\n          let options = getDictItemsFromCache(this.dictCode)\n          options.forEach((item, index) => {\n            let person = {};\n            person.label = item.title;\n            person.value = item.value;\n            this.options.push(person);\n          });\n          return\n        }\n\n        //根据字典Code, 初始化字典数组\n        ajaxGetDictItems(this.dictCode, null).then((res) => {\n          if (res.success) {\n            let options = res.result\n            options.forEach((item, index) => {\n              let person = {};\n              person.label = item.title;\n              person.value = item.value;\n              this.options.push(person);\n            });\n          }\n        })\n\n\n      },\n\n      // 多选框选择触发\n      onChange(checkedValues) {\n        this.checkedValues = checkedValues.toString();\n        console.log('checked = ', checkedValues);\n      },\n      // 按回车键触发方法\n      pressEnterFun(e) {\n        this.$nextTick(() => {\n          this.searchDocFun('0');\n        })\n      },\n      // 检索\n      searchDocFun(type) {\n        // this.businessTypes=null;\n\n        let params = {};\n        params = this.getQueryParams();//查询条件\n        if (type === '0') {\n          this.isSearchResult = false;\n          this.ipagination.current = 1;\n          //启用用过滤\n          this.defColumns[2].filters =this.filterOptions;\n        } else if (type === '1') {\n          this.isSearchResult = true;\n          this.ipagination.current = 1;\n          //禁用过滤\n          this.defColumns[2].filters = [];\n        }\n\n        this.loading = true;\n\n        if (this.content !== \"\" && this.content != null) {\n          let replaceTitle=this.content\n          if(replaceTitle)\n            replaceTitle = replaceTitle.replace(/，/g, ',');\n          // replaceTitle = replaceTitle.replace(/\\[/g, '%5B');\n          // replaceTitle = replaceTitle.replace(/\\]/g, '%5D');\n          if(this.boolCheckChange){\n            params[\"content\"] = replaceTitle;\n          }else{\n            delete params[\"content\"];\n          }\n          params[\"title\"] = replaceTitle;\n          params[\"keywords\"] = replaceTitle;\n        }\n        params[\"advSearchFlag\"] = 0;\n        if (this.checkedValues !== \"\" && this.checkedValues != null) {\n          params['category'] = this.checkedValues;\n        }\n        if( this.topicCodes!=null){\n          params['topicCodes']=this.topicCodes;\n        }\n        if(this.businessTypes!=null){\n          params['businessTypes']=this.businessTypes;\n        }\n\n        // 判断参数是否为空\n        if (this.empty(params)) {\n          if (this.isSearchResult) {\n            params.withinSearchFlag = '1';\n          }\n          params.field = this.getQueryField();\n          params.pageNo = this.ipagination.current;\n          params.pageSize = this.ipagination.pageSize;\n          this.loading = true;\n          getAction(this.url.list, params).then((res) => {\n            if (res.success) {\n              this.dataSource = res.result.kmSearchResultVOPage.records;\n              this.itemList = res.result.paramPath;\n              if (res.result.kmSearchResultVOPage.total) {\n                this.ipagination.total = res.result.kmSearchResultVOPage.total;\n              } else {\n                this.ipagination.total = 0;\n              }\n            } else {\n              this.$message.error(\"检索失败\");\n            }\n            this.loading = false;\n          })\n        } else {\n          this.loading = false;\n          this.$message.info(\"请输入搜索条件\");\n        }\n      },\n\n      loadDefaultBusinessTypeFunc(){\n        getAction(this.url.defaultBusinessTypeList).then(res => {\n          if (res.success) {\n            this.defaultBusinessTypeList = res.result;\n          } else {\n            this.$message.error(\"业务加载失败\");\n          }\n        })\n      },\n\n      //  判断对象是否为空\n      empty(obj) {\n        for (let key in obj) {\n          return true;\n        }\n        return false;\n      },\n\n      //批量下载\n      downloadKmDocBatch() {\n        console.log(\"批量下载\")\n        if (!this.url.downloadKmDoc) {\n          this.$message.error(\"请设置url.downloadKmDoc属性!\")\n          return\n        }\n        if (this.selectionRows.length <= 0) {\n          this.$message.warning('请选择一条记录！');\n          return;\n        } else {\n          var that = this;\n          this.$confirm({\n            title: \"确认下载\",\n            content: \"是否下载选中数据?\",\n            onOk: function () {\n              for (var i = 0; i < that.selectionRows.length; i++) {\n                let fileName = i;\n                downloadFileName(that.url.downloadKmDoc, {docId: that.selectionRows[i].id})\n              }\n              that.onClearSelected();\n            }\n          });\n        }\n      },\n      //加收藏夹\n      addFavouriteKmDoc(record) {\n        let httpurl = '';\n        let method = '';\n        httpurl += this.url.addFavouriteKmDoc;\n        method = 'post';\n        httpPostAction(httpurl, {docId: record.id}, method).then((res) => {\n          if (res.success) {\n            this.$message.success(\"收藏成功!\");\n            //this.loadData();\n            record.favourite = 1;\n          } else {\n            this.$message.warning(\"收藏失败!\");\n          }\n        }).finally(() => {\n        })\n      },\n      //取消收藏夹\n      delFavouriteKmDoc(record) {\n        let httpurl = '';\n        let method = '';\n        httpurl += this.url.delFavouriteKmDoc;\n        method = 'delete';\n        httpPostAction(httpurl, {docId: record.id}, method).then((res) => {\n          if (res.success) {\n            this.$message.success(\"取消收藏成功!\");\n            // this.loadData();\n            record.favourite = 0;\n          } else {\n            this.$message.warning(\"取消收藏失败!\");\n          }\n        }).finally(() => {\n        })\n      },\n\n      // 显示预览窗口，初始化\n      previewKmDoc(record) {\n        // this.PDFurl = window._CONFIG['domianURL'] + this.url.previewKmDoc + \"?docId=\" + record.id;\n        this.PDFurl =  this.url.previewKmDoc + \"?docId=\" + record.id;\n        this.visible = true;\n        this.pdfLoading = true;\n        this.pdfShow = true;\n      },\n      //关闭预览窗口\n      handleCancel() {\n        this.visible = false;\n      },\n\n      //下载文件\n      downloadKmDoc(record) {\n        this.$notification.success({\n          message: '文件开始下载...',\n          duration: 1,\n        });\n        downloadFileName(this.url.downloadKmDoc, {docId: record.id})\n      },\n\n      // 返回\n      backHomepage() {\n        this.$router.push('/defaultDocSearch');\n      },\n      // 跳转到收藏夹\n      jumpKmDocFavouritePage(){\n        this.$router.push('/km/filemanagement/KmDocFavouriteList');\n      },\n      // 跳转到个人草稿文件夹\n      jumpDraftsPage(){\n        this.$router.push('/km/filemanagement/DraftsList');\n      },\n      historyBack(){\n        history.back()\n      },\n      // 点击个人登录，跳转页面\n      login() {\n        this.$router.push('/dashboard/analysis');\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n  @import '~@assets/less/common.less';\n</style>"],"mappings":"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","ignoreList":[]}]}