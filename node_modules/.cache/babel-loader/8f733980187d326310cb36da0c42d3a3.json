{"remainingRequest":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!E:\\work-25\\知识库系统\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\work-25\\知识库系统\\admin\\src\\api\\GroupRequest.js","dependencies":[{"path":"E:\\work-25\\知识库系统\\admin\\src\\api\\GroupRequest.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\n\n/**\n * 将一个请求分组\n *\n * @param getPromise 传入一个可以获取到Promise对象的方法\n * @param groupId 分组ID，如果不传或者为空则不分组\n * @param expire 过期时间，默认 半分钟\n */\nexport function httpGroupRequest(getPromise, groupId) {\n  var expire = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000 * 30;\n  if (groupId == null || groupId === '') {\n    console.log(\"--------popup----------getFrom  DB-------with---no--groupId \");\n    return getPromise();\n  }\n  if (Vue.ls.get(groupId)) {\n    console.log(\"---------popup--------getFrom  Cache--------groupId = \" + groupId);\n    return Promise.resolve(Vue.ls.get(groupId));\n  } else {\n    console.log(\"--------popup----------getFrom  DB---------groupId = \" + groupId);\n  }\n\n  // 还没有发出请求，就发出第一次的请求\n  return getPromise().then(function (res) {\n    Vue.ls.set(groupId, res, expire);\n    return Promise.resolve(res);\n  });\n}",{"version":3,"names":["Vue","httpGroupRequest","getPromise","groupId","expire","arguments","length","undefined","console","log","ls","get","Promise","resolve","then","res","set"],"sources":["E:/work-25/知识库系统/admin/src/api/GroupRequest.js"],"sourcesContent":["import Vue from 'vue'\n\n/**\n * 将一个请求分组\n *\n * @param getPromise 传入一个可以获取到Promise对象的方法\n * @param groupId 分组ID，如果不传或者为空则不分组\n * @param expire 过期时间，默认 半分钟\n */\nexport function httpGroupRequest(getPromise, groupId, expire = 1000 * 30) {\n  if (groupId == null || groupId === '') {\n    console.log(\"--------popup----------getFrom  DB-------with---no--groupId \")\n    return getPromise()\n  }\n\n  if (Vue.ls.get(groupId)) {\n    console.log(\"---------popup--------getFrom  Cache--------groupId = \" + groupId)\n    return Promise.resolve(Vue.ls.get(groupId));\n  } else {\n    console.log(\"--------popup----------getFrom  DB---------groupId = \" + groupId)\n  }\n\n  // 还没有发出请求，就发出第一次的请求\n  return getPromise().then(res => {\n    Vue.ls.set(groupId, res, expire);\n    return Promise.resolve(res);\n  })\n}\n\n\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,UAAU,EAAEC,OAAO,EAAsB;EAAA,IAApBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI,GAAG,EAAE;EACtE,IAAIF,OAAO,IAAI,IAAI,IAAIA,OAAO,KAAK,EAAE,EAAE;IACrCK,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;IAC3E,OAAOP,UAAU,CAAC,CAAC;EACrB;EAEA,IAAIF,GAAG,CAACU,EAAE,CAACC,GAAG,CAACR,OAAO,CAAC,EAAE;IACvBK,OAAO,CAACC,GAAG,CAAC,wDAAwD,GAAGN,OAAO,CAAC;IAC/E,OAAOS,OAAO,CAACC,OAAO,CAACb,GAAG,CAACU,EAAE,CAACC,GAAG,CAACR,OAAO,CAAC,CAAC;EAC7C,CAAC,MAAM;IACLK,OAAO,CAACC,GAAG,CAAC,uDAAuD,GAAGN,OAAO,CAAC;EAChF;;EAEA;EACA,OAAOD,UAAU,CAAC,CAAC,CAACY,IAAI,CAAC,UAAAC,GAAG,EAAI;IAC9Bf,GAAG,CAACU,EAAE,CAACM,GAAG,CAACb,OAAO,EAAEY,GAAG,EAAEX,MAAM,CAAC;IAChC,OAAOQ,OAAO,CAACC,OAAO,CAACE,GAAG,CAAC;EAC7B,CAAC,CAAC;AACJ","ignoreList":[]}]}