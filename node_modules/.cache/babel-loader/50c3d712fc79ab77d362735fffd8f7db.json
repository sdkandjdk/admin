{"remainingRequest":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeTagsCell.js","dependencies":[{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeTagsCell.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\babel.config.js","mtime":1704718217000},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709701155248},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1709701140363},{"path":"F:\\workspace\\3月\\km_community-main\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1709701151904}],"contextDependencies":[],"result":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\n\n// tags 组件的显示组件\nexport var TagsSpanCell = {\n  name: 'JVxeTagsCell',\n  mixins: [JVxeCellMixins],\n  data: function data() {\n    return {\n      innerTags: []\n    };\n  },\n  watch: {\n    innerValue: {\n      immediate: true,\n      handler: function handler(value) {\n        if (value !== this.innerTags.join(';')) {\n          var rv = replaceValue(value);\n          this.innerTags = rv.split(';');\n          this.handleChangeCommon(rv);\n        }\n      }\n    }\n  },\n  methods: {\n    renderTags: function renderTags(h) {\n      var tags = [];\n      var _iterator = _createForOfIteratorHelper(this.innerTags),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var tag = _step.value;\n          if (tag) {\n            var tagProps = {};\n            var tagStyle = {};\n            var setTagColor = this.originColumn.setTagColor;\n            if (typeof setTagColor === 'function') {\n              /**\n               * 设置 tag 颜色\n               *\n               * @param event 包含的字段：\n               * event.tagValue 当前tag的值\n               * event.value 当前原始值\n               * event.row 当前行的所有值\n               * event.column 当前列的配置\n               * event.column.own 当前列的原始配置\n               * @return Array | String 可以返回一个数组，数据第一项是tag背景颜色，第二项是字体颜色。也可以返回一个字符串，即tag背景颜色\n               */\n              var color = setTagColor({\n                tagValue: tag,\n                value: this.innerValue,\n                row: this.row,\n                column: this.column\n              });\n              if (Array.isArray(color)) {\n                tagProps.color = color[0];\n                tagStyle.color = color[1];\n              } else if (color && typeof color === 'string') {\n                tagProps.color = color;\n              }\n            }\n            tags.push(h('a-tag', {\n              props: tagProps,\n              style: tagStyle\n            }, [tag]));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return tags;\n    }\n  },\n  render: function render(h) {\n    return h('div', {}, [this.renderTags(h)]);\n  }\n};\n\n// tags 组件的输入框\nexport var TagsInputCell = {\n  name: 'JVxeTagsInputCell',\n  mixins: [JVxeCellMixins],\n  data: function data() {\n    return {\n      innerTagValue: ''\n    };\n  },\n  watch: {\n    innerValue: {\n      immediate: true,\n      handler: function handler(value) {\n        if (value !== this.innerTagValue) {\n          this.handleInputChange(value);\n        }\n      }\n    }\n  },\n  methods: {\n    handleInputChange: function handleInputChange(value, event) {\n      this.innerTagValue = replaceValue(value, event);\n      this.handleChangeCommon(this.innerTagValue);\n      return this.innerTagValue;\n    }\n  },\n  render: function render(h) {\n    var _this = this;\n    return h('a-input', {\n      props: _objectSpread({\n        value: this.innerValue\n      }, this.cellProps),\n      on: {\n        change: function change(event) {\n          var target = event.target,\n            value = event.target.value;\n          var newValue = _this.handleInputChange(value, event);\n          if (newValue !== value) {\n            target.value = newValue;\n          }\n        }\n      }\n    });\n  }\n};\n\n// 将值每隔两位加上一个分号\nfunction replaceValue(value, event) {\n  if (value) {\n    // 首先去掉现有的分号\n    value = value.replace(/;/g, '');\n    // 然后再遍历添加分号\n    var rv = '';\n    var splitArr = value.split('');\n    var count = 0;\n    splitArr.forEach(function (val, index) {\n      rv += val;\n      var position = index + 1;\n      if (position % 2 === 0 && position < splitArr.length) {\n        count++;\n        rv += ';';\n      }\n    });\n    if (event && count > 0) {\n      var target = event.target,\n        selectionStart = event.target.selectionStart;\n      target.selectionStart = selectionStart + count;\n      target.selectionEnd = selectionStart + count;\n    }\n    return rv;\n  }\n  return '';\n}",{"version":3,"names":["JVxeCellMixins","TagsSpanCell","name","mixins","data","innerTags","watch","innerValue","immediate","handler","value","join","rv","replaceValue","split","handleChangeCommon","methods","renderTags","h","tags","_iterator","_createForOfIteratorHelper","_step","s","n","done","tag","tagProps","tagStyle","setTagColor","originColumn","color","tagValue","row","column","Array","isArray","push","props","style","err","e","f","render","TagsInputCell","innerTagValue","handleInputChange","event","_this","_objectSpread","cellProps","on","change","target","newValue","replace","splitArr","count","forEach","val","index","position","length","selectionStart","selectionEnd"],"sources":["F:/workspace/3月/km_community-main/ant-design-vue-jeecg/src/components/jeecg/JVxeTable/components/cells/JVxeTagsCell.js"],"sourcesContent":["import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\n// tags 组件的显示组件\nexport const TagsSpanCell = {\n  name: 'JVxeTagsCell',\n  mixins: [JVxeCellMixins],\n  data() {\n    return {\n      innerTags: [],\n    }\n  },\n  watch: {\n    innerValue: {\n      immediate: true,\n      handler(value) {\n        if (value !== this.innerTags.join(';')) {\n          let rv = replaceValue(value)\n          this.innerTags = rv.split(';')\n          this.handleChangeCommon(rv)\n        }\n      },\n    },\n  },\n  methods: {\n    renderTags(h) {\n      let tags = []\n      for (let tag of this.innerTags) {\n        if (tag) {\n          let tagProps = {}\n          let tagStyle = {}\n          let setTagColor = this.originColumn.setTagColor\n          if (typeof setTagColor === 'function') {\n            /**\n             * 设置 tag 颜色\n             *\n             * @param event 包含的字段：\n             * event.tagValue 当前tag的值\n             * event.value 当前原始值\n             * event.row 当前行的所有值\n             * event.column 当前列的配置\n             * event.column.own 当前列的原始配置\n             * @return Array | String 可以返回一个数组，数据第一项是tag背景颜色，第二项是字体颜色。也可以返回一个字符串，即tag背景颜色\n             */\n            let color = setTagColor({\n              tagValue: tag,\n              value: this.innerValue,\n              row: this.row,\n              column: this.column,\n            })\n            if (Array.isArray(color)) {\n              tagProps.color = color[0]\n              tagStyle.color = color[1]\n            } else if (color && typeof color === 'string') {\n              tagProps.color = color\n            }\n          }\n          tags.push(h('a-tag', {\n            props: tagProps,\n            style: tagStyle,\n          }, [tag]))\n        }\n      }\n      return tags\n    },\n  },\n  render(h) {\n    return h('div', {}, [\n      this.renderTags(h)\n    ])\n  },\n}\n\n// tags 组件的输入框\nexport const TagsInputCell = {\n  name: 'JVxeTagsInputCell',\n  mixins: [JVxeCellMixins],\n  data() {\n    return {\n      innerTagValue: '',\n    }\n  },\n  watch: {\n    innerValue: {\n      immediate: true,\n      handler(value) {\n        if (value !== this.innerTagValue) {\n          this.handleInputChange(value)\n        }\n      },\n    },\n  },\n  methods: {\n\n    handleInputChange(value, event) {\n      this.innerTagValue = replaceValue(value, event)\n      this.handleChangeCommon(this.innerTagValue)\n      return this.innerTagValue\n    },\n\n  },\n  render(h) {\n    return h('a-input', {\n      props: {\n        value: this.innerValue,\n        ...this.cellProps\n      },\n      on: {\n        change: (event) => {\n          let {target, target: {value}} = event\n          let newValue = this.handleInputChange(value, event)\n          if (newValue !== value) {\n            target.value = newValue\n          }\n        }\n      },\n    })\n  },\n}\n\n// 将值每隔两位加上一个分号\nfunction replaceValue(value, event) {\n  if (value) {\n    // 首先去掉现有的分号\n    value = value.replace(/;/g, '')\n    // 然后再遍历添加分号\n    let rv = ''\n    let splitArr = value.split('')\n    let count = 0\n    splitArr.forEach((val, index) => {\n      rv += val\n      let position = index + 1\n      if (position % 2 === 0 && position < splitArr.length) {\n        count++\n        rv += ';'\n      }\n    })\n    if (event && count > 0) {\n      let {target, target: {selectionStart}} = event\n      target.selectionStart = selectionStart + count\n      target.selectionEnd = selectionStart + count\n    }\n    return rv\n  }\n  return ''\n}\n"],"mappings":"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","ignoreList":[]}]}