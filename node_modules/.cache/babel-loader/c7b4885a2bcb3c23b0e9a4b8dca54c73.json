{"remainingRequest":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\work-25\\知识库系统\\admin\\src\\views\\system\\modules\\SysPositionModal.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\work-25\\知识库系统\\admin\\src\\views\\system\\modules\\SysPositionModal.vue","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import pick from 'lodash.pick';\nimport { httpAction } from '@/api/manage';\nimport { duplicateCheck } from '@/api/api';\nimport JDictSelectTag from '@/components/dict/JDictSelectTag';\nvar validatorCodeTimer = null;\nexport default {\n  name: 'SysPositionModal',\n  components: {\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    var _this = this;\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        code: [{\n          required: true,\n          message: '请输入职务编码'\n        }, {\n          validator: function validator(rule, value, callback) {\n            // 函数消抖的简单实现，防止一段时间内发送多次请求\n            if (validatorCodeTimer) {\n              // 停止上次开启的定时器\n              clearTimeout(validatorCodeTimer);\n            }\n            validatorCodeTimer = setTimeout(function () {\n              duplicateCheck({\n                tableName: 'sys_position',\n                fieldName: 'code',\n                fieldVal: value,\n                dataId: _this.model.id\n              }).then(function (res) {\n                if (res.success) {\n                  callback();\n                } else {\n                  callback(res.message);\n                }\n              }).catch(console.error);\n            }, 300);\n          }\n        }],\n        name: [{\n          required: true,\n          message: '请输入职务名称'\n        }],\n        postRank: [{\n          required: true,\n          message: '请选择职级'\n        }]\n      },\n      url: {\n        add: '/sys/position/add',\n        edit: '/sys/position/edit'\n      },\n      readOnly: false\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      if (record.id) {\n        this.readOnly = true;\n      } else {\n        this.readOnly = false;\n      }\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.$refs.form.resetFields();\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n      var that = this;\n      // 触发表单验证\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n          httpAction(httpurl, _this2.model, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",{"version":3,"names":["pick","httpAction","duplicateCheck","JDictSelectTag","validatorCodeTimer","name","components","data","_this","title","visible","model","labelCol","xs","span","sm","wrapperCol","confirmLoading","validatorRules","code","required","message","validator","rule","value","callback","clearTimeout","setTimeout","tableName","fieldName","fieldVal","dataId","id","then","res","success","catch","console","error","postRank","url","add","edit","readOnly","created","methods","record","Object","assign","close","$emit","$refs","form","resetFields","handleOk","_this2","that","validate","valid","httpurl","method","$message","warning","finally","handleCancel"],"sources":["src/views/system/modules/SysPositionModal.vue"],"sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :maskClosable=\"false\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form-model ref=\"form\" :model=\"model\" :rules=\"validatorRules\">\n\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"code\"\n          required\n          label=\"职务编码\">\n          <a-input placeholder=\"请输入职务编码\" v-model=\"model.code\" :read-only=\"readOnly\"/>\n        </a-form-model-item>\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"name\"\n          required\n          label=\"职务名称\">\n          <a-input placeholder=\"请输入职务名称\" v-model=\"model.name\"/>\n        </a-form-model-item>\n        <a-form-model-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          prop=\"postRank\"\n          required\n          label=\"职级\"\n        >\n          <j-dict-select-tag\n            placeholder=\"请选择职级\"\n            dictCode=\"position_rank\"\n            v-model=\"model.postRank\"\n          />\n        </a-form-model-item>\n\n      </a-form-model>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import { httpAction } from '@/api/manage'\n  import { duplicateCheck } from '@/api/api'\n  import JDictSelectTag from '@/components/dict/JDictSelectTag'\n\n  let validatorCodeTimer = null\n\n  export default {\n    name: 'SysPositionModal',\n    components: { JDictSelectTag },\n    data() {\n      return {\n        title: '操作',\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        confirmLoading: false,\n        validatorRules: {\n          code: [\n              { required: true, message: '请输入职务编码' },\n              {\n                validator: (rule, value, callback) => {\n                  // 函数消抖的简单实现，防止一段时间内发送多次请求\n                  if (validatorCodeTimer) {\n                    // 停止上次开启的定时器\n                    clearTimeout(validatorCodeTimer)\n                  }\n                  validatorCodeTimer = setTimeout(() => {\n                    duplicateCheck({\n                      tableName: 'sys_position',\n                      fieldName: 'code',\n                      fieldVal: value,\n                      dataId: this.model.id\n                    }).then((res) => {\n                      if (res.success) {\n                        callback()\n                      } else {\n                        callback(res.message)\n                      }\n                    }).catch(console.error)\n                  }, 300)\n                }\n              }\n            ],\n          name: [{ required: true, message: '请输入职务名称' }] ,\n          postRank:  [{ required: true, message: '请选择职级' }] ,\n        },\n        url: {\n          add: '/sys/position/add',\n          edit: '/sys/position/edit',\n        },\n        readOnly:false\n      }\n    },\n    created() {\n    },\n    methods: {\n      add() {\n        this.edit({})\n      },\n      edit(record) {\n        this.model = Object.assign({}, record)\n        this.visible = true\n        if(record.id){\n          this.readOnly=true\n        }else{\n          this.readOnly=false\n        }\n      },\n      close() {\n        this.$emit('close')\n        this.visible = false\n        this.$refs.form.resetFields();\n      },\n      handleOk() {\n        const that = this\n        // 触发表单验证\n        this.$refs.form.validate(valid => {\n          if (valid) {\n            that.confirmLoading = true\n            let httpurl = ''\n            let method = ''\n            if (!this.model.id) {\n              httpurl += this.url.add\n              method = 'post'\n            } else {\n              httpurl += this.url.edit\n              method = 'put'\n            }\n\n            httpAction(httpurl, this.model, method).then((res) => {\n              if (res.success) {\n                that.$message.success(res.message)\n                that.$emit('ok')\n              } else {\n                that.$message.warning(res.message)\n              }\n            }).finally(() => {\n              that.confirmLoading = false\n              that.close()\n            })\n          }else{\n            return false;\n          }\n        })\n      },\n      handleCancel() {\n        this.close()\n      },\n\n\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>\n"],"mappings":"AAkDA,OAAAA,IAAA;AACA,SAAAC,UAAA;AACA,SAAAC,cAAA;AACA,OAAAC,cAAA;AAEA,IAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH,cAAA,EAAAA;EAAA;EACAI,IAAA,WAAAA,KAAA;IAAA,IAAAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,KAAA;MACAC,QAAA;QACAC,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAE,UAAA;QACAH,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAG,cAAA;MACAC,cAAA;QACAC,IAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;QAAA,GACA;UACAC,SAAA,WAAAA,UAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA;YACA,IAAArB,kBAAA;cACA;cACAsB,YAAA,CAAAtB,kBAAA;YACA;YACAA,kBAAA,GAAAuB,UAAA;cACAzB,cAAA;gBACA0B,SAAA;gBACAC,SAAA;gBACAC,QAAA,EAAAN,KAAA;gBACAO,MAAA,EAAAvB,KAAA,CAAAG,KAAA,CAAAqB;cACA,GAAAC,IAAA,WAAAC,GAAA;gBACA,IAAAA,GAAA,CAAAC,OAAA;kBACAV,QAAA;gBACA;kBACAA,QAAA,CAAAS,GAAA,CAAAb,OAAA;gBACA;cACA,GAAAe,KAAA,CAAAC,OAAA,CAAAC,KAAA;YACA;UACA;QACA,EACA;QACAjC,IAAA;UAAAe,QAAA;UAAAC,OAAA;QAAA;QACAkB,QAAA;UAAAnB,QAAA;UAAAC,OAAA;QAAA;MACA;MACAmB,GAAA;QACAC,GAAA;QACAC,IAAA;MACA;MACAC,QAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA,GACA;EACAC,OAAA;IACAJ,GAAA,WAAAA,IAAA;MACA,KAAAC,IAAA;IACA;IACAA,IAAA,WAAAA,KAAAI,MAAA;MACA,KAAAnC,KAAA,GAAAoC,MAAA,CAAAC,MAAA,KAAAF,MAAA;MACA,KAAApC,OAAA;MACA,IAAAoC,MAAA,CAAAd,EAAA;QACA,KAAAW,QAAA;MACA;QACA,KAAAA,QAAA;MACA;IACA;IACAM,KAAA,WAAAA,MAAA;MACA,KAAAC,KAAA;MACA,KAAAxC,OAAA;MACA,KAAAyC,KAAA,CAAAC,IAAA,CAAAC,WAAA;IACA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,MAAA;MACA,IAAAC,IAAA;MACA;MACA,KAAAL,KAAA,CAAAC,IAAA,CAAAK,QAAA,WAAAC,KAAA;QACA,IAAAA,KAAA;UACAF,IAAA,CAAAvC,cAAA;UACA,IAAA0C,OAAA;UACA,IAAAC,MAAA;UACA,KAAAL,MAAA,CAAA5C,KAAA,CAAAqB,EAAA;YACA2B,OAAA,IAAAJ,MAAA,CAAAf,GAAA,CAAAC,GAAA;YACAmB,MAAA;UACA;YACAD,OAAA,IAAAJ,MAAA,CAAAf,GAAA,CAAAE,IAAA;YACAkB,MAAA;UACA;UAEA3D,UAAA,CAAA0D,OAAA,EAAAJ,MAAA,CAAA5C,KAAA,EAAAiD,MAAA,EAAA3B,IAAA,WAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,OAAA;cACAqB,IAAA,CAAAK,QAAA,CAAA1B,OAAA,CAAAD,GAAA,CAAAb,OAAA;cACAmC,IAAA,CAAAN,KAAA;YACA;cACAM,IAAA,CAAAK,QAAA,CAAAC,OAAA,CAAA5B,GAAA,CAAAb,OAAA;YACA;UACA,GAAA0C,OAAA;YACAP,IAAA,CAAAvC,cAAA;YACAuC,IAAA,CAAAP,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAe,YAAA,WAAAA,aAAA;MACA,KAAAf,KAAA;IACA;EAGA;AACA","ignoreList":[]}]}