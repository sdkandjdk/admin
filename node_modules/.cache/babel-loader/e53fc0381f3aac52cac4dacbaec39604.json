{"remainingRequest":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\work-25\\知识库系统\\admin\\src\\views\\system\\modules\\PasswordModal.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\work-25\\知识库系统\\admin\\src\\views\\system\\modules\\PasswordModal.vue","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\work-25\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { changePassword } from '@/api/api';\nexport default {\n  name: \"PasswordModal\",\n  data: function data() {\n    return {\n      visible: false,\n      confirmLoading: false,\n      confirmDirty: false,\n      validatorRules: {\n        password: {\n          rules: [{\n            required: true,\n            pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n            message: '密码由8位数字、大小写字母和特殊符号组成!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        },\n        confirmpassword: {\n          rules: [{\n            required: true,\n            message: '请重新输入登录密码!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        }\n      },\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this)\n    };\n  },\n  created: function created() {\n    console.log(\"created\");\n  },\n  methods: {\n    show: function show(username) {\n      var _this = this;\n      this.form.resetFields();\n      this.visible = true;\n      this.model.username = username;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue({\n          username: username\n        });\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n      // 触发表单验证\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          _this2.confirmLoading = true;\n          var formData = Object.assign(_this2.model, values);\n          changePassword(formData).then(function (res) {\n            if (res.success) {\n              _this2.$message.success(res.message);\n              _this2.$emit('ok');\n            } else {\n              _this2.$message.warning(res.message);\n            }\n          }).finally(function () {\n            _this2.confirmLoading = false;\n            _this2.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var form = this.form;\n      var confirmpassword = form.getFieldValue('confirmpassword');\n      console.log(\"confirmpassword==>\", confirmpassword);\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      var form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    }\n  }\n};",{"version":3,"names":["changePassword","name","data","visible","confirmLoading","confirmDirty","validatorRules","password","rules","required","pattern","message","validator","validateToNextPassword","confirmpassword","compareToFirstPassword","model","labelCol","xs","span","sm","wrapperCol","form","$form","createForm","created","console","log","methods","show","username","_this","resetFields","$nextTick","setFieldsValue","close","$emit","disableSubmit","selectedRole","handleSubmit","_this2","validateFields","err","values","formData","Object","assign","then","res","success","$message","warning","finally","handleCancel","rule","value","callback","getFieldValue","force","handleConfirmBlur","e","target"],"sources":["src/views/system/modules/PasswordModal.vue"],"sourcesContent":["<template>\n  <a-modal\n    title=\"重新设定密码\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleSubmit\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n    style=\"top:20px;\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input placeholder=\"请输入用户账号\" v-decorator=\"[ 'username', {}]\" :readOnly=\"true\"/>\n        </a-form-item>\n\n        <a-form-item label=\"登录密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\n          <a-input type=\"password\" placeholder=\"请输入登录密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\n        </a-form-item>\n\n        <a-form-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登录密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import {changePassword} from '@/api/api'\n\n  export default {\n    name: \"PasswordModal\",\n    data () {\n      return {\n        visible: false,\n        confirmLoading: false,\n        confirmDirty: false,\n        validatorRules:{\n          password:{\n            rules: [{\n              required: true,\n              pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n              message: '密码由8位数字、大小写字母和特殊符号组成!'\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          },\n          confirmpassword:{\n            rules: [{\n              required: true, message: '请重新输入登录密码!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          },\n        },\n\n        model: {},\n\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        form:this.$form.createForm(this)\n      }\n    },\n    created () {\n      console.log(\"created\");\n    },\n\n    methods: {\n      show (username) {\n        this.form.resetFields();\n        this.visible = true;\n        this.model.username = username;\n        this.$nextTick(() => {\n          this.form.setFieldsValue({username:username});\n        });\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.selectedRole = [];\n      },\n      handleSubmit () {\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            this.confirmLoading = true;\n            let formData = Object.assign(this.model, values);\n            changePassword(formData).then((res)=>{\n              if(res.success){\n                this.$message.success(res.message);\n                this.$emit('ok');\n              }else{\n                this.$message.warning(res.message);\n              }\n            }).finally(() => {\n              this.confirmLoading = false;\n              this.close();\n            });\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      validateToNextPassword  (rule, value, callback) {\n        const form = this.form;\n        const confirmpassword=form.getFieldValue('confirmpassword');\n        console.log(\"confirmpassword==>\",confirmpassword);\n        if (value && confirmpassword && value !== confirmpassword) {\n          callback('两次输入的密码不一样！');\n        }\n        if (value && this.confirmDirty) {\n          form.validateFields(['confirm'], { force: true })\n        }\n        callback();\n      },\n      compareToFirstPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      handleConfirmBlur  (e) {\n        const value = e.target.value\n        this.confirmDirty = this.confirmDirty || !!value\n      }\n    }\n  }\n</script>"],"mappings":"AAgCA,SAAAA,cAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;MACAC,YAAA;MACAC,cAAA;QACAC,QAAA;UACAC,KAAA;YACAC,QAAA;YACAC,OAAA;YACAC,OAAA;UACA;YACAC,SAAA,OAAAC;UACA;QACA;QACAC,eAAA;UACAN,KAAA;YACAC,QAAA;YAAAE,OAAA;UACA;YACAC,SAAA,OAAAG;UACA;QACA;MACA;MAEAC,KAAA;MAEAC,QAAA;QACAC,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAE,UAAA;QACAH,EAAA;UAAAC,IAAA;QAAA;QACAC,EAAA;UAAAD,IAAA;QAAA;MACA;MACAG,IAAA,OAAAC,KAAA,CAAAC,UAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EAEAC,OAAA;IACAC,IAAA,WAAAA,KAAAC,QAAA;MAAA,IAAAC,KAAA;MACA,KAAAT,IAAA,CAAAU,WAAA;MACA,KAAA7B,OAAA;MACA,KAAAa,KAAA,CAAAc,QAAA,GAAAA,QAAA;MACA,KAAAG,SAAA;QACAF,KAAA,CAAAT,IAAA,CAAAY,cAAA;UAAAJ,QAAA,EAAAA;QAAA;MACA;IACA;IACAK,KAAA,WAAAA,MAAA;MACA,KAAAC,KAAA;MACA,KAAAjC,OAAA;MACA,KAAAkC,aAAA;MACA,KAAAC,YAAA;IACA;IACAC,YAAA,WAAAA,aAAA;MAAA,IAAAC,MAAA;MACA;MACA,KAAAlB,IAAA,CAAAmB,cAAA,WAAAC,GAAA,EAAAC,MAAA;QACA,KAAAD,GAAA;UACAF,MAAA,CAAApC,cAAA;UACA,IAAAwC,QAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAN,MAAA,CAAAxB,KAAA,EAAA2B,MAAA;UACA3C,cAAA,CAAA4C,QAAA,EAAAG,IAAA,WAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,OAAA;cACAT,MAAA,CAAAU,QAAA,CAAAD,OAAA,CAAAD,GAAA,CAAArC,OAAA;cACA6B,MAAA,CAAAJ,KAAA;YACA;cACAI,MAAA,CAAAU,QAAA,CAAAC,OAAA,CAAAH,GAAA,CAAArC,OAAA;YACA;UACA,GAAAyC,OAAA;YACAZ,MAAA,CAAApC,cAAA;YACAoC,MAAA,CAAAL,KAAA;UACA;QACA;MACA;IACA;IACAkB,YAAA,WAAAA,aAAA;MACA,KAAAlB,KAAA;IACA;IACAtB,sBAAA,WAAAA,uBAAAyC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAlC,IAAA,QAAAA,IAAA;MACA,IAAAR,eAAA,GAAAQ,IAAA,CAAAmC,aAAA;MACA/B,OAAA,CAAAC,GAAA,uBAAAb,eAAA;MACA,IAAAyC,KAAA,IAAAzC,eAAA,IAAAyC,KAAA,KAAAzC,eAAA;QACA0C,QAAA;MACA;MACA,IAAAD,KAAA,SAAAlD,YAAA;QACAiB,IAAA,CAAAmB,cAAA;UAAAiB,KAAA;QAAA;MACA;MACAF,QAAA;IACA;IACAzC,sBAAA,WAAAA,uBAAAuC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAlC,IAAA,QAAAA,IAAA;MACA,IAAAiC,KAAA,IAAAA,KAAA,KAAAjC,IAAA,CAAAmC,aAAA;QACAD,QAAA;MACA;QACAA,QAAA;MACA;IACA;IACAG,iBAAA,WAAAA,kBAAAC,CAAA;MACA,IAAAL,KAAA,GAAAK,CAAA,CAAAC,MAAA,CAAAN,KAAA;MACA,KAAAlD,YAAA,QAAAA,YAAA,MAAAkD,KAAA;IACA;EACA;AACA","ignoreList":[]}]}