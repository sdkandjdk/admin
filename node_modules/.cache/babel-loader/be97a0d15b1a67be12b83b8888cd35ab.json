{"remainingRequest":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\知识库系统\\admin\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\知识库系统\\admin\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\babel.config.js","mtime":1704718216000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\知识库系统\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\知识库系统\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { neverNull } from '@/utils/util';\nimport JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\nexport default {\n  name: 'JVxeCheckboxCell',\n  mixins: [JVxeCellMixins],\n  props: {},\n  computed: {\n    bordered: function bordered() {\n      return !!this.renderOptions.bordered;\n    },\n    scrolling: function scrolling() {\n      return !!this.renderOptions.scrolling;\n    },\n    clazz: function clazz() {\n      return {\n        'j-vxe-checkbox': true,\n        'no-animation': this.scrolling\n      };\n    },\n    boxStyle: function boxStyle() {\n      var style = {};\n      // 如果有边框且未设置align属性，就强制居中\n      if (this.bordered && !this.originColumn.align) {\n        style['text-align'] = 'center';\n      }\n      return style;\n    }\n  },\n  methods: {\n    handleChange: function handleChange(event) {\n      this.handleChangeCommon(event.target.checked);\n    }\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    switches: {\n      visible: true\n    },\n    getValue: function getValue(value) {\n      var col = this.column.own;\n      // 处理 customValue\n      if (Array.isArray(col.customValue)) {\n        var customValue = getCustomValue(col);\n        if (typeof value === 'boolean') {\n          return value ? customValue[0] : customValue[1];\n        } else {\n          return value;\n        }\n      } else {\n        return value;\n      }\n    },\n    setValue: function setValue(value) {\n      var col = this.column.own;\n      // 判断是否设定了customValue（自定义值）\n      if (Array.isArray(col.customValue)) {\n        var customValue = getCustomValue(col);\n        return neverNull(value).toString() === customValue[0].toString();\n      } else {\n        return !!value;\n      }\n    },\n    createValue: function createValue(_ref) {\n      var column = _ref.column;\n      var col = column.own;\n      if (Array.isArray(col.customValue)) {\n        var customValue = getCustomValue(col);\n        return col.defaultChecked ? customValue[0] : customValue[1];\n      } else {\n        return !!col.defaultChecked;\n      }\n    }\n  }\n};\nfunction getCustomValue(col) {\n  var customTrue = neverNull(col.customValue[0], true);\n  var customFalse = neverNull(col.customValue[1], false);\n  return [customTrue, customFalse];\n}",{"version":3,"names":["neverNull","JVxeCellMixins","name","mixins","props","computed","bordered","renderOptions","scrolling","clazz","boxStyle","style","originColumn","align","methods","handleChange","event","handleChangeCommon","target","checked","enhanced","switches","visible","getValue","value","col","column","own","Array","isArray","customValue","getCustomValue","setValue","toString","createValue","_ref","defaultChecked","customTrue","customFalse"],"sources":["src/components/jeecg/JVxeTable/components/cells/JVxeCheckboxCell.vue"],"sourcesContent":["<template>\n  <div :class=\"clazz\" :style=\"boxStyle\">\n    <a-checkbox\n      ref=\"checkbox\"\n      :checked=\"innerValue\"\n      v-bind=\"cellProps\"\n      @change=\"handleChange\"\n    />\n  </div>\n</template>\n\n<script>\n  import { neverNull } from '@/utils/util'\n  import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\n  export default {\n    name: 'JVxeCheckboxCell',\n    mixins: [JVxeCellMixins],\n    props: {},\n    computed: {\n      bordered() {\n        return !!this.renderOptions.bordered\n      },\n      scrolling() {\n        return !!this.renderOptions.scrolling\n      },\n      clazz() {\n        return {\n          'j-vxe-checkbox': true,\n          'no-animation': this.scrolling\n        }\n      },\n      boxStyle() {\n        const style = {}\n        // 如果有边框且未设置align属性，就强制居中\n        if (this.bordered && !this.originColumn.align) {\n          style['text-align'] = 'center'\n        }\n        return style\n      },\n    },\n    methods: {\n      handleChange(event) {\n        this.handleChangeCommon(event.target.checked)\n      },\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      switches: {\n        visible: true,\n      },\n      getValue(value) {\n        let {own: col} = this.column\n        // 处理 customValue\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          if (typeof value === 'boolean') {\n            return value ? customValue[0] : customValue[1]\n          } else {\n            return value\n          }\n        } else {\n          return value\n        }\n      },\n      setValue(value) {\n        let {own: col} = this.column\n        // 判断是否设定了customValue（自定义值）\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          return neverNull(value).toString() === customValue[0].toString()\n        } else {\n          return !!value\n        }\n      },\n      createValue({column}) {\n        let {own: col} = column\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          return col.defaultChecked ? customValue[0] : customValue[1]\n        } else {\n          return !!col.defaultChecked\n        }\n      },\n    }\n  }\n\n  function getCustomValue(col) {\n    let customTrue = neverNull(col.customValue[0], true)\n    let customFalse = neverNull(col.customValue[1], false)\n    return [customTrue, customFalse]\n  }\n</script>\n\n<style lang=\"less\">\n  // 关闭动画，防止滚动时动态赋值出现问题\n  .j-vxe-checkbox.no-animation {\n    .ant-checkbox-inner,\n    .ant-checkbox-inner::after {\n      transition: none !important;\n    }\n  }\n</style>"],"mappings":"AAYA,SAAAA,SAAA;AACA,OAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAF,cAAA;EACAG,KAAA;EACAC,QAAA;IACAC,QAAA,WAAAA,SAAA;MACA,cAAAC,aAAA,CAAAD,QAAA;IACA;IACAE,SAAA,WAAAA,UAAA;MACA,cAAAD,aAAA,CAAAC,SAAA;IACA;IACAC,KAAA,WAAAA,MAAA;MACA;QACA;QACA,qBAAAD;MACA;IACA;IACAE,QAAA,WAAAA,SAAA;MACA,IAAAC,KAAA;MACA;MACA,SAAAL,QAAA,UAAAM,YAAA,CAAAC,KAAA;QACAF,KAAA;MACA;MACA,OAAAA,KAAA;IACA;EACA;EACAG,OAAA;IACAC,YAAA,WAAAA,aAAAC,KAAA;MACA,KAAAC,kBAAA,CAAAD,KAAA,CAAAE,MAAA,CAAAC,OAAA;IACA;EACA;EACA;EACAC,QAAA;IACAC,QAAA;MACAC,OAAA;IACA;IACAC,QAAA,WAAAA,SAAAC,KAAA;MACA,IAAAC,GAAA,QAAAC,MAAA,CAAAC,GAAA;MACA;MACA,IAAAC,KAAA,CAAAC,OAAA,CAAAJ,GAAA,CAAAK,WAAA;QACA,IAAAA,WAAA,GAAAC,cAAA,CAAAN,GAAA;QACA,WAAAD,KAAA;UACA,OAAAA,KAAA,GAAAM,WAAA,MAAAA,WAAA;QACA;UACA,OAAAN,KAAA;QACA;MACA;QACA,OAAAA,KAAA;MACA;IACA;IACAQ,QAAA,WAAAA,SAAAR,KAAA;MACA,IAAAC,GAAA,QAAAC,MAAA,CAAAC,GAAA;MACA;MACA,IAAAC,KAAA,CAAAC,OAAA,CAAAJ,GAAA,CAAAK,WAAA;QACA,IAAAA,WAAA,GAAAC,cAAA,CAAAN,GAAA;QACA,OAAAzB,SAAA,CAAAwB,KAAA,EAAAS,QAAA,OAAAH,WAAA,IAAAG,QAAA;MACA;QACA,SAAAT,KAAA;MACA;IACA;IACAU,WAAA,WAAAA,YAAAC,IAAA;MAAA,IAAAT,MAAA,GAAAS,IAAA,CAAAT,MAAA;MACA,IAAAD,GAAA,GAAAC,MAAA,CAAAC,GAAA;MACA,IAAAC,KAAA,CAAAC,OAAA,CAAAJ,GAAA,CAAAK,WAAA;QACA,IAAAA,WAAA,GAAAC,cAAA,CAAAN,GAAA;QACA,OAAAA,GAAA,CAAAW,cAAA,GAAAN,WAAA,MAAAA,WAAA;MACA;QACA,SAAAL,GAAA,CAAAW,cAAA;MACA;IACA;EACA;AACA;AAEA,SAAAL,eAAAN,GAAA;EACA,IAAAY,UAAA,GAAArC,SAAA,CAAAyB,GAAA,CAAAK,WAAA;EACA,IAAAQ,WAAA,GAAAtC,SAAA,CAAAyB,GAAA,CAAAK,WAAA;EACA,QAAAO,UAAA,EAAAC,WAAA;AACA","ignoreList":[]}]}